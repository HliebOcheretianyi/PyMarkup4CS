,Name,Result,Description,id
0,750InsPremAutocivilka,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
","Код знаходить програму з кодом типу страхування ""247"" у продукті, і якщо така існує та є платіжні періоди, обчислює загальну суму запланованих платежів по цій програмі та повертає її у форматі з двома десятковими знаками. Якщо умови не виконані, результат дорівнює ""---"".",0
1,750InsPremAsist,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""148"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
","Код обчислює загальну суму запланованих платежів по програмі з кодом типу страхування ""148"" та повертає її у форматі з двома десятковими знаками; якщо дані відсутні — повертає ""---"".",1
2,704LandAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Земельна ділянка"");
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
		if (estate.PostAddressObject != null)
		{
			__Result = __Result + "", "" + estate.PostAddressObject.PostCode + "" "" + estate.PostAddressObject.GetParentRegionName() + "", "" + estate.PostAddressObject.GetSettlementName() + "", "" + estate.PostAddressObject.GetStreetTypeName() + "" "" + estate.PostAddressObject.Street + "", б. "" + estate.PostAddressObject.House;
		}
		else
		{
					__Result = __Result + "", "" + estate.PostAddressObject.PostCode + "" "" + estate.PostAddressObject.GetParentRegionName() + "", "" + estate.PostAddressObject.GetRegionName() + "", "" + estate.PostAddressObject.GetSettlementName() + "", "" + estate.PostAddressObject.GetStreetTypeName() + "" "" + estate.PostAddressObject.Street + "", б. "" + estate.PostAddressObject.House;
		}
	}
}
","Код формує текстову адресу земельної ділянки з програми з кодом ""396"", якщо така існує і має відповідний об'єкт страхування та адресу.",2
3,739ParamSport,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Відпочинок з риз. видами спорта"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() != ""False"")
		{
			__Result = ""Так"";
		}
	}
}
","Код перевіряє, чи в програмі GetProgramMed встановлений параметр ""Відпочинок з риз. видами спорта"" в значення, відмінне від ""False"", і повертає ""Так"" або ""Ні"" відповідно.",3
4,769Rate249,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""249"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Договору"";
	}
	else
	{
			decimal value = program.InsuranceRate;
		__Result = value.ToString(""N4"");
	}
}
","Код перевіряє кількість об'єктів страхування в програмі з кодом ""249""; якщо їх більше одного — повертає текст ""Згідно з Додатком 2 до Договору"", інакше — повертає страхову ставку з точністю до чотирьох знаків.",4
5,769Rate250,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Договору"";
	}
	else
	{
			decimal value = program.InsuranceRate;
		__Result = value.ToString(""N4"");
	}
}
","Код перевіряє кількість об'єктів страхування в програмі з кодом ""250""; якщо їх більше одного — повертає фіксований текст, інакше — страхову ставку.",5
6,769InsuranceAmountforPropertyon1,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""249"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Договору"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Ліміт відповідальності по 1 потерпілій особі за шкоду, заподіяну багажу"");
			if (attribute != null)
			{
				__Result = attribute.GetValueCaption().ToString();
			}
		}
	}
}
","Код перевіряє кількість об'єктів страхування в програмі з кодом ""249""; якщо кількість об'єктів ≥ 2 — повертає фіксований текст, інакше — повертає значення атрибуту ""Ліміт відповідальності по 1 потерпілій особі за шкоду, заподіяну багажу"", якщо він знайдений.",6
7,717LimitOnOneInsuranceCase,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""521"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Ліміт на один страховий випадок (%)"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
","Код шукає програму з кодом ""521"" і повертає значення параметра ""Ліміт на один страховий випадок (%)"", якщо він існує.",7
8,717CourtDecisionDuringContract,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""521"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Цивільно-правова відповідальність Страхувальника"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""За рішенням суду в період дії договору"")
	{
		__Result = ""Так"";
	}
}
","Код перевіряє, чи параметр ""Цивільно-правова відповідальність Страхувальника"" у програмі ""521"" дорівнює ""За рішенням суду в період дії договору"", і повертає ""Так"" або ""Ні"".",8
9,717CourtDecision,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""521"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Цивільно-правова відповідальність Страхувальника"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""За рішенням суду"")
	{
		__Result = ""Так"";
	}
}
","Код перевіряє, чи параметр ""Цивільно-правова відповідальність Страхувальника"" у програмі ""521"" містить значення ""За рішенням суду"", і повертає ""Так"" або ""Ні"".",9
10,717InsurersDecision,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""521"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Цивільно-правова відповідальність Страхувальника"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""За рішенням страховика"")
	{
		__Result = ""Так"";
	}
}
","Код перевіряє, чи параметр ""Цивільно-правова відповідальність Страхувальника"" у програмі ""521"" має значення ""За рішенням страховика""; якщо так — повертає ""Так"", інакше — ""Ні"".",10
11,708CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом \""Особиста безпека\"", код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту \""Особиста безпека\"" разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт \""Особиста безпека\"", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/bca8aadf-d06f-44b4-ab8a-9464198a672f'>https://apifalcon.oranta.ua/files/bca8aadf-d06f-44b4-ab8a-9464198a672f<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов страхового продукту \""Особиста безпека\"" № 9.1.24, які розташовані за посиланням : <a href='https://apifalcon.oranta.ua/files/bd44274f-2c74-476a-9df9-4d79f066148a'>https://apifalcon.oranta.ua/files/bd44274f-2c74-476a-9df9-4d79f066148a<a/></br><br/>Пропозиції (Оферти) укласти Договір за страховим продуктом \""Особиста безпека\"" (код страхового продукту 708), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/f33fdd60-32cc-4276-8aa4-468d472e031f'>https://apifalcon.oranta.ua/files/f33fdd60-32cc-4276-8aa4-468d472e031f<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
","Код формує привітальний лист для страхувальника з детальною інформацією про індивідуальну пропозицію, умови договору, посилання на документи та інструкції щодо підписання та оплати.",11
12,717Franshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""521"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна майну"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString();
				}
			}
		}
	}
}
","Код шукає параметр ""Франшиза універсальна"" по ризику ""Шкода, заподіяна майну"" у програмі ""521"" і повертає його значення, якщо знайдено; інакше — ""---"".",12
13,717Rate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""521"");
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N4"");
}
","Код повертає страхову ставку програми з кодом ""521"" у форматі з чотирма десятковими знаками; якщо програма не знайдена — повертає ""---"".",13
14,717InsurerIdentificationCode,"__Result = ""---"";
if (__Product.Insurer.Face.PersonTypeID != 2)
{
	if (__Product.Insurer.Face.IdentificationCode != null)
	{
		__Result = string.Format(""{0}"", __Product.Insurer.Face.IdentificationCode);
	}
}
","Код повертає ідентифікаційний код страхувальника-фізичної особи, якщо страхувальник не є юридичною особою; інакше — ""---"".",14
15,717InsurerEDRPOU,"__Result = ""---"";
if (__Product.Insurer.Face.PersonTypeID == 2)
{
	if (__Product.Insurer.Face.EDRPOU != null)
	{
		__Result = string.Format(""{0}"", __Product.Insurer.Face.EDRPOU);
	}
}
","Код повертає код ЄДРПОУ страхувальника, якщо це юридична особа; інакше — ""---"".",15
16,708DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
","Код витягує параметр ""Адреса відокремленого підрозділу"" із програми з кодом ""102"" і повертає його значення.",16
17,750InsTariffAutocivilka,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N6"");
}
","Код повертає страхову ставку програми з кодом ""247"" з точністю до шести десяткових знаків; якщо програма відсутня — повертає ""---"".",17
18,750InsTariffAsist,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""148"");
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N6"");
}
","Код повертає страхову ставку програми з кодом ""148"" з точністю до шести десяткових знаків; якщо програма відсутня — повертає ""---"".",18
19,750InsSumAutocivilka,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
","Код повертає значення параметра ""Страхова сума"" для програми з кодом ""247"", або ""---"", якщо параметр або програма відсутні.",19
20,750InsSumAsist,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""148"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,20
21,769SumInsured1orMorePassengers,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Договору"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Ліміт відповідальності по 1 потерпілій особі за шкоду, заподіяну життю та здоров’ю пасажирів"");
			if (attribute != null)
			{
				__Result = attribute.GetValueCaption().ToString();
			}
		}
	}
}
",,21
22,769SP249,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""249"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,22
23,769SP250,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,23
24,769SS249,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""249"");
if (program != null)
{
	__Result = program.CostValue.ToString(""N2"");
}
",,24
25,769SS250,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	__Result = program.CostValue.ToString(""N2"");
}
",,25
26,769SpecialConditions,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""12 платежів"")
	{
		__Result = ""Дата сплати частини страхової премії: П'ятий та наступні платежі сплачується до "" + __Product.PaymentPeriods[1].PlanDate.AddSeconds((double)0).ToString(""dd"") + "" числа кожного місяця. Останній платіж - "" + __Product.PaymentPeriods[11].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."";
	}
}
",,26
27,769AreaOfAction,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Територія дії"");
	if (param != null)
	{
		__Result = param.ParameterValue.ToString();
	}
}
",,27
28,InsurerSignDocument,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null && face.PersonTypeID != 2)
{
	Workflow.DTO.Models.Document document = __Product.Insurer.FaceDocument;
	if (document != null)
	{
		__Result = document.GetDocumentTypeName();
	}
	if (document.Number != null)
	{
		__Result = __Result + "" номер "" + document.Number;
	}
	if (!string.IsNullOrEmpty(document.IssuedBy))
	{
		__Result = __Result + "" виданий "" + document.IssuedBy;
	}
	if (document.IssuedDate != null)
	{
		__Result = __Result + "" від "" + document.IssuedDate.Value.ToShortDateString() + "" р."";
	}
}
",,28
29,704LetterSubject,"__Result = ""Договір страхування \""Майно у заставі\"" номер "" + __Product.PolisNumber;
",,29
30,704Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Майно у заставі\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,30
31,SMS704,"__Result = ""Разовий ідентифікатор для підписання договору Майно у заставі: {smscode}"";
",,31
32,704CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом МАЙНО У ЗАСТАВІ, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту МАЙНО У ЗАСТАВІ за програмою страхування нерухомого майна фізичних осіб в заставі, програма страхування «єОСЕЛЯ» разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт МАЙНО У ЗАСТАВІ, який знаходиться за наступним посиланням: <a href='https://oranta.ua/info/all-products/mainotaskombank'>https://oranta.ua/info/all-products/mainotaskombank<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника 1, яка знаходиться за наступним посиланням: "" + AgentBankCoverLetter + ""</br><br/>Інформація про страхового посередника 2, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов № 43.1.24 страхового продукту МАЙНО У ЗАСТАВІ, що розташовані за посиланням: ДОДАТИ ПОСИЛАННЯ</br><br/>Пропозиції (Оферти) укласти договір, страхового продукту МАЙНО У ЗАСТАВІ (код страхового продукту 704), яка розташована за посиланням: ДОДАТИ ПОСИЛАННЯ та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,32
33,AgentBankCoverLetter,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")) && agentCommission != null && agentCommission.Agent != null)
		{
			__Result = ""<a href='https://oranta.ua/info/partners/list/"" + agentCommission.Agent.IdentificationCodeEDRPOU + ""'>https://oranta.ua/info/partners/list/"" + agentCommission.Agent.IdentificationCodeEDRPOU + ""<a/>"";
		}
		else
		{
					if (agent != null && (agent.AgentChannels == null || agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")) && agentCommission != null && agentCommission.Agent != null)
			{
				__Result = ""Відсутній"";
			}
		}
	}
}
",,33
34,AgentBankCodeNBU,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				__Result = agent.Code;
			}
		}
	}
}
",,34
35,AgentBankDoc,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				Workflow.DTO.Models.Document doc = agent.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Агентський договір"" && i.EndDate != null && DateTime.GetNow() <= i.EndDate.Value);
				if (doc != null)
				{
					__Result = doc.GetDocumentTypeName();
					if (doc.Number != null)
					{
						__Result = __Result + "" № "" + doc.Number;
					}
					if (doc.IssuedDate != null)
					{
						__Result = __Result + "" від "" + doc.IssuedDate.Value.ToShortDateString() + "" р."";
					}
					if (doc.StartDate != null)
					{
						__Result = __Result + "" від "" + doc.StartDate.Value.ToShortDateString() + "" р."";
					}
				}
			}
		}
	}
}
",,35
36,AgentBankINN,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				__Result = agentCommission.Agent.IdentificationCodeEDRPOU;
			}
		}
	}
}
",,36
37,AgentBankAddressFlat,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.Flat;
			}
		}
	}
}
",,37
38,AgentBankAddressHouse,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.House;
			}
		}
	}
}
",,38
39,AgentBankAddressStreet,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.Street;
			}
		}
	}
}
",,39
40,AgentBankAddressFullSettlementName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.GetFullSettlementName();
			}
		}
	}
}
",,40
41,AgentBankAddressRegionName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.GetRegionName();
			}
		}
	}
}
",,41
42,AgentBankFullName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Банк"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission.Agent.IsJuridicalPerson && !agentCommission.Agent.IsPerson)
			{
				__Result = agentCommission.Agent.FullName;
			}
			else
			{
							__Result = agentCommission.Agent.Lastname + "" "" + agentCommission.Agent.Firstname + "" "" + agentCommission.Agent.Secondname;
			}
		}
	}
}
",,42
43,ProductComment,"__Result = """";
if (__Product.Comment != null)
{
	if (!string.IsNullOrEmpty(__Product.Comment))
	{
		__Result = __Product.Comment;
	}
}
",,43
44,717DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""521"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,44
45,765AreaOfAction,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""101"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Територія дії"");
	if (param != null)
	{
		__Result = param.ParameterValue.ToString();
	}
}
",,45
46,703LetterSubject,"__Result = ""Договір страхування \""Подорожуючі за кордоном\"" номер "" + __Product.PolisNumber;
",,46
47,703Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Подорожуючі за кордоном\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,47
48,219CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом Автопарасолька, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту Автопарасолька разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт Автопарасолька, який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4'>https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов № 19.2.25 страхового продукту Автопарасолька, які розташовані за посиланням: <a href='https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7'>https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7<a/></br><br/>Пропозиції (Оферти) укласти договір, страхового продукту Автопарасолька (код страхового продукту 219), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615'>https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,48
49,731MileageDeductible,"__Result = ""Так"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Додаткова франшиза за перепробіг"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Відсутня"")
	{
		__Result = ""Ні"";
	}
}
",,49
50,731MilitaryActionsCaption,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Покриття за умовою «ВОЄННІ ДІЇ»"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""В розмірі 15% від страхової суми, але не більше 300 000 грн"")
		{
			__Result = ""дорівнює 15% від страхової суми, але не більше 300 000,00 грн агрегатно за Договором за цією умовою"";
		}
		if (param.GetParameterValueCaption().ToString() == ""В розмірі повної вартості ТЗ, але не більше 2 млн грн"")
		{
			__Result = ""дорівнює страховій сумі, зазначеній  в п. 6.3 Частини 1 Договору, але не більше 2 000 000,00 грн"";
		}
	}
}
",,50
51,OrantaTravelTerritory3OrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Територія дії договору"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""Територія III"" || param.GetParameterValueCaption().ToString() == ""Територія III (всі країни)"")
		{
			__Result = ""V"";
		}
	}
}
",,51
52,MTPLAgentIKPFullName,"__Result = """";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission.Agent.IsJuridicalPerson && !agentCommission.Agent.IsPerson)
			{
				__Result = ""ПІБ/Назва "" + agentCommission.Agent.FullName;
			}
			else
			{
							__Result = ""ПІБ/Назва "" + agentCommission.Agent.Lastname + "" "" + agentCommission.Agent.Firstname + "" "" + agentCommission.Agent.Secondname;
			}
		}
	}
}
",,52
53,AgentIKPCodeNBU,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				__Result = agent.Code;
			}
		}
	}
}
",,53
54,NotOnePaymentPart,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() != ""1 платіж"")
	{
		__Result = ""Так"";
	}
}
",,54
55,764InsSumInWords,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Генерального Договору"";
	}
	else
	{
			decimal value = __Product.InsuranceSumUkr;
		__Result = __Context.MoneyPhrase(value, ""UAH"", false);
	}
}
",,55
56,764Premium,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Генерального Договору"";
	}
	else
	{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == program.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,56
57,764Rate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (prog != null)
{
	int count = prog.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Генерального Договору"";
	}
	else
	{
			decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,57
58,764InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно з Додатком 2 до Генерального Договору"";
	}
	else
	{
			__Result = __Product.InsuranceSumUkr.ToString(""N2"");
	}
}
",,58
59,765SpecialConditions,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""101"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""12 платежів"")
	{
		__Result = ""Дата сплати частини страхової премії: П'ятий та наступні платежі сплачується до "" + __Product.PaymentPeriods[1].PlanDate.AddSeconds((double)0).ToString(""dd"") + "" числа кожного місяця. Останній платіж - "" + __Product.PaymentPeriods[11].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."";
	}
}
",,59
60,765CountObjects,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""101"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	__Result = count.ToString();
}
",,60
61,765DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""101"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,61
62,765Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""101"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,62
63,ParamPolisMTPLDate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ дата видачі"");
	if (param != null)
	{
		string value = param.GetParameterValueCaption().ToString();
		__Result = value.Substring(0, value.IndexOf("" ""));
	}
}
",,63
64,ParamPolisMTPL,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
	if (param != null)
	{
		__Result = param.ParameterValue.ToString();
	}
}
",,64
65,ParametrDirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,65
66,ParametrDirectorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,66
67,754InsSumRiskHealth,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""244"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума встановлюється"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума по ризику Шкода, заподіяна життю або здоров'ю"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""За кожним ризиком окремо"")
	{
		__Result = param2.GetParameterValueCaption().ToString();
	}
}
",,67
68,754InsSumRiskProperty,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""244"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума встановлюється"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума по ризику Шкода, заподіяна майну"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""За кожним ризиком окремо"")
	{
		__Result = param2.GetParameterValueCaption().ToString();
	}
}
",,68
69,764TemporaryDisability,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName().Trim() == ""Тимчасова втрата працездатності внаслідок хвороби"" && c.CoverLimit != null));
	if (insObj != null)
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,69
70,764DeathRisk,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName().Trim() == ""Смерть внаслідок хвороби"" && c.CoverLimit != null));
	if (insObj != null)
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,70
71,764RadiationRisk,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName().Trim() == ""Стійка втрата працездатності внаслідок хвороби (Інвалідність):І група інвалідності"" && c.CoverLimit != null));
	if (insObj != null)
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,71
72,769CountObjects,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	__Result = count.ToString();
}
",,72
73,769DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,73
74,769Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""250"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,74
75,AgentCodeNBU,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				__Result = agent.Code;
			}
		}
	}
}
",,75
76,708FirstPaymentPartInWords,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
if (products[1].GetProductTypeCode() == ""708"")
{
	decimal value = products[1].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value);
	if (value != null)
	{
		__Result = __Context.MoneyPhrase(value, ""UAH"", false);
	}
}
else
{
	if (products[2].GetProductTypeCode() == ""708"")
	{
		decimal value2 = products[2].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value);
		if (value2 != null)
		{
			__Result = __Context.MoneyPhrase(value2, ""UAH"", false);
		}
	}
}
",,76
77,708FirstPaymentPart,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
if (products[1].GetProductTypeCode() == ""708"")
{
	__Result = products[1].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
}
else
{
	if (products[2].GetProductTypeCode() == ""708"")
	{
		__Result = products[2].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,77
78,708PolisNumber,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
if (products[1].GetProductTypeCode() == ""708"")
{
	__Result = products[1].PolisNumber;
}
else
{
	if (products[2].GetProductTypeCode() == ""708"")
	{
		__Result = products[2].PolisNumber;
	}
}
",,78
79,764CountObjects,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	__Result = count.ToString();
}
",,79
80,EPOsagoandPersonalSafetyCoverLetter,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
int counter = 1;
while (counter < products.Count())
{
	Workflow.DTO.Models.Product product = products[counter];
	string productIdentifier = product.GetProductTypeName();
	__Result = __Result + productIdentifier + "": {smscode}; "";
	counter = counter + 1;
}
__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname;
__Result = __Result + ""</br><br/>Направляємо Вам у вкладенні:</br><br/>Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[1].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[1].GetProductTypeName() + "", код страхового продукту "" + products[1].GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту:</br><br/>"" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + "": {smscode}; "" + ""<br/>"" + products[1].GetProductTypeName() + "", разовим ідентифікатором"" + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"" + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://oranta.ua'>https://oranta.ua<a/>"";
__Result = __Result + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter;
__Result = __Result + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:<br/>Загальних умов страхового продукту "" + products[0].GetProductTypeName() + "" 71.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/>,"" + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://oranta.ua'>https://oranta.ua<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" ________, які розташовані за посиланням <a href='https://oranta.ua'>https://oranta.ua<a/> та даєте згоду на укладення договору."";
__Result = __Result + ""</br><br/>З найкращими побажаннями<br/>ПАТ \""НАСК \""ОРАНТА\"""";
__Result = __Result.Replace(""786 ЕП ОСЦПВ 2025 для фізичних осіб"", ""Автоцивілка"").Replace(""708 Особиста безпека крос"", ""Особиста безпека"");
",,80
81,EPOsagoandAutoumbrellaCoverLetter,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
int counter = 1;
while (counter < products.Count())
{
	Workflow.DTO.Models.Product product = products[counter];
	string productIdentifier = product.GetProductTypeName();
	__Result = __Result + productIdentifier + "": {smscode}; "";
	counter = counter + 1;
}
__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname;
if (products.Count() == 1)
{
	__Result = __Result + ""<br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + "".<br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту "" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + products[0].GetProductTypeName() + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"";
}
else
{
	if (products[1].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""</br><br/>Направляємо Вам у вкладенні:</br><br/>Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[1].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[1].GetProductTypeName() + "", код страхового продукту "" + products[1].GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту:</br><br/>"" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + "": {smscode}; "" + ""<br/>"" + products[1].GetProductTypeName() + "" разовим ідентифікатором"" + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"" + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4'>https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4<a/>"";
	}
	if (products[1].GetProductTypeCode() == ""708"")
	{
		__Result = __Result + ""</br><br/>Направляємо Вам у вкладенні:</br><br/>Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[1].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[1].GetProductTypeName() + "", код страхового продукту "" + products[1].GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту:</br><br/>"" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + "": {smscode}; "" + ""<br/>"" + products[1].GetProductTypeName() + "" разовим ідентифікатором"" + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"" + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://oranta.ua/'>https://oranta.ua/<a/>"";
	}
}
__Result = __Result + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter;
if (products.Count() == 1)
{
	__Result = __Result + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови Загальних умов страхового продукту "" + products[0].GetProductTypeName() + "" 71.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/> та даєте згоду на укладення договору."";
}
else
{
	if (products[1].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:<br/>Загальних умов страхового продукту "" + products[0].GetProductTypeName() + "" 71.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/>,"" + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615'>https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" 19.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7'>https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7<a/> та даєте згоду на укладення договору."";
	}
	if (products[1].GetProductTypeCode() == ""708"")
	{
		__Result = __Result + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:<br/>Загальних умов страхового продукту "" + products[0].GetProductTypeName() + "" 71.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/>,"" + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" __________, які розташовані за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та даєте згоду на укладення договору."";
	}
}
__Result = __Result + ""</br><br/>З найкращими побажаннями<br/>ПАТ \""НАСК \""ОРАНТА\"""";
__Result = __Result.Replace(""786 ЕП ОСЦПВ 2025 для фізичних осіб"", ""Автоцивілка"").Replace(""786 ЕП ОСЦПВ 2025 для юридичних осіб"", ""Автоцивілка"").Replace(""219 Автопарасолька 2025"", ""Автопарасолька"").Replace(""701 АБСОЛЮТНИЙ ЗАХИСТ"", ""Абсолютний захист"").Replace(""724 ДЦВ online"", ""ДЦВ online"").Replace(""708 Особиста безпека крос"", ""Особиста безпека"");
",,81
82,764Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,82
83,780LetterSubject,"__Result = ""Договір страхування \""Тест драйв\"" номер "" + __Product.PolisNumber;
",,83
84,780Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Тест драйв\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,84
85,SMS780,"__Result = ""Разовий ідентифікатор для підписання договору Тест драйв: {smscode}"";
",,85
86,724CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом ДЦВ online, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту ДЦВ online разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт ДЦВ online, який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/ed9c0c3c-a920-46f2-895d-b24d0148cf54'>https://apifalcon.oranta.ua/files/ed9c0c3c-a920-46f2-895d-b24d0148cf54<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов страхового продукту \""ДЦВ online\"" № 15.2.25 зі страхування цивільної відповідальності власників наземного транспорту, які розташовані за посиланням: <a href='https://apifalcon.oranta.ua/files/f0657d19-3025-4741-8094-b71235cc66a5'>https://apifalcon.oranta.ua/files/f0657d19-3025-4741-8094-b71235cc66a5<a/></br><br/>Пропозиції (Оферти) укласти Договір цивільної відповідальності власників наземного транспорту, страховий продукт \""ДЦВ online\"" (код страхового продукту 724), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/f09d70a2-03ff-4276-a083-1334f4170e8a'>https://apifalcon.oranta.ua/files/f09d70a2-03ff-4276-a083-1334f4170e8a<a/> та даєте згоду на укладення договору."" + ""</br><br/>Підписанням договору Страхувальник погоджується з отриманням переддоговірної інформації за наданими у цьому повідомленні посиланнями."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,86
87,764DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""118"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,87
88,754Sms,"__Result = ""Разовий ідентифікатор для підписання договору ДЦВ Плюс: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,88
89,754Subject,"__Result = ""Договір страхування \""ДЦВ Плюс\"" номер "" + __Product.PolisNumber;
",,89
90,754Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/> НАСК \""ОРАНТА\"""";
",,90
91,219FirstPaymentPartInWords,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
if (products[1].GetProductTypeCode() == ""219"")
{
	decimal value = products[1].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value);
	if (value != null)
	{
		__Result = __Context.MoneyPhrase(value, ""UAH"", false);
	}
}
else
{
	if (products[2].GetProductTypeCode() == ""219"")
	{
		decimal value2 = products[2].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value);
		if (value2 != null)
		{
			__Result = __Context.MoneyPhrase(value2, ""UAH"", false);
		}
	}
}
",,91
92,219FirstPaymentPart,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
if (products[1].GetProductTypeCode() == ""219"")
{
	__Result = products[1].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
}
else
{
	if (products[2].GetProductTypeCode() == ""219"")
	{
		__Result = products[2].PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,92
93,219PolisNumber,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
if (products[1].GetProductTypeCode() == ""219"")
{
	__Result = products[1].PolisNumber;
}
else
{
	if (products[2].GetProductTypeCode() == ""219"")
	{
		__Result = products[2].PolisNumber;
	}
}
",,93
94,AgentIKPCoverLetter,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")) && agentCommission != null && agentCommission.Agent != null)
		{
			__Result = ""<a href='https://oranta.ua/info/partners/list/"" + agentCommission.Agent.IdentificationCodeEDRPOU + ""'>https://oranta.ua/info/partners/list/"" + agentCommission.Agent.IdentificationCodeEDRPOU + ""<a/>"";
		}
		else
		{
					if (agent != null && (agent.AgentChannels == null || agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")) && agentCommission != null && agentCommission.Agent != null)
			{
				__Result = ""Відсутній"";
			}
		}
	}
}
",,94
95,AgentIKPDoc,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				Workflow.DTO.Models.Document doc = agent.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Договір на надання ІКП"" && i.EndDate != null && DateTime.GetNow() <= i.EndDate.Value);
				if (doc != null)
				{
					__Result = doc.GetDocumentTypeName();
					if (doc.Number != null)
					{
						__Result = __Result + "" № "" + doc.Number;
					}
					if (doc.IssuedDate != null)
					{
						__Result = __Result + "" від "" + doc.IssuedDate.Value.ToShortDateString() + "" р."";
					}
					if (doc.StartDate != null)
					{
						__Result = __Result + "" від "" + doc.StartDate.Value.ToShortDateString() + "" р."";
					}
				}
			}
		}
	}
}
",,95
96,AgentIKPINN,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				__Result = agentCommission.Agent.IdentificationCodeEDRPOU;
			}
		}
	}
}
",,96
97,AgentIKPAddressFlat,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.Flat;
			}
		}
	}
}
",,97
98,AgentIKPAddressHouse,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.House;
			}
		}
	}
}
",,98
99,AgentIKPAddressStreet,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.Street;
			}
		}
	}
}
",,99
100,AgentIKPAddressFullSettlementName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.GetFullSettlementName();
			}
		}
	}
}
",,100
101,AgentIKPAddressRegionName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.GetRegionName();
			}
		}
	}
}
",,101
102,AgentIKPFullName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""ІКП"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission.Agent.IsJuridicalPerson && !agentCommission.Agent.IsPerson)
			{
				__Result = agentCommission.Agent.FullName;
			}
			else
			{
							__Result = agentCommission.Agent.Lastname + "" "" + agentCommission.Agent.Firstname + "" "" + agentCommission.Agent.Secondname;
			}
		}
	}
}
",,102
103,781CountObjects,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""168"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	__Result = count.ToString();
}
",,103
104,781Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""168"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,104
105,780Model,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""487"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Товар"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Марка та модель"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,105
106,780EstateSerialNumber,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""487"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Товар"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Серійний номер майна"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,106
107,780ObjName,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""487"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Товар"");
	if (insObj != null)
	{
		__Result = insObj.Name;
	}
}
",,107
108,780CostEstate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""487"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Товар"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
		if (estate.Cost != null)
		{
			__Result = estate.Cost.Value.ToString();
		}
	}
}
",,108
109,AppBranchCode,"__Result = __Product.GetBranchCode();
",,109
110,SMS703,"__Result = ""Разовий ідентифікатор для підписання договору Подорожуючі за кордоном: {smscode}"";
",,110
111,724DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""242"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,111
112,Sms724,"__Result = ""Разовий ідентифікатор для підписання договору ДЦВ online: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,112
113,724Subject,"__Result = ""Договір страхування \""ДЦВ online\"" номер "" + __Product.PolisNumber;
",,113
114,724Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""ДЦВ online\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,114
115,739CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом ЗАХИСТ МАНДРІВНИКАМ, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту ЗАХИСТ МАНДРІВНИКАМ разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт ЗАХИСТ МАНДРІВНИКАМ, який знаходиться за наступним посиланням: ДОДАТИ ПОСИЛАННЯ"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника 1, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Інформація про страхового посередника 2, яка знаходиться за наступним посиланням: "" + AgentIKPCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов № 23.2.25 страхового продукту «ЗАХИСТ МАНДРІВНИКАМ» з комплексного страхування медичних та інших витрат, страхування від нещасних випадків та страхування багажу фізичних осіб, які подорожують за кордоном, що розташовані за посиланням: ДОДАТИ ПОСИЛАННЯ</br><br/>Пропозиції (Оферти) укласти договір комплексного страхування медичних та інших витрат, страхування від нещасних випадків та страхування багажу фізичних осіб, які подорожують за кордоном, страхового продукту ЗАХИСТ МАНДРІВНИКАМ (код страхового продукту 739), яка розташована за посиланням: ДОДАТИ ПОСИЛАННЯ та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,115
116,FirstPaymentPart1InWords,"decimal value = __Product.PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value);
if (value != null)
{
	__Result = __Context.MoneyPhrase(value, ""UAH"", false);
}
else
{
	__Result = """";
}
",,116
117,FirstPaymentPart1,"__Result = __Product.PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
",,117
118,703CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом ПОДОРОЖУЮЧІ ЗА КОРДОНОМ, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту ПОДОРОЖУЮЧІ ЗА КОРДОНОМ разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт ПОДОРОЖУЮЧІ ЗА КОРДОНОМ, який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/f09ebcc1-1154-47fd-a455-f93703e6d694'>https://apifalcon.oranta.ua/files/f09ebcc1-1154-47fd-a455-f93703e6d694<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов № 17.1.24 страхового продукту ПОДОРОЖУЮЧІ ЗА КОРДОНОМ з комплексного страхування медичних та інших витрат, страхування від нещасних випадків та страхування багажу фізичних осіб, які подорожують за кордоном, що розташовані за посиланням: <a href='https://apifalcon.oranta.ua/files/bac36778-e6e2-4e32-9629-f1838a909c85'>https://apifalcon.oranta.ua/files/bac36778-e6e2-4e32-9629-f1838a909c85<a/></br><br/>Пропозиції (Оферти) укласти договір комплексного страхування медичних та інших витрат, страхування від нещасних випадків та страхування багажу фізичних осіб, які подорожують за кордоном, страхового продукту ПОДОРОЖУЮЧІ ЗА КОРДОНОМ (код страхового продукту 703),  яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/0d692a4c-38af-4e6e-a6e1-80780dce3eb3'>https://apifalcon.oranta.ua/files/0d692a4c-38af-4e6e-a6e1-80780dce3eb3<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,118
119,704LandNumber,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Земельна ділянка"");
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insuranceObject.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Кадастровий номер"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,119
120,704HouseAddress,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
		if (estate.PostAddressObject != null)
		{
			__Result = estate.PostAddressObject.PostCode + "" "" + estate.PostAddressObject.GetParentRegionName() + "", "" + estate.PostAddressObject.GetSettlementName() + "", "" + estate.PostAddressObject.GetStreetTypeName() + "" "" + estate.PostAddressObject.Street + "", б. "" + estate.PostAddressObject.House;
		}
		else
		{
					__Result = estate.PostAddressObject.PostCode + "" "" + estate.PostAddressObject.GetParentRegionName() + "", "" + estate.PostAddressObject.GetRegionName() + "", "" + estate.PostAddressObject.GetSettlementName() + "", "" + estate.PostAddressObject.GetStreetTypeName() + "" "" + estate.PostAddressObject.Street + "", б. "" + estate.PostAddressObject.House;
		}
	}
}
",,120
121,704FlatAddress,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
		if (estate.PostAddressObject != null)
		{
			__Result = estate.PostAddressObject.PostCode + "" "" + estate.PostAddressObject.GetParentRegionName() + "", "" + estate.PostAddressObject.GetSettlementName() + "", "" + estate.PostAddressObject.GetStreetTypeName() + "" "" + estate.PostAddressObject.Street + "", б. "" + estate.PostAddressObject.House + "", кв. "" + estate.PostAddressObject.Flat;
		}
		else
		{
					__Result = estate.PostAddressObject.PostCode + "" "" + estate.PostAddressObject.GetParentRegionName() + "", "" + estate.PostAddressObject.GetRegionName() + "", "" + estate.PostAddressObject.GetSettlementName() + "", "" + estate.PostAddressObject.GetStreetTypeName() + "" "" + estate.PostAddressObject.Street + "", б. "" + estate.PostAddressObject.House + "", кв. "" + estate.PostAddressObject.Flat;
		}
	}
}
",,121
122,704HouseDecoration,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null)
	{
		__Result = __Context.PrintMarkedPoint(insuranceObject.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	}
}
",,122
123,704HouseConstruction,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"");
	if (insuranceObject != null)
	{
		__Result = __Context.PrintMarkedPoint(insuranceObject.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"");
	}
}
",,123
124,704FlatDecoration,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null)
	{
		__Result = __Context.PrintMarkedPoint(insuranceObject.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	}
}
",,124
125,704FlatConstruction,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"");
	if (insuranceObject != null)
	{
		__Result = __Context.PrintMarkedPoint(insuranceObject.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"");
	}
}
",,125
126,704LandInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Земельна ділянка"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,126
127,704HouseInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,127
128,704FlatInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,128
129,704Land,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Земельна ділянка"");
	if (insuranceObject != null)
	{
		__Result = __Context.PrintMarkedPoint(insuranceObject.GetObjectTypeName() == ""Земельна ділянка"");
	}
}
",,129
130,704House,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || i.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null)
	{
		__Result = __Context.PrintMarkedPoint(insuranceObject.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || insuranceObject.GetObjectTypeName() == ""Будинок (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	}
}
",,130
131,704Flat,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || i.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	if (insuranceObject != null)
	{
		__Result = __Context.PrintMarkedPoint(insuranceObject.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації)"" || insuranceObject.GetObjectTypeName() == ""Квартира (конструктивні елементи, включаючи невід’ємні інженерні комунікації та внутрішнє оздоблення)"");
	}
}
",,131
132,704Variant2,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Страхувальник є майновим поручителем за позичальника"");
	}
}
",,132
133,704Variant1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""396"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Страхувальник є позичальником Банку"");
	}
}
",,133
134,CreditContractDate2,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Кредитний договір (дата)"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є майновим поручителем за позичальника"")
	{
		DateTime result = param.GetParameterValueCaption();
		__Result = result.ToShortDateString() + "" р."";
	}
}
",,134
135,CreditContractNumber2,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Кредитний договір (номер)"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є майновим поручителем за позичальника"")
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,135
136,BorrowerINN,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Позичальник ІПН"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є майновим поручителем за позичальника"")
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,136
137,BorrowerName,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Позичальник ПІБ"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є майновим поручителем за позичальника"")
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,137
138,GuaranteeContractDate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Договір поруки (дата)"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є майновим поручителем за позичальника"")
	{
		DateTime result = param.GetParameterValueCaption();
		__Result = result.ToShortDateString() + "" р."";
	}
}
",,138
139,GuaranteeContractNumber,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Договір поруки (номер)"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є майновим поручителем за позичальника"")
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,139
140,CreditContractDate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Кредитний договір (дата)"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є позичальником Банку"")
	{
		DateTime result = param.GetParameterValueCaption();
		__Result = result.ToShortDateString() + "" р."";
	}
}
",,140
141,CreditContractNumber,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Кредитний договір (номер)"");
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param2.GetParameterValueCaption().ToString() == ""Страхувальник є позичальником Банку"")
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,141
142,MortgageContractDate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Договір іпотеки/застави (дата)"");
	if (param != null)
	{
		DateTime result = param.GetParameterValueCaption();
		__Result = result.ToShortDateString() + "" р."";
	}
}
",,142
143,MortgageContractNumber,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Договір іпотеки/застави (номер)"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,143
144,722CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом ЗАХИСТ ЗБРОЇ, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту ЗАХИСТ ЗБРОЇ разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт ЗАХИСТ ЗБРОЇ, який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/2c13d644-b478-46c0-a74f-c6224bed9b5b'>https://apifalcon.oranta.ua/files/2c13d644-b478-46c0-a74f-c6224bed9b5b<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов страхового продукту \""ЗАХИСТ ЗБРОЇ\"" № 5.1.24 зі страхування зброї,  які розташовані за посиланням: <a href='https://apifalcon.oranta.ua/files/bce4578b-b6d2-489d-b982-86bfe7c43d05'>https://apifalcon.oranta.ua/files/bce4578b-b6d2-489d-b982-86bfe7c43d05<a/></br><br/>Пропозиції (Оферти) укласти Договір страхування зброї, страховий продукт \""ЗАХИСТ ЗБРОЇ\"" (код страхового продукту 722), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/5c114419-d2cd-48e8-9e59-be153466ced4'>https://apifalcon.oranta.ua/files/5c114419-d2cd-48e8-9e59-be153466ced4<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,144
145,AppCreator,"__Result = """";
Workflow.DTO.Models.User creator = __Context.GetUserByGID(__InsuranceApplication.CreatorUserGID);
__Result = creator.LastName + "" "" + creator.FirstName + "" "" + creator.SecondName;
",,145
146,730IsProlongation,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Ознака договору"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Поновлений"");
	}
}
",,146
147,730RegisteredDateLongationOriginalPolis,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Номер базового полісу"");
if (attribute != null)
{
	Workflow.DTO.Models.Product base = __Context.GetProductByPolisNumber(attribute.Value.ToString());
	if (base != null)
	{
		__Result = base.RegisteredDate.ToShortDateString();
	}
}
",,147
148,730LongationOriginalPolis,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Номер базового полісу"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,148
149,725Rate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""106"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""163"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Фізичні особи"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Фізичні особи"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
		__Result = result.ToString(""N4"");
	}
}
",,149
150,725CountObjects,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""106"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	__Result = count.ToString();
}
",,150
151,EPOsagoCoverLetterStandardJuridical,"__Result = ""Вітаємо! "" + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Автоцивілка"") + "", код страхового продукту "" + __Product.GetProductTypeCode() + ""."" + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Автоцивілка"") + "" разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Автоцивілка"") + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови Загальних умов страхового продукту "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Автоцивілка"") + "", які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями<br/>ПАТ \""НАСК \""ОРАНТА\"""";
",,151
152,721CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом КАЛІБР, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту КАЛІБР разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт КАЛІБР, який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/24c4f26e-0442-44ae-9403-493119e1c609'>https://apifalcon.oranta.ua/files/24c4f26e-0442-44ae-9403-493119e1c609<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов страхового продукту КАЛІБР № 1.1.24 зі страхування відповідальності перед третіми особами власника (законного володільця) зброї, які розташовані за посиланням: <a href='https://apifalcon.oranta.ua/files/14a3f9f1-a4aa-4cb1-a46e-c6be4aa2c0f1'>https://apifalcon.oranta.ua/files/14a3f9f1-a4aa-4cb1-a46e-c6be4aa2c0f1<a/></br><br/>Пропозиція укласти Договір відповідальності перед третіми особами власника (законного володільця) зброї, страховий продукт КАЛІБР (код страхового продукту 721), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/736cb4d2-1653-45ab-b2c4-21a8917eed13'>https://apifalcon.oranta.ua/files/736cb4d2-1653-45ab-b2c4-21a8917eed13<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,152
153,702CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом \""МІНІ КАСКО\"", код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту \""МІНІ КАСКО\"" разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт \""МІНІ КАСКО\"", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/62a836fc-1a6c-474a-b997-8a5f55c775e0'>https://apifalcon.oranta.ua/files/62a836fc-1a6c-474a-b997-8a5f55c775e0<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов страхового продукту \""МІНІ КАСКО\"" № 6.1.24 зі страхування наземного транспортного засобу,  які розташовані за посиланням : <a href='https://apifalcon.oranta.ua/files/26d68863-e09f-44b4-8756-3387155e6543'>https://apifalcon.oranta.ua/files/26d68863-e09f-44b4-8756-3387155e6543<a/></br><br/>Пропозиції (Оферти) укласти Договір страхування наземного транспортного засобу за страховим продуктом \""МІНІ КАСКО\"" (код страхового продукту 702), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/9bd5c75e-31fd-470f-8cd7-999b1c22fee2'>https://apifalcon.oranta.ua/files/9bd5c75e-31fd-470f-8cd7-999b1c22fee2<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,153
154,709CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом \""Рідна квартира\"", код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту \""Рідна квартира\"" разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт \""Рідна квартира\"", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/119abe32-0a5b-4c49-a085-d04b8ede24fb'>https://apifalcon.oranta.ua/files/119abe32-0a5b-4c49-a085-d04b8ede24fb<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов страхового продукту \""Рідна квартира\"" № 2.1.24 зі страхування майна, фінансового ризику та відповідальності перед третіми особами власника (користувача) квартири, які розташовані за посиланням: <a href='https://apifalcon.oranta.ua/files/da4fa281-712a-4698-8c25-bbf5289af08d'>https://apifalcon.oranta.ua/files/da4fa281-712a-4698-8c25-bbf5289af08d<a/></br><br/>Пропозиція укласти Договір страхування майна, фінансового ризику та відповідальності перед третіми особами власника (користувача) квартири, страховий продукт \""Рідна квартира\"" (код страхового продукту 709), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/4d6628ab-c906-45fb-8ae4-5d3bac9946fa'>https://apifalcon.oranta.ua/files/4d6628ab-c906-45fb-8ae4-5d3bac9946fa<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,154
155,730CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом МАЄТОК. МАЄМО-ДБАЄМО, код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту МАЄТОК. МАЄМО-ДБАЄМО разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт МАЄТОК. МАЄМО-ДБАЄМО, який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/6086744d-ce13-4351-805d-af140789cc59'>https://apifalcon.oranta.ua/files/6086744d-ce13-4351-805d-af140789cc59<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br><br/>Загальних умов № 12.2.24 страхового продукту МАЄТОК. МАЄМО - ДБАЄМО з комплексного страхування майна та тварин, що належать громадянам, які розташовані за посиланням: <a href='https://apifalcon.oranta.ua/files/af4c5e83-1c79-4d8b-b740-ed1a4d601eac'>https://apifalcon.oranta.ua/files/af4c5e83-1c79-4d8b-b740-ed1a4d601eac<a/></br><br/>Пропозиції (Оферти) укласти договір комплексного страхування майна та тварин, що належать громадянам, страхового продукту МАЄТОК. МАЄМО - ДБАЄМО (код страхового продукту 730), яка розташована за посиланням: <a href='https://apifalcon.oranta.ua/files/3d18b795-1e30-4c6e-903f-82407df70cbf'>https://apifalcon.oranta.ua/files/3d18b795-1e30-4c6e-903f-82407df70cbf<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,155
156,ZKInsurerDoc,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null && face.PersonTypeID != 2)
{
	List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"");
	string result = """";
	int i = 0;
	Workflow.DTO.Models.Document document;
	while (i < documents.Count())
	{
		if (documents[i] != null)
		{
			document = documents[i];
		}
		i = i + 1;
	}
	if (document != null)
	{
		__Result = document.GetDocumentTypeName();
	}
	if (document.Number != null)
	{
		__Result = __Result + "" номер "" + document.Number;
	}
	if (!string.IsNullOrEmpty(document.IssuedBy))
	{
		__Result = __Result + "" виданого "" + document.IssuedBy;
	}
	if (document.IssuedDate != null)
	{
		__Result = __Result + "" від "" + document.IssuedDate.Value.ToShortDateString() + "" р."";
	}
	if (document.StartDate != null)
	{
		__Result = __Result + "" дата початку дії з "" + document.StartDate.Value.ToShortDateString() + "" р."";
	}
}
",,156
157,756CoverLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом 756 \""АвтоПрогрес\"""" + "", код страхового продукту "" + __Product.GetProductTypeCode() + ""</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту 756 \""АвтоПрогрес\"" разовим ідентифікатором: {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт 756 \""АвтоПрогрес\"", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/bb44e5a3-7ac9-40e6-973e-03f7f2d714be'>https://apifalcon.oranta.ua/files/bb44e5a3-7ac9-40e6-973e-03f7f2d714be<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/066dde19-735a-45c3-8e89-492cb3d23f74'>https://apifalcon.oranta.ua/files/066dde19-735a-45c3-8e89-492cb3d23f74<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови Оферти страхового продукту 756 \""АвтоПрогрес\"", яка розташована за посиланням <a href='https://apifalcon.oranta.ua/files/0af83407-2285-443b-bc24-4277bfb06c53'>https://apifalcon.oranta.ua/files/0af83407-2285-443b-bc24-4277bfb06c53<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,157
158,787CoverLetter,"__Result = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Мобільний додаток"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Мобільний додаток"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Сайт 15"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Сайт 15"") ? ZKCoverLetterSite : ZKCoverLetterStandard;
",,158
159,ZKCoverLetterStandard,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Зелена картка"") + "", код страхового продукту "" + __Product.GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Зелена картка"") + "" разовим ідентифікатором"" + "": {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Зелена картка"") + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/5410c93f-040b-4a8c-bd44-e6df4e8f4954'>https://apifalcon.oranta.ua/files/5410c93f-040b-4a8c-bd44-e6df4e8f4954<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br>Загальних умов страхового продукту "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Зелена картка"") + "" 72.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/92d0ee97-1ad8-475b-b244-2d1996b75038'>https://apifalcon.oranta.ua/files/92d0ee97-1ad8-475b-b244-2d1996b75038<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями<br/>ПАТ \""НАСК \""ОРАНТА\"""";
",,159
160,ZKCoverLetterSite,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Зелена картка"") + "", код страхового продукту "" + __Product.GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування,  підпишіть договір, укладений відповідно до страхового продукту Зелена картка, разовим ідентифікатором"" + "": {smscode} та оплатіть договір."" + ""</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Зелена картка"") + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/5410c93f-040b-4a8c-bd44-e6df4e8f4954'>https://apifalcon.oranta.ua/files/5410c93f-040b-4a8c-bd44-e6df4e8f4954<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:</br>Загальних умов страхового продукту "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Зелена картка"") + "" 72.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/92d0ee97-1ad8-475b-b244-2d1996b75038'>https://apifalcon.oranta.ua/files/92d0ee97-1ad8-475b-b244-2d1996b75038<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями<br/>ПАТ \""НАСК \""ОРАНТА\"""";
",,160
161,786CoverLetter,"__Result = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт Сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт Сайт промокод"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 1"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 10"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 20"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 30"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт Сайт 15"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 15"" || __InsuranceApplication.GetInsuranceApplicationSourceTypeName() == ""Інтернет-магазин"") ? EPOsagoCoverLetterSite : EPOsagoCoverLetterStandard;
",,161
162,EPOsagoCoverLetterSite,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
int counter = 1;
while (counter < products.Count())
{
	Workflow.DTO.Models.Product product = products[counter];
	string productIdentifier = product.GetProductTypeName();
	__Result = __Result + productIdentifier + "": {smscode}; "";
	counter = counter + 1;
}
__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname;
if (products.Count() == 1)
{
	__Result = __Result + ""<br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + "".<br/>Для подальшого укладання договору страхування, підпишіть договір, укладений відповідно до страхового продукту "" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + products[0].GetProductTypeName() + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"";
}
else
{
	__Result = __Result + ""</br><br/>Направляємо Вам у вкладенні:</br><br/>Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[1].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[1].GetProductTypeName() + "", код страхового продукту "" + products[1].GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування, підпишіть договір, укладений відповідно до страхового продукту:</br><br/>"" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + "": {smscode}; "" + ""<br/>"" + products[1].GetProductTypeName() + "", разовим ідентифікатором"" + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"" + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/620dc327-2630-4a31-964d-238b1df7319e'>https://apifalcon.oranta.ua/files/620dc327-2630-4a31-964d-238b1df7319e<a/>"";
}
__Result = __Result + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter;
if (products.Count() == 1)
{
	__Result = __Result + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови Загальних умов страхового продукту "" + products[0].GetProductTypeName() + "" 71.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/> та даєте згоду на укладення договору."";
}
else
{
	__Result = __Result + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови:<br/>Загальних умов страхового продукту "" + products[0].GetProductTypeName() + "" 71.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/>,"" + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://apifalcon.oranta.ua/files/a65c6eb0-a0db-48c1-b548-f6f5557e91da'>https://apifalcon.oranta.ua/files/a65c6eb0-a0db-48c1-b548-f6f5557e91da<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" 16.3.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/48fa9988-f361-4f92-9bb1-6ce53d81b488'>https://apifalcon.oranta.ua/files/48fa9988-f361-4f92-9bb1-6ce53d81b488<a/> та даєте згоду на укладення договору."";
}
__Result = __Result + ""</br><br/>З найкращими побажаннями<br/>ПАТ \""НАСК \""ОРАНТА\"""";
__Result = __Result.Replace(""786 ЕП ОСЦПВ 2025 для фізичних осіб"", ""Автоцивілка"").Replace(""786 ЕП ОСЦПВ 2025 для юридичних осіб"", ""Автоцивілка"").Replace(""219 Автопарасолька 2025"", ""Автопарасолька"").Replace(""701 АБСОЛЮТНИЙ ЗАХИСТ"", ""Абсолютний захист"").Replace(""724 ДЦВ online"", ""ДЦВ online"");
",,162
163,EPOsagoCoverLetterStandard,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
int counter = 1;
while (counter < products.Count())
{
	Workflow.DTO.Models.Product product = products[counter];
	string productIdentifier = product.GetProductTypeName();
	__Result = __Result + productIdentifier + "": {smscode}; "";
	counter = counter + 1;
}
__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname;
if (products.Count() == 1)
{
	__Result = __Result + ""<br/>Направляємо Вам у вкладенні Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + "".<br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту "" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + products[0].GetProductTypeName() + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"";
}
if (products.Count() == 2)
{
	if (products[1].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""</br><br/>Направляємо Вам у вкладенні:</br><br/>Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[1].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[1].GetProductTypeName() + "", код страхового продукту "" + products[1].GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту:</br><br/>"" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + "": {smscode}; "" + ""<br/>"" + products[1].GetProductTypeName() + "" разовим ідентифікатором"" + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"" + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4'>https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4<a/>"";
	}
	if (products[1].GetProductTypeCode() == ""708"")
	{
		__Result = __Result + ""</br><br/>Направляємо Вам у вкладенні:</br><br/>Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[1].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[1].GetProductTypeName() + "", код страхового продукту "" + products[1].GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту:</br><br/>"" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + "": {smscode}; "" + ""<br/>"" + products[1].GetProductTypeName() + "" разовим ідентифікатором"" + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"" + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://oranta.ua/'>https://oranta.ua/<a/>"";
	}
}
if (products.Count() == 3)
{
	__Result = __Result + ""</br><br/>Направляємо Вам у вкладенні:</br><br/>Індивідуальну пропозицію № "" + __Product.PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + products[0].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[1].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[1].GetProductTypeName() + "", код страхового продукту "" + products[1].GetProductTypeCode() + ""<br/>Індивідуальну пропозицію № "" + products[2].PolisNumber + "" (ID заявки "" + __InsuranceApplication.id.ToString() + "") за продуктом "" + products[2].GetProductTypeName() + "", код страхового продукту "" + products[2].GetProductTypeCode() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту:</br><br/>"" + products[0].GetProductTypeName() + "" разовим ідентифікатором "" + "": {smscode}; "" + ""<br/>"" + products[1].GetProductTypeName() + "" разовим ідентифікатором"" + "": {smscode} "" + ""<br/>"" + products[2].GetProductTypeName() + "" разовим ідентифікатором"" + "": {smscode} "" + "", та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про стандартний страховий продукт "" + products[0].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d'>https://apifalcon.oranta.ua/files/9638faef-10ca-46f1-bf43-8f555dd91a5d<a/>"";
	if (products[1].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4'>https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4<a/>"";
	}
	else
	{
			if (products[1].GetProductTypeCode() == ""708"")
		{
			__Result = __Result + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[1].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://oranta.ua/'>https://oranta.ua/<a/>"";
		}
	}
	if (products[2].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[2].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4'>https://apifalcon.oranta.ua/files/ac1f0934-85de-4fa8-8e75-dccb5cf794d4<a/>"";
	}
	else
	{
			if (products[2].GetProductTypeCode() == ""708"")
		{
			__Result = __Result + ""<br/>Інформаційний документ про стандартний страховий продукт "" + products[2].GetProductTypeName() + "", який знаходиться за наступним посиланням: <a href='https://oranta.ua/'>https://oranta.ua/<a/>"";
		}
	}
}
__Result = __Result + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter;
__Result = __Result + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови Загальних умов страхового продукту "" + products[0].GetProductTypeName() + "" 71.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e'>https://apifalcon.oranta.ua/files/3df1adc2-6d97-4904-bb6b-fbf3da2e127e<a/> та даєте згоду на укладення договору."";
if (products.Count() == 2)
{
	if (products[1].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615'>https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" 19.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7'>https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7<a/> та даєте згоду на укладення договору."";
	}
	if (products[1].GetProductTypeCode() == ""708"")
	{
		__Result = __Result + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" __________, які розташовані за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та даєте згоду на укладення договору."";
	}
}
if (products.Count() == 3)
{
	if (products[1].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615'>https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" 19.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7'>https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7<a/> та даєте згоду на укладення договору."";
	}
	else
	{
			if (products[1].GetProductTypeCode() == ""708"")
		{
			__Result = __Result + ""<br/>Оферти страхового продукту "" + products[1].GetProductTypeName() + "", яка розташована за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та Загальних умов страхового продукту "" + products[1].GetProductTypeName() + "" __________, які розташовані за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та даєте згоду на укладення договору."";
		}
	}
	if (products[2].GetProductTypeCode() == ""219"")
	{
		__Result = __Result + ""<br/>Оферти страхового продукту "" + products[2].GetProductTypeName() + "", яка розташована за посиланням <a href='https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615'>https://apifalcon.oranta.ua/files/df2aa91c-2fbb-4789-a1d7-ec0349995615<a/> та Загальних умов страхового продукту "" + products[2].GetProductTypeName() + "" 19.2.25, які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7'>https://apifalcon.oranta.ua/files/edd0de9e-edc8-4c08-9769-e427c1c7afc7<a/> та даєте згоду на укладення договору."";
	}
	else
	{
			if (products[2].GetProductTypeCode() == ""708"")
		{
			__Result = __Result + ""<br/>Оферти страхового продукту "" + products[2].GetProductTypeName() + "", яка розташована за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та Загальних умов страхового продукту "" + products[2].GetProductTypeName() + "" __________, які розташовані за посиланням <a href='https://oranta.ua/'>https://oranta.ua/<a/> та даєте згоду на укладення договору."";
		}
	}
}
__Result = __Result + ""</br><br/>З найкращими побажаннями<br/>ПАТ \""НАСК \""ОРАНТА\"""";
__Result = __Result.Replace(""786 ЕП ОСЦПВ 2025 для фізичних осіб"", ""Автоцивілка"").Replace(""786 ЕП ОСЦПВ 2025 для юридичних осіб"", ""Автоцивілка"").Replace(""219 Автопарасолька 2025"", ""Автопарасолька"").Replace(""701 АБСОЛЮТНИЙ ЗАХИСТ"", ""Абсолютний захист"").Replace(""724 ДЦВ online"", ""ДЦВ online"").Replace(""708 Особиста безпека крос"", ""Особиста безпека"");
",,163
164,AgentCoverLetter,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")) && agentCommission != null && agentCommission.Agent != null)
		{
			__Result = ""<a href='https://oranta.ua/info/partners/list/"" + agentCommission.Agent.IdentificationCodeEDRPOU + ""'>https://oranta.ua/info/partners/list/"" + agentCommission.Agent.IdentificationCodeEDRPOU + ""<a/>"";
		}
		else
		{
					if (agent != null && (agent.AgentChannels == null || agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")) && agentCommission != null && agentCommission.Agent != null)
			{
				__Result = ""Відсутній"";
			}
		}
	}
}
",,164
165,718CountObjects,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""165"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	__Result = count.ToString();
}
",,165
166,CoverLetterSubject,"__Result = ""Форма переддоговірного ознайомлення (ст.86-88 Закону України \""Про страхування\"")"";
",,166
167,786CoverLetterStandard,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""</br><br/>Направляємо Вам у вкладенні Індивідуальну пропозицію за продуктом "" + products[0].GetProductTypeName() + "", код страхового продукту "" + __Product.GetProductTypeCode() + "", № "" + __InsuranceApplication.id.ToString() + "".</br><br/>Для подальшого укладання договору страхування перейдіть за посиланням "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-"")) + "", підпишіть договір, укладений відповідно до страхового продукту разовим ідентифікатором "" + products[0].GetProductTypeName() + "": {smscode}; "";
int counter = 1;
while (counter < products.Count())
{
	Workflow.DTO.Models.Product product = products[counter];
	string productIdentifier = product.GetProductTypeName();
	__Result = __Result + productIdentifier;
	counter = counter + 1;
}
__Result = __Result + "" та оплатіть договір.</br><br/>З боку НАСК \""ОРАНТА\"" індивідуальну пропозицію підписано кваліфікованим електронним підписом уповноваженої особи НАСК \""ОРАНТА\"".<br/>На виконання вимог ст.86-88 Закону України \""Про страхування\"" надсилаємо для ознайомлення до укладення договору страхування наступні документи:"" + ""</br><br/>Інформаційний документ про страховий продукт, який знаходиться за наступним посиланням: <a href='https://apifalcon.oranta.ua/files/e9365c22-b61e-457e-bc3e-b0e9339cb390'>https://apifalcon.oranta.ua/files/e9365c22-b61e-457e-bc3e-b0e9339cb390<a/>"" + ""</br><br/>Інформація про страховика, яка знаходиться за наступним посиланням: <a href='https://oranta.ua/info/services-and-insurer/'>https://oranta.ua/info/services-and-insurer/<a/>"" + ""</br><br/>Інформація про страхового посередника, яка знаходиться за наступним посиланням: "" + AgentCoverLetter + ""</br><br/>Підписуючи договір страхування Ви підтверджуєте, що ознайомилися та приймаєте умови №  71.1.24 від 30 грудня 2024 р. страхового продукту "" + __Product.GetProductTypeName().Replace(__Product.GetProductTypeName(), ""Автоцивілка"") + "", які розташовані за посиланням <a href='https://apifalcon.oranta.ua/files/e9365c22-b61e-457e-bc3e-b0e9339cb390'>https://apifalcon.oranta.ua/files/e9365c22-b61e-457e-bc3e-b0e9339cb390<a/> та даєте згоду на укладення договору."" + ""</br><br/>З найкращими побажаннями</br>ПАТ \""НАСК \""ОРАНТА\"""";
",,167
168,RepresentativeOrFullName,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID == 2 && __Product.Insurer.Representative != null)
	{
		__Result = __Product.Insurer.Representative.Lastname + "" "" + __Product.Insurer.Representative.Firstname + "" "" + __Product.Insurer.Representative.Secondname;
	}
	else
	{
			__Result = string.Format(""{0} {1} {2}"", face.Lastname, face.Firstname, face.Secondname);
	}
}
",,168
169,RepresentativeFullName,"__Result = """";
if (__Product.Insurer != null && __Product.Insurer.Representative != null)
{
	__Result = __Product.Insurer.Representative.FullName != null ? __Product.Insurer.Representative.FullName : ""---"";
}
",,169
170,ResponsibleFullName,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Responsible.Representative;
if (face != null)
{
	if (face.PersonTypeID == 2)
	{
		__Result = face.FullName;
	}
	else
	{
			__Result = string.Format(""{0} {1} {2}"", face.Lastname, face.Firstname, face.Secondname);
	}
}
",,170
171,ResponsiblePost,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Responsible.Representative;
if (face != null)
{
	__Result = face.Post;
}
",,171
172,ResponsibleDoc,"__Result = """";
if (__Product.Responsible.Representative != null)
{
	Workflow.DTO.Models.Document doc = __Product.Responsible.Representative.Documents.FirstOrDefault(d => d.gid == __Product.Responsible.DocumentGID);
	if (doc != null)
	{
		__Result = "", який діє на підставі документу "" + doc.GetDocumentTypeName();
	}
	if (doc.Number != null)
	{
		__Result = __Result + "" номер "" + doc.Number;
	}
	if (!string.IsNullOrEmpty(doc.IssuedBy))
	{
		__Result = __Result + "" виданого "" + doc.IssuedBy;
	}
	if (doc.IssuedDate != null)
	{
		__Result = __Result + "" від "" + doc.IssuedDate.Value.ToShortDateString() + "" р."";
	}
}
",,172
173,718DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""165"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,173
174,718ResponsibleAttorney,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""165"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант довіреність"");
	if (param != null)
	{
		__Result = "", який діє на підставі Довіреності "" + param.GetParameterValueCaption().ToString();
	}
}
",,174
175,718ResponsibleName,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""165"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,175
176,718ResponsiblePost,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""165"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,176
177,718Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""165"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,177
178,219TwoPaymentSecondPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		__Result = __Product.PaymentPeriods[1].PlanDate != null ? ""по "" + __Product.PaymentPeriods[1].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,178
179,219TwoPaymentFirstPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? ""по "" + __Product.RegisteredDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,179
180,219TwoPaymentSecondPartStartDateFrom,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		if (__Product.PaymentPeriods[1].PlanDate != null && __Product.PaymentPeriods[1].DueDate != null)
		{
			__Result = ""з "" + __Product.PaymentPeriods[1].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р. по "" + __Product.PaymentPeriods[1].DueDate.AddSeconds((double)(-1)).ToShortDateString() + "" р."";
		}
	}
}
",,180
181,219TwoPaymentFirstPartStartDateFrom,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		if (__Product.PaymentPeriods[0].PlanDate != null && __Product.PaymentPeriods[0].DueDate != null)
		{
			__Result = ""з "" + __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р. по "" + __Product.PaymentPeriods[0].DueDate.AddSeconds((double)(-1)).ToShortDateString() + "" р."";
		}
	}
}
",,181
182,219TwoPaymentSecondPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		__Result = __Product.PaymentPeriods[1].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,182
183,219TwoPaymentFirstPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		__Result = __Product.PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,183
184,725DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""106"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,184
185,725ResponsibleAttorney,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""106"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант довіреність"");
	if (param != null)
	{
		__Result = "", який діє на підставі Довіреності "" + param.GetParameterValueCaption().ToString();
	}
}
",,185
186,725ResponsibleName,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""106"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,186
187,725ResponsiblePost,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""106"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,187
188,725Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""106"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,188
189,786LetterSubject,"__Result = ""Договір страхування \""Автоцивілка\"" номер "" + __Product.PolisNumber;
",,189
190,786Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Автоцивілка\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,190
191,219LetterSubject,"__Result = ""Договір страхування \""Автопарасолька\"" номер "" + __Product.PolisNumber;
",,191
192,219Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Автопарасолька\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,192
193,219AppCrossProductPolisNumber,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __InsuranceApplication.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Код електронного полісу"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,193
194,219AppCrossProductPolisRegisteredDate,"Workflow.DTO.Models.Product cross = __InsuranceApplication.Products.FirstOrDefault(p => p.GetProductTypeCode() == ""786"");
if (cross != null)
{
	__Result = cross.BeginingDate.ToShortDateString();
}
if (string.IsNullOrEmpty(__Result) && __InsuranceApplication.BasedOnProductGID != null)
{
	Workflow.DTO.Models.Product crossProduct = __Context.GetProductByGID(__InsuranceApplication.BasedOnProductGID.Value);
	if (crossProduct != null)
	{
		__Result = crossProduct.RegisteredDate.ToShortDateString();
	}
}
",,194
195,219CrossProductPolisRegisteredDate,"List<string> Codes = new List<string>();
Codes.Add(""786"");
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeCodes(__Product, Codes);
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).RegisteredDate.ToShortDateString();
}
",,195
196,219CrossProductPolisNumber,"List<string> Codes = new List<string>();
Codes.Add(""786"");
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeCodes(__Product, Codes);
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).PolisNumber;
}
",,196
197,RecordDateMTSBUProduct,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Дата та час внесення інформації в ЦБД МТСБУ"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,197
198,787VehicleProducedDate,"__Result = """";
if (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК ВЕСЬ СВІТ Партнер Номер 3"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Агрегатор 25"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Агрегатор 30"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Партнер 1"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Агрегатор 35"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Агрегатор 25"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Агрегатор 30"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Партнер 1"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Агрегатор 35"")
{
	__Result = """";
}
else
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
		if (vehicle != null && vehicle.ProducedDate != null)
		{
			__Result = vehicle.ProducedDate.Value.ToString();
		}
	}
}
",,198
199,757InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,199
200,219OTPLSumS100,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)100000)
		{
			__Result = ""Так"";
		}
	}
}
",,200
201,219OTPLSumS150,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)150000)
		{
			__Result = ""Так"";
		}
	}
}
",,201
202,219OTPLSumM150,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)150000)
		{
			__Result = ""Так"";
		}
	}
}
",,202
203,219OTPLSumM300,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)300000)
		{
			__Result = ""Так"";
		}
	}
}
",,203
204,219OTPLSumL1000000,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)1000000)
		{
			__Result = ""Так"";
		}
	}
}
",,204
205,219CaskoMaxiPaymentPaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,205
206,219CaskoMaxiPaymentPaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,206
207,219CaskoMaxiPaymentPaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,207
208,219CaskoMaxiRatePaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,208
209,219CaskoMaxiRatePaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,209
210,219CaskoMaxiRatePaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,210
211,219CaskoMaxiPaketS,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""Так"";
	}
}
",,211
212,219CaskoMaxiPaketM,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		__Result = ""Так"";
	}
}
",,212
213,219CaskoMaxiPaketL,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		__Result = ""Так"";
	}
}
",,213
214,219CaskoLightPaketS,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""Так"";
	}
}
",,214
215,219CaskoLightPaketM,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		__Result = ""Так"";
	}
}
",,215
216,219CaskoLightPaketL,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		__Result = ""Так"";
	}
}
",,216
217,757NumberOfInsuranceCases,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Кількість страхових випадків"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,217
218,757ExperienceOfNotarialActivity,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Стаж нотаріальної діяльності"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,218
219,757RegistrationCertificate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Реєстраційне посвідчення про реєстрацію приватної нотаріальної діяльності"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,219
220,757Certificate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Свідоцтво про право на зайняття нотаріальною діяльністю"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,220
221,757ResponsibleName1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,221
222,757ResponsiblePost1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,222
223,757Franshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна майну"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString();
				}
			}
		}
	}
}
",,223
224,757Rate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N6"");
}
",,224
225,MTPLInsurerDoc,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null && face.PersonTypeID != 2)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
	if (param != null && param.GetParameterValueCaption().ToString() != ""Без пільг"" && __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 25 ФО"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 30 ФО"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 30+2 ФО"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 30 ФО новий"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 30+2 ФО новий"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 25 ФО новий"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 25+2 ФО новий""))
	{
		__Result = """";
	}
	else
	{
			Workflow.DTO.Models.Document facedocument = __Product.Insurer.FaceDocument;
		if (facedocument != null)
		{
			__Result = facedocument.GetDocumentTypeName();
			if (facedocument.Number != null)
			{
				__Result = __Result + "" номер "" + facedocument.Number;
			}
			if (!string.IsNullOrEmpty(facedocument.IssuedBy))
			{
				__Result = __Result + "" виданий "" + facedocument.IssuedBy;
			}
			if (facedocument.IssuedDate != null)
			{
				__Result = __Result + "" від "" + facedocument.IssuedDate.Value.ToShortDateString() + "" р."";
			}
		}
		else
		{
					List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => (i.GetDocumentTypeName() == ""Посвідчення водія"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"") && i.IsActive == true).OrderBy(i => i.id);
			string result = """";
			Workflow.DTO.Models.Document document = documents[documents.Count() - 1];
			if (document != null)
			{
				__Result = document.GetDocumentTypeName();
			}
			if (document.Number != null)
			{
				__Result = __Result + "" номер "" + document.Number;
			}
			if (!string.IsNullOrEmpty(document.IssuedBy))
			{
				__Result = __Result + "" виданий "" + document.IssuedBy;
			}
			if (document.IssuedDate != null)
			{
				__Result = __Result + "" від "" + document.IssuedDate.Value.ToShortDateString() + "" р."";
			}
		}
	}
}
",,225
226,757Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,226
227,RecordDateMTSBU,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __InsuranceApplication.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Дата та час внесення інформації в ЦБД МТСБУ"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,227
228,InsurerRepresentativePosition,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null && __Product.Insurer != null && __Product.Insurer.Representative != null)
{
	Workflow.DTO.Models.EntityAttribute attr = __Product.Insurer.Representative.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Посада представника"");
	if (attr != null)
	{
		__Result = attr.GetValueCaption().ToString();
	}
}
",,228
229,757DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,229
230,757ResponsibleAttorney,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант довіреність"");
	if (param != null)
	{
		__Result = "", який діє на підставі Довіреності "" + param.GetParameterValueCaption().ToString();
	}
}
",,230
231,757ResponsibleName,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,231
232,757ResponsiblePost,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""520"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,232
233,211CaskoMaxiPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО MAXI"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,233
234,211CascoMaxiRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО MAXI"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,234
235,211NoCaskoMaxi,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО MAXI"");
__Result = __Context.PrintMarkedPoint(prog == null);
",,235
236,211CaskoMaxi,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО MAXI"");
__Result = __Context.PrintMarkedPoint(prog != null);
",,236
237,716ResponsibleName,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,237
238,716ResponsiblePost,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,238
239,716ResponsibleAttorney,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант довіреність"");
	if (param != null)
	{
		__Result = "", який діє на підставі Довіреності "" + param.GetParameterValueCaption().ToString();
	}
}
",,239
240,716DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,240
241,716Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,241
242,EndDateGen,"__Result = """";
if (__Product.Contract != null)
{
	__Result = __Product.Contract.EndDate.Value.ToShortDateString();
}
",,242
243,756AppCrossProductPolisRegisteredDateEP,"List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""ЕП ОСЦВВНТЗ для фіз. особи НОВИЙ 20190921"");
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).RegisteredDate.ToShortDateString();
}
",,243
244,756AppCrossProductPolisRegisteredDate,"List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""ОСЦВВНТЗ для фіз. особи НОВИЙ 20190921"");
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).RegisteredDate.ToShortDateString();
}
",,244
245,BeginDateGen,"__Result = """";
if (__Product.Contract != null)
{
	__Result = __Product.Contract.BeginDate.Value.ToShortDateString();
}
",,245
246,747FirstPaymentEndDate,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() != ""1 платіж"")
	{
		__Result = __Product.PaymentPeriods[0].DueDate != null ? __Product.PaymentPeriods[0].DueDate.AddSeconds((double)(-1)).ToShortDateString() : ""-----"";
	}
}
",,246
247,747FirstPaymentStartDate,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() != ""1 платіж"")
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() : ""-----"";
	}
}
",,247
248,747FirstPaymentValue,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() != ""1 платіж"")
	{
		__Result = __Product.PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString();
	}
}
",,248
249,747Franshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Воєнні ризики"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString() + "" грн 00 коп"";
				}
			}
		}
	}
}
",,249
250,747Location,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Місцезнаходження застрахованого майна"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,250
251,747InsurerIdentificationCode,"__Result = ""---"";
if (__Product.Insurer.Face.PersonTypeID != 2)
{
	if (__Product.Insurer.Face.IdentificationCode != null)
	{
		__Result = string.Format(""{0}"", __Product.Insurer.Face.IdentificationCode);
	}
}
",,251
252,747InsurerEDRPOU,"__Result = ""---"";
if (__Product.Insurer.Face.PersonTypeID == 2)
{
	if (__Product.Insurer.Face.EDRPOU != null)
	{
		__Result = string.Format(""{0}"", __Product.Insurer.Face.EDRPOU);
	}
}
",,252
253,747Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,253
254,PrivilegeDocIssuedDate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Пенсіонер"")
	{
		Workflow.DTO.Models.Document doc1 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Пенсійне посвідчення"");
		if (doc1 != null)
		{
			__Result = ((DateTime)doc1.IssuedDate).ToShortDateString() + "" р."";
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Інваліди I групи"" || param.GetParameterValueCaption().ToString() == ""Інваліди II групи"" || param.GetParameterValueCaption().ToString() == ""Особа з інвалідністю внаслідок війни""))
	{
		Workflow.DTO.Models.Document doc2 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення (інваліда)"");
		if (doc2 != null)
		{
			__Result = ((DateTime)doc2.IssuedDate).ToShortDateString() + "" р."";
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Учасник Революції Гідності"")
	{
		Workflow.DTO.Models.Document doc3 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника Революції Гідності"");
		if (doc3 != null)
		{
			__Result = ((DateTime)doc3.IssuedDate).ToShortDateString() + "" р."";
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Учасник бойових дій"" || param.GetParameterValueCaption().ToString() == ""Учасник війни""))
	{
		Workflow.DTO.Models.Document doc4 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника війни"" || i.GetDocumentTypeName() == ""Посвідчення учасника бойових дій"");
		if (doc4 != null)
		{
			__Result = ((DateTime)doc4.IssuedDate).ToShortDateString() + "" р."";
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Особи, які постраждали внаслідок Чорнобильської"")
	{
		Workflow.DTO.Models.Document doc5 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Чорнобильське посвідчення"");
		if (doc5 != null)
		{
			__Result = ((DateTime)doc5.IssuedDate).ToShortDateString() + "" р."";
		}
	}
}
",,254
255,PrivilegeDocIssuedBy,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Пенсіонер"")
	{
		Workflow.DTO.Models.Document doc1 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Пенсійне посвідчення"");
		if (doc1 != null)
		{
			__Result = doc1.IssuedBy;
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Інваліди I групи"" || param.GetParameterValueCaption().ToString() == ""Інваліди II групи"" || param.GetParameterValueCaption().ToString() == ""Особа з інвалідністю внаслідок війни""))
	{
		Workflow.DTO.Models.Document doc2 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення (інваліда)"");
		if (doc2 != null)
		{
			__Result = doc2.IssuedBy;
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Учасник Революції Гідності"")
	{
		Workflow.DTO.Models.Document doc3 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника Революції Гідності"");
		if (doc3 != null)
		{
			__Result = doc3.IssuedBy;
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Учасник бойових дій"" || param.GetParameterValueCaption().ToString() == ""Учасник війни""))
	{
		Workflow.DTO.Models.Document doc4 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника війни"" || i.GetDocumentTypeName() == ""Посвідчення учасника бойових дій"");
		if (doc4 != null)
		{
			__Result = doc4.IssuedBy;
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Особи, які постраждали внаслідок Чорнобильської"")
	{
		Workflow.DTO.Models.Document doc5 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Чорнобильське посвідчення"");
		if (doc5 != null)
		{
			__Result = doc5.IssuedBy;
		}
	}
}
",,255
256,PrivilegeDocNumber,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Пенсіонер"")
	{
		Workflow.DTO.Models.Document doc1 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Пенсійне посвідчення"");
		if (doc1 != null)
		{
			int index1 = doc1.Number.IndexOf(""-"");
			__Result = doc1.Number.Substring(index1 + 1, doc1.Number.Length - index1 - 1);
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Інваліди I групи"" || param.GetParameterValueCaption().ToString() == ""Інваліди II групи"" || param.GetParameterValueCaption().ToString() == ""Особа з інвалідністю внаслідок війни""))
	{
		Workflow.DTO.Models.Document doc2 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення (інваліда)"");
		if (doc2 != null)
		{
			int index2 = doc2.Number.IndexOf(""-"");
			__Result = doc2.Number.Substring(index2 + 1, doc2.Number.Length - index2 - 1);
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Учасник Революції Гідності"")
	{
		Workflow.DTO.Models.Document doc3 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника Революції Гідності"");
		if (doc3 != null)
		{
			int index3 = doc3.Number.IndexOf(""-"");
			__Result = doc3.Number.Substring(index3 + 1, doc3.Number.Length - index3 - 1);
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Учасник бойових дій"" || param.GetParameterValueCaption().ToString() == ""Учасник війни""))
	{
		Workflow.DTO.Models.Document doc4 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника війни"" || i.GetDocumentTypeName() == ""Посвідчення учасника бойових дій"");
		if (doc4 != null)
		{
			int index4 = doc4.Number.IndexOf(""-"");
			__Result = doc4.Number.Substring(index4 + 1, doc4.Number.Length - index4 - 1);
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Особи, які постраждали внаслідок Чорнобильської"")
	{
		Workflow.DTO.Models.Document doc5 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Чорнобильське посвідчення"");
		if (doc5 != null)
		{
			int index5 = doc5.Number.IndexOf(""-"");
			__Result = doc5.Number.Substring(index5 + 1, doc5.Number.Length - index5 - 1);
		}
	}
}
",,256
257,PrivilegeDocSeria,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Пенсіонер"")
	{
		Workflow.DTO.Models.Document doc1 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Пенсійне посвідчення"");
		if (doc1 != null)
		{
			__Result = doc1.Number.Substring(0, doc1.Number.IndexOf(""-""));
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Інваліди I групи"" || param.GetParameterValueCaption().ToString() == ""Інваліди II групи"" || param.GetParameterValueCaption().ToString() == ""Особа з інвалідністю внаслідок війни""))
	{
		Workflow.DTO.Models.Document doc2 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення (інваліда)"");
		if (doc2 != null)
		{
			__Result = doc2.Number.Substring(0, doc2.Number.IndexOf(""-""));
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Учасник Революції Гідності"")
	{
		Workflow.DTO.Models.Document doc3 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника Революції Гідності"");
		if (doc3 != null)
		{
			__Result = doc3.Number.Substring(0, doc3.Number.IndexOf(""-""));
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Учасник бойових дій"" || param.GetParameterValueCaption().ToString() == ""Учасник війни""))
	{
		Workflow.DTO.Models.Document doc4 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника війни"" || i.GetDocumentTypeName() == ""Посвідчення учасника бойових дій"");
		if (doc4 != null)
		{
			__Result = doc4.Number.Substring(0, doc4.Number.IndexOf(""-""));
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Особи, які постраждали внаслідок Чорнобильської"")
	{
		Workflow.DTO.Models.Document doc5 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Чорнобильське посвідчення"");
		if (doc5 != null)
		{
			__Result = doc5.Number.Substring(0, doc5.Number.IndexOf(""-""));
		}
	}
}
",,257
258,PrivilegeDocTypeName,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Пенсіонер"")
	{
		Workflow.DTO.Models.Document doc1 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Пенсійне посвідчення"");
		if (doc1 != null)
		{
			__Result = doc1.GetDocumentTypeName();
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Інваліди I групи"" || param.GetParameterValueCaption().ToString() == ""Інваліди II групи"" || param.GetParameterValueCaption().ToString() == ""Особа з інвалідністю внаслідок війни""))
	{
		Workflow.DTO.Models.Document doc2 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення (інваліда)"");
		if (doc2 != null)
		{
			__Result = doc2.GetDocumentTypeName();
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Учасник Революції Гідності"")
	{
		Workflow.DTO.Models.Document doc3 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника Революції Гідності"");
		if (doc3 != null)
		{
			__Result = doc3.GetDocumentTypeName();
		}
	}
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Учасник бойових дій"" || param.GetParameterValueCaption().ToString() == ""Учасник війни""))
	{
		Workflow.DTO.Models.Document doc4 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення учасника війни"" || i.GetDocumentTypeName() == ""Посвідчення учасника бойових дій"");
		if (doc4 != null)
		{
			__Result = doc4.GetDocumentTypeName();
		}
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Особи, які постраждали внаслідок Чорнобильської"")
	{
		Workflow.DTO.Models.Document doc5 = __Product.Insurer.Face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Чорнобильське посвідчення"");
		if (doc5 != null)
		{
			__Result = doc5.GetDocumentTypeName();
		}
	}
}
",,258
259,ContractLinkMTSBU,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Посилання на електронний поліс"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,259
260,RegisterNumber,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Номер запису в Реєстрі посередників"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,260
261,716RecordNumberRegisterIntermediaries,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Номер запису в Реєстрі посередників"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,261
262,747ResponsibleName1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,262
263,747ResponsiblePost1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,263
264,747ResponsibleName,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,264
265,747ResponsiblePost,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,265
266,747ResponsibleAttorney,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант довіреність"");
	if (param != null)
	{
		__Result = "", який діє на підставі Довіреності "" + param.GetParameterValueCaption().ToString();
	}
}
",,266
267,747DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""411"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,267
268,Creator,"__Result = """";
Workflow.DTO.Models.User creator = __Context.GetUserByGID(__Product.CreatorUserGID.Value);
__Result = creator.LastName + "" "" + creator.FirstName + "" "" + creator.SecondName;
",,268
269,787Subject,"__Result = ""Договір страхування \""Зелена картка\"" номер "" + __Product.PolisNumber;
",,269
270,787Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/> НАСК \""ОРАНТА\"""";
",,270
271,SMS787,"__Result = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Мобільний додаток"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Мобільний додаток"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Сайт 15"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Сайт 15"") ? ""Разовий ідентифікатор для підписання договору \""Зелена картка\"": {smscode}"" : ""Разовий ідентифікатор для підписання договору \""Зелена картка\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,271
272,VehicleUnladenWeight,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
	if (vehicle != null && vehicle.UnladenWeight != null)
	{
		__Result = vehicle.UnladenWeight.Value.ToString(""N0"");
	}
}
",,272
273,VehicleMaxWeight,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
	if (vehicle != null && vehicle.MaxWeight != null)
	{
		__Result = vehicle.MaxWeight.Value.ToString(""N0"");
	}
}
",,273
274,VehicleEngineKw,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
	if (vehicle != null && vehicle.EngineKw != null)
	{
		__Result = vehicle.EngineKw.Value.ToString(""N0"");
	}
}
",,274
275,VehicleType,"__Result = """";
int programIndex = 0;
while (programIndex < __Product.Programs.Count() && string.IsNullOrEmpty(__Result))
{
	Workflow.DTO.Models.Program program = __Product.Programs[programIndex];
	int insuranceObjectIndex = 0;
	while (insuranceObjectIndex < program.InsuranceObjects.Count() && string.IsNullOrEmpty(__Result))
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects[insuranceObjectIndex];
		if (insuranceObject.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && insuranceObject.Object != null && insuranceObject.Object.GetObjectTypeName() == ""Наземний транспортний засіб"")
		{
			__Result = insuranceObject.GetObjectTypeName().Substring(0, 2).Trim();
		}
		insuranceObjectIndex = insuranceObjectIndex + 1;
	}
	programIndex = programIndex + 1;
}
",,275
276,ParamRegion,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Область"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,276
277,IsProlongationMarkedPoint,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Номер базового полісу"");
if (attribute != null)
{
	__Result = __Context.PrintMarkedPoint(attribute != null);
}
",,277
278,EPOsagoTaxi,"__Result = ""Не застосовується"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Умови експлуатації ТЗ"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Звичайний"")
	{
		__Result = ""Застосовується"";
	}
}
",,278
279,EPOsagoDriversAge,"__Result = ""Не застосовується"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Вік водіїв"");
	if (param != null && (param.GetParameterValueCaption().ToString() == ""Понад 23 роки та менше 76 років"" || param.GetParameterValueCaption().ToString() == ""Понад 30 років та менше 76 років""))
	{
		__Result = ""Застосовується"";
	}
}
",,279
280,EPOsagoInsurerResident,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (__Product.Insurer.Face.GetIsResident() == true)
	{
		__Result = ""Резидент України"";
	}
	else
	{
			__Result = ""Нерезидент України"";
	}
}
",,280
281,EPOsagoInsurerType,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID == 2)
	{
		__Result = ""Юридична особа"";
	}
	else
	{
			__Result = ""Фізична особа"";
	}
}
",,281
282,EPOsagoDriversAgeMax,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Вік водіїв"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Понад 23 роки та менше 76 років"")
	{
		__Result = ""76"";
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Понад 30 років та менше 76 років"")
	{
		__Result = ""76"";
	}
}
",,282
283,EPOsagoDriversAgeMin,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Вік водіїв"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Понад 23 роки та менше 76 років"")
	{
		__Result = ""23"";
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Понад 30 років та менше 76 років"")
	{
		__Result = ""30"";
	}
}
",,283
284,Privilege,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
	if (param != null && param.GetParameterValueCaption().ToString() != ""Без пільг"")
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,284
285,PrivilegeIsorNot,"__Result = ""Так"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (program != null && face != null)
{
	if (face.PersonTypeID == 2)
	{
		__Result = ""Ні"";
	}
	if (face.PersonTypeID != 2)
	{
		Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пільга"");
		if (param != null && param.GetParameterValueCaption().ToString() == ""Без пільг"")
		{
			__Result = ""Ні"";
		}
	}
}
",,285
286,VehicleNumberOfSeats,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
	if (vehicle != null && vehicle.NumberOfSeats != null)
	{
		__Result = vehicle.NumberOfSeats.Value.ToString(""N0"");
	}
}
",,286
287,VehicleUkrOrNot,"__Result = ""Так"";
if (__Product.Programs != null && __Product.Programs[0].InsuranceObjects != null && __Product.Programs[0].InsuranceObjects.Count() > 0 && __Product.Programs[0].InsuranceObjects[0].Object != null)
{
	Workflow.DTO.Models.ProgramParameterValue zone = __Product.Programs[0].Parameters.FirstOrDefault(p => p.GetParameterName() == ""Реєстрація ТЗ"");
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)__Product.Programs[0].InsuranceObjects[0].Object;
	if (zone != null && zone.GetParameterValueCaption().ToString() == ""Зареєстровано не в Україні"")
	{
		__Result = ""Ні"";
	}
}
",,287
288,VehicleEngine,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
	if (vehicle != null && vehicle.Capacity != null)
	{
		__Result = vehicle.Capacity.Value.ToString(""N0"");
	}
}
",,288
289,AgentAddressFlat,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.Flat;
			}
		}
	}
}
",,289
290,739GeneralContractDate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дата укладання Генерального договору"");
	if (param != null)
	{
		string value = param.GetParameterValueCaption().ToString();
		__Result = value.Substring(0, value.IndexOf("" ""));
	}
}
",,290
291,EPOsagoEstateRiskLimitManyObjects,"__Result = """";
if (__Product.Programs != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName().Trim() == ""Шкода, заподіяна майну потерпілих"" && c.CoverLimit != null));
	if (insObj != null)
	{
		decimal value = insObj.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна майну потерпілих"" && c.CoverLimit != null).CoverLimit.Value * 5;
		__Result = value.ToString(""N0"") + "" ("" + __Context.MoneyPhrase(value, ""UAH"", true) + "")"";
	}
}
",,291
292,EPOsagoLifeHealthRiskLimitManyObjects,"__Result = """";
if (__Product.Programs != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName().Trim() == ""Шкода, заподіяна життю та здоров'ю"" && c.CoverLimit != null));
	if (insObj != null)
	{
		decimal value = insObj.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна життю та здоров'ю "" && c.CoverLimit != null).CoverLimit.Value * 10;
		__Result = value.ToString(""N0"") + "" ("" + __Context.MoneyPhrase(value, ""UAH"", true) + "")"";
	}
}
",,292
293,ThreePaymentThirdPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[2].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,293
294,ThreePaymentSecondPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[1].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,294
295,ThreePaymentFirstPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,295
296,TwoPaymentSecondPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = __Product.PaymentPeriods[1].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,296
297,TwoPaymentFirstPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = __Product.PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,297
298,OnePaymentFirstPartValue,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""1 платіж"")
	{
		__Result = __Product.PaymentPeriods[0].PlanedPayments.Sum(pp => pp.Value).ToString(""N2"");
	}
}
",,298
299,739ContractNumberGeneral,"__Result = ""---"";
if (__Product.Contract != null)
{
	if (!string.IsNullOrEmpty(__Product.Contract.ContractNumber))
	{
		__Result = __Product.Contract.ContractNumber;
	}
}
",,299
300,AgentDoc,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				Workflow.DTO.Models.Document doc = agent.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Агентський договір"" && i.EndDate != null && DateTime.GetNow() <= i.EndDate.Value);
				if (doc != null)
				{
					__Result = doc.GetDocumentTypeName();
					if (doc.Number != null)
					{
						__Result = __Result + "" № "" + doc.Number;
					}
					if (doc.IssuedDate != null)
					{
						__Result = __Result + "" від "" + doc.IssuedDate.Value.ToShortDateString() + "" р."";
					}
					if (doc.StartDate != null)
					{
						__Result = __Result + "" від "" + doc.StartDate.Value.ToShortDateString() + "" р."";
					}
				}
			}
		}
	}
}
",,300
301,AgentAddressHouse,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.House;
			}
		}
	}
}
",,301
302,AgentAddressStreet,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.Street;
			}
		}
	}
}
",,302
303,AgentAddressFullSettlementName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.GetFullSettlementName();
			}
		}
	}
}
",,303
304,AgentAddressRegionName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.GetRegionName();
			}
		}
	}
}
",,304
305,739CountObjects,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Кількість осіб"");
	if (param != null)
	{
		__Result = param.ParameterValue.ToString();
	}
}
",,305
306,730OtherPayment,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Інше майно"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Інше майно"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
			__Result = result.ToString(""N2"");
		}
	}
}
",,306
307,730OtherRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Інше майно"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Інше майно"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
			__Result = result.ToString(""N4"");
		}
	}
}
",,307
308,730OtherInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Інше майно"");
		if (insuranceObject != null && insuranceObject.InsuranceSum != null)
		{
			__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
		}
	}
}
",,308
309,730OtherFranshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Інше майно"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				__Result = franchise.GetFranchiseValueCaption().ToString();
			}
		}
	}
}
",,309
310,730PersonalItemsPayment,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Особисті речі"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Особисті речі"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
			__Result = result.ToString(""N2"");
		}
	}
}
",,310
311,730PersonalItemsRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Особисті речі"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Особисті речі"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
			__Result = result.ToString(""N4"");
		}
	}
}
",,311
312,730PersonalItemsInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Особисті речі"");
		if (insuranceObject != null && insuranceObject.InsuranceSum != null)
		{
			__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
		}
	}
}
",,312
313,730PersonalItemsFranshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Особисті речі"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				__Result = franchise.GetFranchiseValueCaption().ToString();
			}
		}
	}
}
",,313
314,730MovablesPayment,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
			__Result = result.ToString(""N2"");
		}
	}
}
",,314
315,730MovablesRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
			__Result = result.ToString(""N4"");
		}
	}
}
",,315
316,730MovablesInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
		if (insuranceObject != null && insuranceObject.InsuranceSum != null)
		{
			__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
		}
	}
}
",,316
317,730MovablesFranshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				__Result = franchise.GetFranchiseValueCaption().ToString();
			}
		}
	}
}
",,317
318,730ElectronicPayment,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Побутова техніка, електронне обладнання, ПК"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Побутова техніка, електронне обладнання, ПК"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
			__Result = result.ToString(""N2"");
		}
	}
}
",,318
319,730ElectronicRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Побутова техніка, електронне обладнання, ПК"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Побутова техніка, електронне обладнання, ПК"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
			__Result = result.ToString(""N4"");
		}
	}
}
",,319
320,730ElectronicInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Побутова техніка, електронне обладнання, ПК"");
		if (insuranceObject != null && insuranceObject.InsuranceSum != null)
		{
			__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
		}
	}
}
",,320
321,730ElectronicFranshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Побутова техніка, електронне обладнання, ПК"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				__Result = franchise.GetFranchiseValueCaption().ToString();
			}
		}
	}
}
",,321
322,730FurniturePayment,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Меблі, предмети інтерєру"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Меблі, предмети інтерєру"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
			__Result = result.ToString(""N2"");
		}
	}
}
",,322
323,730FurnitureRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Меблі, предмети інтерєру"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Меблі, предмети інтерєру"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
			__Result = result.ToString(""N4"");
		}
	}
}
",,323
324,730FurnitureInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Меблі, предмети інтерєру"");
		if (insuranceObject != null && insuranceObject.InsuranceSum != null)
		{
			__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
		}
	}
}
",,324
325,730FurnitureFranshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Меблі, предмети інтерєру"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Страхова сума на кожну окрему будівлю або споруду"")
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				__Result = franchise.GetFranchiseValueCaption().ToString();
			}
		}
	}
}
",,325
326,730SpecialConditionsProducts,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Особливі умови"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,326
327,739Subject,"__Result = ""Договір страхування \""Захист мандрівникам\"" номер "" + __Product.PolisNumber;
",,327
328,739Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Захист мандрівникам\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,328
329,SMS739,"__Result = ""Разовий ідентифікатор для підписання договору \""Захист мандрівникам\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,329
330,739Sport,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"" || p.GetInsuranceTypeCode() == ""142"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Заняття ризиковими видами спорту"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,330
331,756AppCrossProductPolisNumber,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __InsuranceApplication.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Код електронного полісу"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,331
332,756NumberOtherPolis,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
	if (param != null)
	{
		__Result = param.ParameterValue.ToString();
	}
}
",,332
333,756CrossProductPolisRegisteredDateEP,"List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""ЕП ОСЦВВНТЗ для фіз. особи НОВИЙ 20190921"");
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).RegisteredDate.ToShortDateString();
}
",,333
334,756CrossProductPolisNumberEP,"__Result = """";
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""ЕП ОСЦВВНТЗ для фіз. особи НОВИЙ 20190921"");
if (crossProducts != null && crossProducts.Count() > 0)
{
	int index = crossProducts.ElementAt(0).PolisNumber.IndexOf(""-"");
	__Result = crossProducts.ElementAt(0).PolisNumber.Substring(index + 1, crossProducts[0].PolisNumber.Length - index - 1);
}
",,334
335,756CrossProductPolisRegisteredDate,"List<string> Codes = new List<string>();
Codes.Add(""233"");
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeCodes(__Product, Codes);
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).RegisteredDate.ToShortDateString();
}
else
{
	Workflow.DTO.Models.Program prog = __Product.Programs[0];
	if (prog != null)
	{
		Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ дата видачі"");
		if (param != null)
		{
			string value = param.GetParameterValueCaption().ToString();
			__Result = value.Substring(0, value.IndexOf("" ""));
		}
	}
}
",,335
336,756CrossProductPolisSeria,"__Result = """";
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""ОСЦВВНТЗ для фіз. особи НОВИЙ 20190921"");
if (crossProducts != null && crossProducts.Count() > 0)
{
	int index = crossProducts.ElementAt(0).PolisNumber.IndexOf(""-"");
	__Result = crossProducts.ElementAt(0).PolisNumber.Substring(0, crossProducts[0].PolisNumber.IndexOf(""-""));
}
",,336
337,756CrossProductPolisNumber,"List<string> Codes = new List<string>();
Codes.Add(""233"");
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeCodes(__Product, Codes);
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).PolisNumber;
}
else
{
	Workflow.DTO.Models.Program prog = __Product.Programs[0];
	if (prog != null)
	{
		Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
		if (param != null)
		{
			__Result = param.ParameterValue.ToString();
		}
	}
}
",,337
338,AppOriginalPolisRegisteredDate,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Код електронного полісу"");
if (attribute != null)
{
	Workflow.DTO.Models.Product base = __Context.GetProductByPolisNumber(attribute.Value.ToString());
	if (base != null)
	{
		__Result = base.RegisteredDate.ToShortDateString();
	}
}
",,338
339,AppOriginalPolis,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Код електронного полісу"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,339
340,AppCrossProductPolisBeginDate,"Workflow.DTO.Models.Product cross = __InsuranceApplication.Products.FirstOrDefault(p => p.GetProductTypeCode() == ""233"");
if (cross != null)
{
	__Result = cross.BeginingDate.ToShortDateString();
}
if (string.IsNullOrEmpty(__Result) && __InsuranceApplication.BasedOnProductGID != null)
{
	Workflow.DTO.Models.Product crossProduct = __Context.GetProductByGID(__InsuranceApplication.BasedOnProductGID.Value);
	if (crossProduct != null)
	{
		__Result = crossProduct.RegisteredDate.ToShortDateString();
	}
}
",,340
341,OrantaTravelProgramEOrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Програма  страхування"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""E"")
		{
			__Result = ""V"";
		}
	}
}
",,341
342,730OutbuildingRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""311"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Господарські будівлі та споруди"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Господарські будівлі та споруди"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
			__Result = result.ToString(""N4"");
		}
	}
}
",,342
343,730OutbuildingPayment,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""311"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Господарські будівлі та споруди"");
		Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Господарські будівлі та споруди"");
		if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
		{
			decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
			__Result = result.ToString(""N2"");
		}
	}
}
",,343
344,730OutbuildingInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Господарські будівлі та споруди"");
		if (insuranceObject != null && insuranceObject.InsuranceSum != null)
		{
			__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
		}
	}
}
",,344
345,730Outbuilding,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Господарські будівлі та споруди"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхова сума щодо майна встановлюється"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Загальна страхова сума для кожної категорії майна"")
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Пожежа"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				__Result = franchise.GetFranchiseValueCaption().ToString();
			}
		}
	}
}
",,345
346,730HouseRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""311"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Житловий будинок"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Житловий будинок"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
		__Result = result.ToString(""N4"");
	}
}
",,346
347,730HousePayment,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""311"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Житловий будинок"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Житловий будинок"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
		__Result = result.ToString(""N2"");
	}
}
",,347
348,730HouseInsSum,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Житловий будинок"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,348
349,730HouseFranshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Житловий будинок"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Пожежа"" && c.Franchises != null);
	if (cover != null)
	{
		Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
		if (franchise != null)
		{
			__Result = franchise.GetFranchiseValueCaption().ToString();
		}
	}
}
",,349
350,756RegisteredDateOtherPolis,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ дата видачі"");
	if (param != null)
	{
		string value = param.GetParameterValueCaption().ToString();
		__Result = value.Substring(0, value.IndexOf("" ""));
	}
}
",,350
351,NoAgent,"__Result = """";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && agent.AgentChannels == null)
		{
			__Result = __Context.PrintMarkedPoint(agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32""));
		}
	}
}
",,351
352,730TotalPaymentAnimals,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""351"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""352"");
Workflow.DTO.Models.Program thirdProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""354"");
Workflow.DTO.Models.Program fourthProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""355"");
decimal result = 0;
if (program != null && secondProgram != null)
{
	List<Workflow.DTO.Models.InsuranceObject> insuranceObjects = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	List<Workflow.DTO.Models.InsuranceObject> secondInsuranceObjects = secondProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	result = result + (decimal)insuranceObjects.Sum(i => i.InsurancePayment.Value) + (decimal)secondInsuranceObjects.Sum(i => i.InsurancePayment.Value);
}
if (thirdProgram != null && fourthProgram != null)
{
	List<Workflow.DTO.Models.InsuranceObject> thirdInsuranceObjects = thirdProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	List<Workflow.DTO.Models.InsuranceObject> fourthInsuranceObjects = fourthProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	result = result + (decimal)thirdInsuranceObjects.Sum(i => i.InsurancePayment.Value) + (decimal)fourthInsuranceObjects.Sum(i => i.InsurancePayment.Value);
}
if (result > 0)
{
	__Result = result.ToString(""N2"");
}
",,352
353,730TotalSumAnimals,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""351"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""354"");
decimal result = 0;
if (program != null)
{
	List<Workflow.DTO.Models.InsuranceObject> insuranceObjects = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsuranceSum != null);
	result = result + (decimal)insuranceObjects.Sum(i => i.InsuranceSum.Value);
}
if (secondProgram != null)
{
	List<Workflow.DTO.Models.InsuranceObject> secondInsuranceObjects = secondProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsuranceSum != null);
	result = result + (decimal)secondInsuranceObjects.Sum(i => i.InsuranceSum.Value);
}
if (result > 0)
{
	__Result = result.ToString(""N2"");
}
",,353
354,730TotalPaymenProperty,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""311"");
Workflow.DTO.Models.Program thirdProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
Workflow.DTO.Models.Program fourthProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""321"");
if (program != null && secondProgram != null)
{
	List<Workflow.DTO.Models.InsuranceObject> insuranceObject = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	List<Workflow.DTO.Models.InsuranceObject> secondInsuranceObject = secondProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	if (insuranceObject != null && secondInsuranceObject != null && insuranceObject.Count() > 0)
	{
		decimal resultone = (decimal)insuranceObject.Sum(i => i.InsurancePayment.Value) + (decimal)secondInsuranceObject.Sum(i => i.InsurancePayment.Value);
		__Result = resultone.ToString(""N2"");
	}
}
if (program != null && secondProgram != null && thirdProgram != null && fourthProgram != null)
{
	List<Workflow.DTO.Models.InsuranceObject> insuranceObjects = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	List<Workflow.DTO.Models.InsuranceObject> secondInsuranceObjects = secondProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	List<Workflow.DTO.Models.InsuranceObject> thirdInsuranceObjects = thirdProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	List<Workflow.DTO.Models.InsuranceObject> fourthInsuranceObjects = fourthProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsurancePayment != null);
	if (insuranceObjects != null && secondInsuranceObjects != null && thirdInsuranceObjects != null && fourthInsuranceObjects != null && insuranceObjects.Count() > 0)
	{
		decimal result = (decimal)insuranceObjects.Sum(i => i.InsurancePayment.Value) + (decimal)secondInsuranceObjects.Sum(i => i.InsurancePayment.Value) + (decimal)thirdInsuranceObjects.Sum(i => i.InsurancePayment.Value) + (decimal)fourthInsuranceObjects.Sum(i => i.InsurancePayment.Value);
		__Result = result.ToString(""N2"");
	}
}
",,354
355,730TotalSumProperty,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""320"");
if (program != null && secondProgram == null)
{
	List<Workflow.DTO.Models.InsuranceObject> insuranceObject = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsuranceSum != null);
	if (insuranceObject != null && insuranceObject.Count() > 0)
	{
		__Result = insuranceObject.Sum(i => i.InsuranceSum.Value).ToString(""N2"");
	}
}
if (program != null && secondProgram != null)
{
	List<Workflow.DTO.Models.InsuranceObject> insuranceObjects = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.InsuranceSum != null);
	List<Workflow.DTO.Models.InsuranceObject> secondInsuranceObjects = secondProgram.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObjects != null && insuranceObjects.Count() > 0)
	{
		decimal result = (decimal)insuranceObjects.Sum(i => i.InsuranceSum.Value) + (decimal)secondInsuranceObjects.Sum(i => i.InsuranceSum.Value);
		__Result = result.ToString(""N2"");
	}
}
",,355
356,SMS730,"__Result = ""Разовий ідентифікатор для підписання договору \""Маєток. Маємо-дбаємо\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,356
357,730Subject,"__Result = ""Договір страхування \""Маєток. Маємо-дбаємо\"" номер "" + __Product.PolisNumber;
",,357
358,730Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/> НАСК \""ОРАНТА\"""";
",,358
359,SMS756,"__Result = ""Разовий ідентифікатор для підписання договору \""Авто Прогрес\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,359
360,756Subject,"__Result = ""Договір страхування \""Авто Прогрес\"" номер "" + __Product.PolisNumber;
",,360
361,756Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Авто Прогрес\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,361
362,730Limit,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Захворюваність тварин"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Не перевищує 6%"")
	{
		__Result = ""не більше 1500 грн"";
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Перевищує 6%, але не перевищує 10%"")
	{
		__Result = ""не більше 850 грн"";
	}
	if (param != null && param.GetParameterValueCaption().ToString() == ""Перевищує 10%"")
	{
		__Result = ""не більше 650 грн"";
	}
}
",,362
363,ParamHouse,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Будинок №"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,363
364,ParamStreet,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Вулиця"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,364
365,ParamIndexCity,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Індекс, населений пункт"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,365
366,730RenewedDate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дата попереднього договору"");
	if (param != null)
	{
		string value = param.GetParameterValueCaption().ToString();
		__Result = value.Substring(0, value.IndexOf("" ""));
	}
}
",,366
367,730RenewedNumber,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Номер попереднього договору"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,367
368,730Renewed,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Ознака договору"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Поновлений"");
	}
}
",,368
369,730Additional,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Ознака договору"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Додатковий"");
	}
}
",,369
370,730Renegotiated,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Ознака договору"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Переукладений"");
	}
}
",,370
371,730Duplicate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Ознака договору"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Дублікат"");
	}
}
",,371
372,730ConcludeFirsttime,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Ознака договору"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Укладається вперше"");
	}
}
",,372
373,730NoInspection,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Огляд майна"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Ні"");
	}
}
",,373
374,730Inspection,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""310"" || p.GetInsuranceTypeCode() == ""311"" || p.GetInsuranceTypeCode() == ""320"" || p.GetInsuranceTypeCode() == ""321"" || p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Огляд майна"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Так"");
	}
}
",,374
375,730Variant2,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Варіант 2"");
	}
}
",,375
376,730Variant1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""351"" || p.GetInsuranceTypeCode() == ""352"" || p.GetInsuranceTypeCode() == ""354"" || p.GetInsuranceTypeCode() == ""355"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null)
	{
		__Result = __Context.PrintMarkedPoint(param.GetParameterValueCaption().ToString() == ""Варіант 1"");
	}
}
",,376
377,731VehicleCost,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
	if (vehicle != null && vehicle.Cost != null)
	{
		__Result = vehicle.Cost.Value.ToString(""N2"");
	}
}
",,377
378,731ResponsiblePost1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,378
379,731ResponsibleName1,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,379
380,NewInsurerFullAddressEnglish,"string address = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК ВЕСЬ СВІТ Партнер Номер 3"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Агрегатор 25"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Агрегатор 30"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК Вся система Агрегатор 35"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Агрегатор 25"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Агрегатор 30"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК АМ Агрегатор 35"") ? __Product.Insurer.Face.ActualAddress : __Product.Insurer.Face.PostActualAddressObject == null ? __Product.Insurer.Face.ActualAddress : __Product.Insurer.Face.PostActualAddressObject.GetParentRegionName() == __Product.Insurer.Face.PostActualAddressObject.GetRegionName() ? __Product.Insurer.Face.PostActualAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostActualAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostActualAddressObject.Street + "", house "" + __Product.Insurer.Face.PostActualAddressObject.House + "", flat "" + __Product.Insurer.Face.PostActualAddressObject.Flat : __Product.Insurer.Face.PostActualAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostActualAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetRegionName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostActualAddressObject.Street + "", house "" + __Product.Insurer.Face.PostActualAddressObject.House + "", flat "" + __Product.Insurer.Face.PostActualAddressObject.Flat;
__Result = __Context.TransliterateToLatin(address);
",,380
381,731DirectorateAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса відокремленого підрозділу"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,381
382,731Directorate,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дирекція"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,382
383,731ResponsibleAttorney,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант довіреність"");
	if (param != null)
	{
		__Result = "", який діє на підставі Довіреності "" + param.GetParameterValueCaption().ToString();
	}
}
",,383
384,731ResponsiblePost,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант посада в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,384
385,731ResponsibleName,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Підписант ПІБ в родовому відмінку"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,385
386,ThreePaymentThirdPartEndDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[2].DueDate != null ? __Product.PaymentPeriods[2].DueDate.AddSeconds((double)(-1)).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,386
387,ThreePaymentSecondPartEndDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[1].DueDate != null ? __Product.PaymentPeriods[1].DueDate.AddSeconds((double)(-1)).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,387
388,ThreePaymentFirstPartEndDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[0].DueDate != null ? __Product.PaymentPeriods[0].DueDate.AddSeconds((double)(-1)).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,388
389,TwoPaymentSecondPartEndDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = __Product.PaymentPeriods[1].DueDate != null ? __Product.PaymentPeriods[1].DueDate.AddSeconds((double)(-1)).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,389
390,TwoPaymentSecondPartStartDate1,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = __Product.PaymentPeriods[1].PlanDate != null ? __Product.PaymentPeriods[1].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,390
391,TwoPaymentFirstPartEndDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = __Product.PaymentPeriods[0].DueDate != null ? __Product.PaymentPeriods[0].DueDate.AddSeconds((double)(-1)).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,391
392,ThreePaymentThirdPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[2].PlanDate != null ? __Product.PaymentPeriods[2].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,392
393,ThreePaymentSecondPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[1].PlanDate != null ? __Product.PaymentPeriods[1].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,393
394,ThreePaymentFirstPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,394
395,TwoPaymentSecondPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = __Product.PaymentPeriods[1].PlanDate != null ? __Product.PaymentPeriods[1].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,395
396,TwoPaymentFirstPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,396
397,OnePaymentFirstPartStartDate,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""1 платіж"")
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,397
398,FourPaymentPart,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""4 платежі"")
	{
		__Result = ""Так"";
	}
}
",,398
399,ThreePaymentPart,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""3 платежі"")
	{
		__Result = ""Так"";
	}
}
",,399
400,TwoPaymentPart,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""2 платежі"")
	{
		__Result = ""Так"";
	}
}
",,400
401,OnePaymentPart,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""1 платіж"")
	{
		__Result = ""Так"";
	}
}
",,401
402,716PacetLuxPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Люкс"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,402
403,716PacetChildPrestigePayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Дитина-Престиж"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,403
404,716PacetPrestigePayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Престиж"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,404
405,716PacetChildClassicPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Дитина-Класік"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,405
406,716PacetClassicPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Класік"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,406
407,716PacetStandartPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Стандарт"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,407
408,716PacetEconomPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Економ"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,408
409,716PacetExpressPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,409
410,716PacetLuxRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Люкс"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,410
411,716PacetChildPrestigeRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Дитина-Престиж"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,411
412,716PacetPrestigeRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Престиж"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,412
413,716PacetChildClassicRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Дитина-Класік"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,413
414,716PacetClassicRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Класік"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,414
415,716PacetStandartRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Стандарт"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,415
416,716PacetEconomRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Економ"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,416
417,716PacetExpressRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,417
418,716PacetLux,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Люкс"")
	{
		__Result = ""Так"";
	}
}
",,418
419,716PacetChildPrestige,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Дитина-Престиж"")
	{
		__Result = ""Так"";
	}
}
",,419
420,716PacetPrestige,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Престиж"")
	{
		__Result = ""Так"";
	}
}
",,420
421,716PacetChildClassic,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Дитина-Класік"")
	{
		__Result = ""Так"";
	}
}
",,421
422,716PacetClassic,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Класік"")
	{
		__Result = ""Так"";
	}
}
",,422
423,716PacetStandart,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Стандарт"")
	{
		__Result = ""Так"";
	}
}
",,423
424,716PacetEconom,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Економ"")
	{
		__Result = ""Так"";
	}
}
",,424
425,716PacetExpress,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		__Result = ""Так"";
	}
}
",,425
426,716DisabilityGroup,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Чи маєте ви групу інвалідності? Вкажіть яку і по якому захворюванню?"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,426
427,716DescriptionRecommendations,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Опис рекомендацій лікаря, з якого приводу? Які медикаменти Ви приймаєте щодня?"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,427
428,716GynecologicalDiseases,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Гінекологічні захворювання (андексит, кольпіт, ерозія або дисплазія шийки матки, ендометріоз, киста яєчників, полікістоз, фіброміома матки)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,428
429,716AbuseOfAlcoholNarcotics,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Захворювання, які спричинені зловживанням алкоголем, наркотичними, токсичними речовинами"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,429
430,716VenerealDiseases,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Венеричні захворювання, СНІД, ВІЛ-інфекція"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,430
431,716MentalDiseases,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Психічні захворювання (шизофренія та інші)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,431
432,716Hemophilia,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Спадкові захворювання (в т.ч. гемофілія)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,432
433,716Neoplasms,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Новоутворення (пухлини, рак, лейкемії)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,433
434,716CongenitalDiseases,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Вроджені захворювання (аномалії, вади)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,434
435,716Hernias,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Грижі (у т.ч. живота, пахові, післяопераційні)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,435
436,716EpilepsyParkinsonism,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Епілепсія, паркінсонізм"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,436
437,716Meningitis,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Менінгіт, енцефаліт, розсіяний склероз"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,437
438,716Stroke,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Інсульт, ДЕП (дисциркуляторна енцефалопатія)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,438
439,716DiscProtrusions,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Міжхребцеві грижі, протрузії дисків"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,439
440,716BrainInjuries,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Травми головного мозку"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,440
441,716DeformingArthrosis,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Деформуючий артроз, артрит"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,441
442,716Scleroderma,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Хвороба Бехтєрєва, склеродермія"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,442
443,716RheumatoidArthritis,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Ревматоїдний артрит, системний червоний вовчак"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,443
444,716UrologicalDiseases,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Урологічні захворювання (аденома простати, простатит)"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,444
445,716ChronicRenalFailure,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Гломерулонефрит, хронічна ниркова недостатність"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,445
446,716UrinaryStoneDisease,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Сечокам’яна хвороба"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,446
447,716AutoimmuneThyroiditis,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Аутоімунний тиреоїдит, гіпотиреоз, вузловий зоб"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,447
448,716Diabetes,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Цукровий діабет"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,448
449,716Tuberculosis,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Туберкульоз"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,449
450,716BronchialAsthma,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Бронхіальна астма, хронічний обструктивний бронхіт"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,450
451,716HepatitisBorC,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Гепатит В або С, цироз печінки"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,451
452,716PancreatitisCholecystitis,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Виразкова хвороба, панкреатит, холецистит"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,452
453,716RheumatismHeartDisease,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Ревматизм, вади серця"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,453
454,716Thrombophlebitis,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Тромбофлебіт"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,454
455,716HypertensiveDisease,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Гіпертонічна хвороба"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,455
456,716IschemicDisease,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Ішемічна хвороба, інфаркт міокарда, стенокардія, аритмії"");
		if (attr != null)
		{
			__Result = attr.GetValueCaption().ToString();
		}
	}
}
",,456
457,731NumberOfVehicles,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Кількість ТЗ"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,457
458,NewInsuredFullAddress,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Face insuredFace = (Workflow.DTO.Models.Face)insuranceObject.Object;
	if (insuredFace != null && insuredFace.PostAddressObject != null)
	{
		if (insuredFace.PostAddressObject.GetParentRegionName() == insuredFace.PostAddressObject.GetRegionName())
		{
			__Result = insuredFace.PostAddressObject.PostCode + "" "" + insuredFace.PostAddressObject.GetParentRegionName() + "", "" + insuredFace.PostAddressObject.GetSettlementName() + "", "" + insuredFace.PostAddressObject.GetStreetTypeName() + "" "" + insuredFace.PostAddressObject.Street + "", б. "" + insuredFace.PostAddressObject.House + "", кв. "" + insuredFace.PostAddressObject.Flat;
		}
		else
		{
					__Result = insuredFace.PostAddressObject.PostCode + "" "" + insuredFace.PostAddressObject.GetParentRegionName() + "", "" + insuredFace.PostAddressObject.GetRegionName() + "", "" + insuredFace.PostAddressObject.GetSettlementName() + "", "" + insuredFace.PostAddressObject.GetStreetTypeName() + "" "" + insuredFace.PostAddressObject.Street + "", б. "" + insuredFace.PostAddressObject.House + "", кв. "" + insuredFace.PostAddressObject.Flat;
		}
	}
}
",,458
459,NewInsurerAddressFull,"__Result = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ОСЦПВНТЗ для фіз особи Партнер Номер 01 НОВИЙ"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 25 ФО"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 30 ФО"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Приват 20"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Приват 30"") || __Product.Insurer.Face.PostAddressObject == null ? __Product.Insurer.Face.Address : __Product.Insurer.Face.PostAddressObject.GetParentRegionName() == __Product.Insurer.Face.PostAddressObject.GetRegionName() ? __Product.Insurer.Face.PostAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostAddressObject.Street + "", б. "" + __Product.Insurer.Face.PostAddressObject.House + "", кв. "" + __Product.Insurer.Face.PostAddressObject.Flat : __Product.Insurer.Face.PostAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetRegionName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostAddressObject.Street + "", б. "" + __Product.Insurer.Face.PostAddressObject.House + "", кв. "" + __Product.Insurer.Face.PostAddressObject.Flat;
",,459
460,NewInsurerActualFullAddress,"__Result = ""---"";
if (__Product.Insurer.Face != null && __Product.Insurer.Face.PostActualAddressObject != null)
{
	if (__Product.Insurer.Face.PostActualAddressObject.GetParentRegionName() == __Product.Insurer.Face.PostActualAddressObject.GetRegionName())
	{
		__Result = __Product.Insurer.Face.PostActualAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostActualAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostActualAddressObject.Street + "", б. "" + __Product.Insurer.Face.PostActualAddressObject.House + "", кв. "" + __Product.Insurer.Face.PostActualAddressObject.Flat;
	}
	else
	{
			__Result = __Product.Insurer.Face.PostActualAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostActualAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetRegionName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostActualAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostActualAddressObject.Street + "", б. "" + __Product.Insurer.Face.PostActualAddressObject.House + "", кв. "" + __Product.Insurer.Face.PostActualAddressObject.Flat;
	}
}
",,460
461,RegisteredDateLongationOriginalPolis,"__Result = ""---"";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Номер базового полісу"");
if (attribute != null)
{
	Workflow.DTO.Models.Product base = __Context.GetProductByPolisNumber(attribute.Value.ToString());
	if (base != null)
	{
		__Result = base.RegisteredDate.ToShortDateString();
	}
}
",,461
462,LongationOriginalPolis,"__Result = ""---"";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Номер базового полісу"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,462
463,NewInsuredActualFullAddress,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Face insuredFace = (Workflow.DTO.Models.Face)insuranceObject.Object;
	if (insuredFace != null && insuredFace.PostActualAddressObject != null)
	{
		if (insuredFace.PostActualAddressObject.GetParentRegionName() == insuredFace.PostActualAddressObject.GetRegionName())
		{
			__Result = insuredFace.PostActualAddressObject.PostCode + "" "" + insuredFace.PostActualAddressObject.GetParentRegionName() + "", "" + insuredFace.PostActualAddressObject.GetSettlementName() + "", "" + insuredFace.PostActualAddressObject.GetStreetTypeName() + "" "" + insuredFace.PostActualAddressObject.Street + "", б. "" + insuredFace.PostActualAddressObject.House + "", кв. "" + insuredFace.PostActualAddressObject.Flat;
		}
		else
		{
					__Result = insuredFace.PostActualAddressObject.PostCode + "" "" + insuredFace.PostActualAddressObject.GetParentRegionName() + "", "" + insuredFace.PostActualAddressObject.GetRegionName() + "", "" + insuredFace.PostActualAddressObject.GetSettlementName() + "", "" + insuredFace.PostActualAddressObject.GetStreetTypeName() + "" "" + insuredFace.PostActualAddressObject.Street + "", б. "" + insuredFace.PostActualAddressObject.House + "", кв. "" + insuredFace.PostActualAddressObject.Flat;
		}
	}
}
",,463
464,IsNotProlongation,"__Result = ""Ні"";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Номер базового полісу"");
if (attribute == null)
{
	__Result = ""Так"";
}
",,464
465,IsProlongation,"__Result = ""Ні"";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Номер базового полісу"");
if (attribute != null)
{
	__Result = ""Так"";
}
",,465
466,731StorageAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Адреса використання ТЗ/адреса виробничих ділянок"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,466
467,731DownTimeAddress,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Місце зберігання протягом періоду простою"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,467
468,731DownTimeTo,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період простою, по"");
	if (param != null)
	{
		string value = param.GetParameterValueCaption().ToString();
		__Result = value.Substring(0, value.IndexOf("" ""));
	}
}
",,468
469,731DownTimeFrom,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період простою, з"");
	if (param != null)
	{
		string value = param.GetParameterValueCaption().ToString();
		__Result = value.Substring(0, value.IndexOf("" ""));
	}
}
",,469
470,731DownTime,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період простою, днів"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,470
471,731Franchise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.GetObjectTypeName() != ""Додаткове обладнання"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""ДТП - дорожньо-транспортна пригода «ПОШКОДЖЕННЯ»"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString();
				}
			}
		}
	}
}
",,471
472,731FactoryNumber,"__Result = ""----"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() != ""Додаткове обладнання"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Заводський номер"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,472
473,VehicleProducedDate,"__Result = """";
int programIndex = 0;
while (programIndex < __Product.Programs.Count() && string.IsNullOrEmpty(__Result))
{
	Workflow.DTO.Models.Program program = __Product.Programs[programIndex];
	int insuranceObjectIndex = 0;
	while (insuranceObjectIndex < program.InsuranceObjects.Count() && string.IsNullOrEmpty(__Result))
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects[insuranceObjectIndex];
		if (insuranceObject.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && insuranceObject.Object != null && insuranceObject.Object.GetObjectTypeName() == ""Наземний транспортний засіб"")
		{
			Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
			if (vehicle != null && vehicle.ProducedDate != null)
			{
				__Result = vehicle.ProducedDate.Value.ToString();
			}
		}
		insuranceObjectIndex = insuranceObjectIndex + 1;
	}
	programIndex = programIndex + 1;
}
",,473
474,VehicleBodyNumber,"__Result = """";
int programIndex = 0;
while (programIndex < __Product.Programs.Count() && string.IsNullOrEmpty(__Result))
{
	Workflow.DTO.Models.Program program = __Product.Programs[programIndex];
	int insuranceObjectIndex = 0;
	while (insuranceObjectIndex < program.InsuranceObjects.Count() && string.IsNullOrEmpty(__Result))
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects[insuranceObjectIndex];
		if (insuranceObject.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && insuranceObject.Object != null && insuranceObject.Object.GetObjectTypeName() == ""Наземний транспортний засіб"")
		{
			Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
			if (vehicle != null && vehicle.BodyNumber != null)
			{
				__Result = vehicle.BodyNumber;
			}
		}
		insuranceObjectIndex = insuranceObjectIndex + 1;
	}
	programIndex = programIndex + 1;
}
",,474
475,VehicleModel,"__Result = """";
int programIndex = 0;
while (programIndex < __Product.Programs.Count() && string.IsNullOrEmpty(__Result))
{
	Workflow.DTO.Models.Program program = __Product.Programs[programIndex];
	int insuranceObjectIndex = 0;
	while (insuranceObjectIndex < program.InsuranceObjects.Count() && string.IsNullOrEmpty(__Result))
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects[insuranceObjectIndex];
		if (insuranceObject.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && insuranceObject.Object != null && insuranceObject.Object.GetObjectTypeName() == ""Наземний транспортний засіб"")
		{
			Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
			if (vehicle != null && vehicle.GetVehicleModelName() != null)
			{
				__Result = vehicle.GetVehicleModelName();
			}
		}
		insuranceObjectIndex = insuranceObjectIndex + 1;
	}
	programIndex = programIndex + 1;
}
",,475
476,InsurerIdentifierDoc,"__Result = ""----------"";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID != 2)
	{
		Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.gid == __Product.Insurer.FaceDocumentGID);
		if (doc != null)
		{
			__Result = doc.GetDocumentTypeName();
		}
		if (doc.Number != null)
		{
			__Result = __Result + "" номер "" + doc.Number;
		}
		if (!string.IsNullOrEmpty(doc.IssuedBy))
		{
			__Result = __Result + "" виданого "" + doc.IssuedBy;
		}
		if (doc.IssuedDate != null)
		{
			__Result = __Result + "" від "" + doc.IssuedDate.Value.ToShortDateString() + "" р."";
		}
	}
}
",,476
477,NewBeneficiaryFullAddress,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face != null && face.PostAddressObject != null)
		{
			if (face.PostAddressObject.GetParentRegionName() == face.PostAddressObject.GetRegionName())
			{
				__Result = face.PostAddressObject.PostCode + "" "" + face.PostAddressObject.GetParentRegionName() + "", "" + face.PostAddressObject.GetSettlementName() + "", "" + face.PostAddressObject.GetStreetTypeName() + "" "" + face.PostAddressObject.Street + "", б. "" + face.PostAddressObject.House + "", кв. "" + face.PostAddressObject.Flat;
			}
			else
			{
							__Result = face.PostAddressObject.PostCode + "" "" + face.PostAddressObject.GetParentRegionName() + "", "" + face.PostAddressObject.GetRegionName() + "", "" + face.PostAddressObject.GetSettlementName() + "", "" + face.PostAddressObject.GetStreetTypeName() + "" "" + face.PostAddressObject.Street + "", б. "" + face.PostAddressObject.House + "", кв. "" + face.PostAddressObject.Flat;
			}
		}
	}
}
",,477
478,NewInsurerFullAddress,"__Result = ""---"";
if (__Product.Insurer.Face != null && __Product.Insurer.Face.PostAddressObject != null)
{
	if (__Product.Insurer.Face.PostAddressObject.GetParentRegionName() == __Product.Insurer.Face.PostAddressObject.GetRegionName())
	{
		__Result = __Product.Insurer.Face.PostAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostAddressObject.Street + "", б. "" + __Product.Insurer.Face.PostAddressObject.House + "", кв. "" + __Product.Insurer.Face.PostAddressObject.Flat;
	}
	else
	{
			__Result = __Product.Insurer.Face.PostAddressObject.PostCode + "" "" + __Product.Insurer.Face.PostAddressObject.GetParentRegionName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetRegionName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetSettlementName() + "", "" + __Product.Insurer.Face.PostAddressObject.GetStreetTypeName() + "" "" + __Product.Insurer.Face.PostAddressObject.Street + "", б. "" + __Product.Insurer.Face.PostAddressObject.House + "", кв. "" + __Product.Insurer.Face.PostAddressObject.Flat;
	}
}
",,478
479,VehicleBrand,"__Result = """";
int programIndex = 0;
while (programIndex < __Product.Programs.Count() && string.IsNullOrEmpty(__Result))
{
	Workflow.DTO.Models.Program program = __Product.Programs[programIndex];
	int insuranceObjectIndex = 0;
	while (insuranceObjectIndex < program.InsuranceObjects.Count() && string.IsNullOrEmpty(__Result))
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects[insuranceObjectIndex];
		if (insuranceObject.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && insuranceObject.Object != null && insuranceObject.Object.GetObjectTypeName() == ""Наземний транспортний засіб"")
		{
			Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
			if (vehicle != null && vehicle.GetVehicleManufacturerName() != null)
			{
				__Result = vehicle.GetVehicleManufacturerName();
			}
		}
		insuranceObjectIndex = insuranceObjectIndex + 1;
	}
	programIndex = programIndex + 1;
}
",,479
480,731InsurerIdentificationCode,"__Result = ""---"";
if (__Product.Insurer.Face.PersonTypeID != 2)
{
	if (__Product.Insurer.Face.IdentificationCode != null)
	{
		__Result = string.Format(""{0}"", __Product.Insurer.Face.IdentificationCode);
	}
}
",,480
481,731InsurerEDRPOU,"__Result = ""---"";
if (__Product.Insurer.Face.PersonTypeID == 2)
{
	if (__Product.Insurer.Face.EDRPOU != null)
	{
		__Result = string.Format(""{0}"", __Product.Insurer.Face.EDRPOU);
	}
}
",,481
482,RepresentativeDoc,"__Result = ""---"";
if (__Product.Insurer != null && __Product.Insurer.Representative != null)
{
	Workflow.DTO.Models.Document doc = __Product.Insurer.Representative.Documents.FirstOrDefault(d => d.gid == __Product.Insurer.DocumentGID);
	if (doc != null)
	{
		__Result = ""на підставі документу "" + doc.GetDocumentTypeName();
	}
	if (doc.Number != null)
	{
		__Result = __Result + "" номер "" + doc.Number;
	}
	if (!string.IsNullOrEmpty(doc.IssuedBy))
	{
		__Result = __Result + "" виданого "" + doc.IssuedBy;
	}
	if (doc.IssuedDate != null)
	{
		__Result = __Result + "" від "" + doc.IssuedDate.Value.ToShortDateString() + "" р."";
	}
}
",,482
483,RepresentativePost,"__Result = ""---"";
if (__Product.Insurer != null && __Product.Insurer.Representative != null)
{
	__Result = __Product.Insurer.Representative.GenitivePost != null ? __Product.Insurer.Representative.GenitivePost : ""---"";
}
",,483
484,RepresentativeName,"__Result = ""---"";
if (__Product.Insurer != null && __Product.Insurer.Representative != null)
{
	__Result = __Product.Insurer.Representative.GenitiveName != null ? __Product.Insurer.Representative.GenitiveName : ""---"";
}
",,484
485,731InsCasesTheft,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхові випадки за договором"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Повне КАСКО"")
	{
		__Result = ""Так"";
	}
	else
	{
			if (param != null && param.GetParameterValueCaption().ToString() == ""«ДТП» та «НЕЗАКОННЕ ЗАВОЛОДІННЯ»"")
		{
			__Result = ""Так"";
		}
	}
}
",,485
486,731InsCasesDamage,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхові випадки за договором"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Повне КАСКО"")
	{
		__Result = ""Так"";
	}
	else
	{
			if (param != null && param.GetParameterValueCaption().ToString() == ""«ПОШКОДЖЕННЯ»"")
		{
			__Result = ""Так"";
		}
	}
}
",,486
487,731AutoInsSum,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() != ""Додаткове обладнання"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,487
488,731DamageOutsideUkr,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Покриття «ПОШКОДЖЕННЯ» за межами України"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,488
489,731MilitaryActions,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Покриття за умовою «ВОЄННІ ДІЇ»"");
	if (param != null && param.GetParameterValueCaption().ToString() != ""Відсутнє"")
	{
		__Result = ""Так"";
	}
}
",,489
490,731STO,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""СТО (станція технічного обслуговування)"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,490
491,731WearofParts,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Врахування зносу"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,491
492,731TrafficViolation,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Грубі порушення ПДР"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Покриваються"")
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,492
493,731FranGlass,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.GetObjectTypeName() != ""Додаткове обладнання"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""ДТП - дорожньо-транспортна пригода «ПОШКОДЖЕННЯ»"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза по пошкодженню виключно скляних деталей"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString();
				}
			}
		}
	}
}
",,493
494,731FranTheft,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.GetObjectTypeName() != ""Додаткове обладнання"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""ДТП - дорожньо-транспортна пригода «ПОШКОДЖЕННЯ»"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза по «Незаконне заволодіння» та «Повна загибель»"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString();
				}
			}
		}
	}
}
",,494
495,731FranDamage,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.GetObjectTypeName() != ""Додаткове обладнання"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""ДТП - дорожньо-транспортна пригода «ПОШКОДЖЕННЯ»"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза по пошкодженню"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString();
				}
			}
		}
	}
}
",,495
496,731PropertyInsSum,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	List<Workflow.DTO.Models.InsuranceObject> insuranceObjects = program.InsuranceObjects.Where(i => i.GetObjectTypeName() == ""Додаткове обладнання"" && i.InsuranceSum != null);
	if (insuranceObjects != null && insuranceObjects.Count() > 0)
	{
		__Result = insuranceObjects.Sum(i => i.InsuranceSum.Value).ToString(""N2"");
	}
}
",,496
497,731Rate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	decimal value = program.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,497
498,731Keys,"__Result = ""----"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() != ""Додаткове обладнання"");
	if (insObj != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Кількість комплектів ключів"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,498
499,731Region,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Регіон експлуатації"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,499
500,731InsCasesRoadAccident,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страхові випадки за договором"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""«ДТП»"" || param.GetParameterValueCaption().ToString() == ""«ДТП» та «НЕЗАКОННЕ ЗАВОЛОДІННЯ»"")
	{
		__Result = ""Так"";
	}
}
",,500
501,731DriversAge,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Вік водіїв"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,501
502,731AntiTheft,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Засоби проти викрадення"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,502
503,731OperatingConditions,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""212"" || p.GetInsuranceTypeCode() == ""213"" || p.GetInsuranceTypeCode() == ""214"" || p.GetInsuranceTypeCode() == ""221"" || p.GetInsuranceTypeCode() == ""222"" || p.GetInsuranceTypeCode() == ""223"" || p.GetInsuranceTypeCode() == ""224"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Умови експлуатації ТЗ"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,503
504,SMS731,"__Result = ""Разовий ідентифікатор для підписання договору \""Надійне КАСКО\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,504
505,731Subject,"__Result = ""Договір страхування \""Надійне КАСКО\"" номер "" + __Product.PolisNumber;
",,505
506,731Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/> НАСК \""ОРАНТА\"""";
",,506
507,219FirstPaymentSchedulePart,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Ні"")
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
else
{
	if (program == null)
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,507
508,FirstPaymentSchedulePart,"__Result = ""-----"";
Workflow.DTO.Models.Program program = __Product.Programs[0];
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Графік платежів"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""1 платіж"")
	{
		__Result = __Product.PaymentPeriods[0].PlanDate != null ? __Product.PaymentPeriods[0].PlanDate.AddSeconds((double)0).ToShortDateString() + "" р."" : ""-----"";
	}
}
",,508
509,FourthPaymentPartEndDate,"__Result = __Product.PaymentPeriods[3].DueDate != null ? __Product.PaymentPeriods[3].DueDate.AddSeconds((double)(-1)).ToShortDateString() : ""-----"";
",,509
510,ThirdPaymentPartEndDate,"__Result = __Product.PaymentPeriods[2].DueDate != null ? __Product.PaymentPeriods[2].DueDate.AddSeconds((double)(-1)).ToShortDateString() : ""-----"";
",,510
511,SecondPaymentPartEndDate,"__Result = __Product.PaymentPeriods[1].DueDate != null ? __Product.PaymentPeriods[1].DueDate.AddSeconds((double)(-1)).ToShortDateString() : ""-----"";
",,511
512,FirstPaymentPartEndDate,"__Result = __Product.PaymentPeriods[0].DueDate != null ? __Product.PaymentPeriods[0].DueDate.AddSeconds((double)(-1)).ToShortDateString() : ""-----"";
",,512
513,LuggageInsSumDollar,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString());
		__Result = resultSum.ToString();
	}
}
",,513
514,LuggageInsSumEURO,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""EURO"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString());
		__Result = resultSum.ToString();
	}
}
",,514
515,AccidentInsSumDollar,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString());
		__Result = resultSum.ToString();
	}
}
",,515
516,AccidentInsSumEURO,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""EURO"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString());
		__Result = resultSum.ToString();
	}
}
",,516
517,MedInsSumDollar,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString());
		__Result = resultSum.ToString();
	}
}
",,517
518,MedInsSumEURO,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""EURO"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString());
		__Result = resultSum.ToString();
	}
}
",,518
519,UmbrellaPaketL,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"" || p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""247"" || p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,519
520,UmbrellaPaketS,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"" || p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""247"" || p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,520
521,UmbrellaPaketM,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"" || p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""247"" || p.GetInsuranceTypeCode() == ""218"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,521
522,UmbrellaRoadPaymentPaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,522
523,UmbrellaRoadPaymentPaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,523
524,UmbrellaRoadPaymentPaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,524
525,UmbrellaOTPLPaymentPaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,525
526,UmbrellaOTPLPaymentPaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,526
527,UmbrellaOTPLPaymentPaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,527
528,UmbrellaCaskoPaymentPaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,528
529,UmbrellaCaskoPaymentPaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,529
530,UmbrellaCaskoPaymentPaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,530
531,UmbrellaRoadRatePaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,531
532,UmbrellaRoadRatePaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,532
533,UmbrellaRoadRatePaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,533
534,UmbrellaOTPLRatePaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,534
535,UmbrellaOTPLRatePaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,535
536,UmbrellaOTPLRatePaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,536
537,UmbrellaCaskoRatePaketS,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,537
538,UmbrellaCaskoRatePaketM,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,538
539,UmbrellaCaskoRatePaketL,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		decimal value = prog.InsuranceRate;
		__Result = value.ToString(""N3"");
	}
}
",,539
540,IdCardBeginDatePassId,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID != 2)
	{
		Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
		}
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
		}
		if (doc != null)
		{
			if (doc.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"")
			{
				__Result = ((DateTime)doc.StartDate).ToShortDateString();
			}
			else
			{
							__Result = ((DateTime)doc.IssuedDate).ToShortDateString();
			}
		}
	}
}
",,540
541,InsurerNoLastName,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID == 2)
	{
		__Result = face.FullName;
	}
	else
	{
			__Result = string.Format(""{0} {1}"", face.Firstname, face.Secondname);
	}
}
",,541
542,BeneficiaryDocIssuedDatePassId,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
		}
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
		}
		if (doc != null)
		{
			if (doc.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"")
			{
				__Result = ((DateTime)doc.StartDate).ToShortDateString() + "" р."";
			}
			else
			{
							__Result = ((DateTime)doc.IssuedDate).ToShortDateString() + "" р."";
			}
		}
	}
}
",,542
543,BeneficiaryDocIssuedByPassId,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
		}
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
		}
		if (doc != null)
		{
			__Result = doc.IssuedBy;
		}
	}
}
",,543
544,BeneficiaryDocNumberPassId,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
		}
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
		}
		if (doc != null)
		{
			int index = doc.Number.IndexOf(""-"");
			__Result = doc.Number.Substring(index + 1, doc.Number.Length - index - 1);
		}
	}
}
",,544
545,BeneficiaryDocSeriaPassID,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
		}
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
		}
		if (doc != null)
		{
			__Result = doc.Number.Substring(0, doc.Number.IndexOf(""-""));
		}
	}
}
",,545
546,BeneficiaryDocTypePassID,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
		}
		if (doc == null)
		{
			doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
		}
		if (doc != null)
		{
			__Result = doc.GetDocumentTypeName();
		}
	}
}
",,546
547,NewOrantaTravelSpecialConditions,"__Result = ""8.1. Згідно з цим Договором Страховик відшкодовує витрати, пов'язані з невідкладним станом Застрахованої особи внаслідок SARS-CoV-2 (COVID-19) / According to this Contract the Insurer reimburses the expenses related to emergency state of the Insured Person due to SARS-CoV-2 (COVID-19)"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param1 = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Застрахована особа виїжджає до країн Шенгенської зони"");
	if (param1 != null)
	{
		if (param1.GetParameterValueCaption().ToString() == ""Так"")
		{
			__Result = ""8.1. Згідно з цим Договором Страховик відшкодовує витрати, пов'язані з невідкладним станом Застрахованої особи внаслідок SARS-CoV-2 (COVID-19) / According to this Contract the Insurer reimburses the expenses related to emergency state of the Insured Person due to SARS-CoV-2 (COVID-19). 8.2. Рішення Ради ЄС 2004/17/EG щодо медичного страхування подорожуючих осіб / The insurance protection is provided in accordance with the Decision of the Council of European Union 2004/17/EC concerning travel medical insurance."";
		}
	}
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Програма  страхування"");
	if (param2 != null)
	{
		if (param2.GetParameterValueCaption().ToString() == ""E"")
		{
			if (!string.IsNullOrEmpty(__Result))
			{
				__Result = __Result + ""; "";
			}
			__Result = __Result + ""Програма Е/Program E"";
		}
	}
}
",,547
548,IsContinuous,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Тип перебування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Безперервний"")
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,548
549,BeneficiaryDocIssuedDate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face.PersonTypeID != 2)
		{
			List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"");
			int i = 0;
			int maxId = -1;
			Workflow.DTO.Models.Document document;
			while (i < documents.Count())
			{
				if (documents[i].id > maxId)
				{
					document = documents[i];
					maxId = documents[i].id;
				}
				i = i + 1;
			}
			if (document != null)
			{
				if (document.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"")
				{
					__Result = ((DateTime)document.StartDate).ToShortDateString() + "" р."";
				}
				else
				{
									__Result = ((DateTime)document.IssuedDate).ToShortDateString() + "" р."";
				}
			}
		}
	}
}
",,549
550,BeneficiaryDocIssuedBy,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face.PersonTypeID != 2)
		{
			List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"");
			int i = 0;
			int maxId = -1;
			Workflow.DTO.Models.Document document;
			while (i < documents.Count())
			{
				if (documents[i].id > maxId)
				{
					document = documents[i];
					maxId = documents[i].id;
				}
				i = i + 1;
			}
			if (document != null)
			{
				__Result = document.IssuedBy;
			}
		}
	}
}
",,550
551,BeneficiaryDocNumber,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face.PersonTypeID != 2)
		{
			List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"");
			int i = 0;
			int maxId = -1;
			Workflow.DTO.Models.Document document;
			while (i < documents.Count())
			{
				if (documents[i].id > maxId)
				{
					document = documents[i];
					maxId = documents[i].id;
				}
				i = i + 1;
			}
			if (document != null)
			{
				int index = document.Number.IndexOf(""-"");
				__Result = document.Number.Substring(index + 1, document.Number.Length - index - 1);
			}
		}
	}
}
",,551
552,BeneficiaryDocSeria,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face.PersonTypeID != 2)
		{
			List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"");
			int i = 0;
			int maxId = -1;
			Workflow.DTO.Models.Document document;
			while (i < documents.Count())
			{
				if (documents[i].id > maxId)
				{
					document = documents[i];
					maxId = documents[i].id;
				}
				i = i + 1;
			}
			if (document != null)
			{
				__Result = document.Number.Substring(0, document.Number.IndexOf(""-""));
			}
		}
	}
}
",,552
553,BeneficiaryDocType,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face.PersonTypeID != 2)
		{
			List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"");
			int i = 0;
			int maxId = -1;
			Workflow.DTO.Models.Document document;
			while (i < documents.Count())
			{
				if (documents[i].id > maxId)
				{
					document = documents[i];
					maxId = documents[i].id;
				}
				i = i + 1;
			}
			if (document != null)
			{
				__Result = document.GetDocumentTypeName();
			}
		}
	}
}
",,553
554,BeneficiaryEmail,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face != null)
		{
			__Result = face.Email;
		}
	}
}
",,554
555,BeneficiarMobPhone,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face != null)
		{
			__Result = face.MobilePhoneNumber;
		}
	}
}
",,555
556,IdCardBeginDate,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID != 2)
	{
		List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" || i.GetDocumentTypeName() == ""Паспорт"");
		int i = 0;
		int maxId = -1;
		Workflow.DTO.Models.Document document;
		while (i < documents.Count())
		{
			if (documents[i].id > maxId)
			{
				document = documents[i];
				maxId = documents[i].id;
			}
			i = i + 1;
		}
		if (document != null)
		{
			if (document.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"")
			{
				__Result = ((DateTime)document.StartDate).ToShortDateString();
			}
			else
			{
							__Result = ((DateTime)document.IssuedDate).ToShortDateString();
			}
		}
	}
}
",,556
557,InsurerFullAddressEnglish,"string address = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ЗК ВЕСЬ СВІТ Партнер Номер 3"" || __Product.Insurer.Face.PostActualAddressObject == null ? __Product.Insurer.Face.ActualAddress : __Product.Insurer.Face.PostActualAddressObject.GetFullAddress();
__Result = __Context.TransliterateToLatin(address);
",,557
558,InsurerAccountBasic,"__Result = """";
int i = 0;
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null && face.Accounts != null)
{
	List<Workflow.DTO.Models.Account> accounts = face.Accounts.Where(a => a.GetAccountTypeName() == ""Основний рахунок"");
	while (i < accounts.Count())
	{
		if (i == 0)
		{
			__Result = accounts[i].AccountNumber;
		}
		else
		{
					__Result = __Result + "","" + accounts[i].AccountNumber;
		}
		i = i + 1;
	}
}
",,558
559,InsurerAccountIBAN,"__Result = """";
int i = 0;
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null && face.Accounts != null)
{
	List<Workflow.DTO.Models.Account> accounts = face.Accounts.Where(a => a.GetAccountTypeName() == ""IBAN"");
	while (i < accounts.Count())
	{
		if (i == 0)
		{
			__Result = accounts[i].AccountNumber;
		}
		else
		{
					__Result = __Result + "","" + accounts[i].AccountNumber;
		}
		i = i + 1;
	}
}
",,559
560,ResponsibleGenitiveName,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Responsible.Representative;
if (face != null)
{
	__Result = face.GenitiveName;
}
",,560
561,ResponsibleGenitivePost,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Responsible.Representative;
if (face != null)
{
	__Result = face.GenitivePost;
}
",,561
562,InsurerGenitivePost,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	__Result = face.GenitivePost;
}
",,562
563,708Rate164,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""164"");
if (prog != null)
{
	decimal payment = __Product.PaymentPeriods.Sum(p => p.PlanedPayments != null ? p.PlanedPayments.Where(pp => pp.ProgramGID == prog.gid).Sum(pp => pp.Value) : (decimal)0);
	decimal insuranceSum = prog.InsuranceObjects.Sum(io => io.InsuranceSum != null ? io.InsuranceSum.Value : (decimal)0);
	decimal rate = (decimal)100 * payment / insuranceSum;
	__Result = rate.ToString(""N4"");
}
",,563
564,708Rate151,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	decimal payment = __Product.PaymentPeriods.Sum(p => p.PlanedPayments != null ? p.PlanedPayments.Where(pp => pp.ProgramGID == prog.gid).Sum(pp => pp.Value) : (decimal)0);
	decimal insuranceSum = prog.InsuranceObjects.Sum(io => io.InsuranceSum != null ? io.InsuranceSum.Value : (decimal)0);
	decimal rate = (decimal)100 * payment / insuranceSum;
	__Result = rate.ToString(""N4"");
}
",,564
565,708Rate102,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (prog != null)
{
	decimal payment = prog.PlanedPayments.Sum(pp => pp.Value);
	decimal insuranceSum = prog.InsuranceObjects.Sum(io => io.InsuranceSum != null ? io.InsuranceSum.Value : (decimal)0);
	decimal rate = (decimal)100 * payment / insuranceSum;
	__Result = rate.ToString(""N4"");
}
",,565
566,SportsNot,"__Result = ""Так"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""---"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Спортивна категорія"" && t.GetValueCaption().ToString() == ""-немає-"");
			if (attribute != null)
			{
				__Result = ""Ні"";
			}
		}
	}
}
",,566
567,SportsSP,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""---"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Спортивна категорія"" && t.GetValueCaption().ToString() == ""Професійні спортсмени (змагання) SP"");
			if (attribute != null)
			{
				__Result = ""Так"";
			}
		}
	}
}
",,567
568,SportsSA,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""---"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Спортивна категорія"" && t.GetValueCaption().ToString() == ""Екстремальні види спорту SA"");
			if (attribute != null)
			{
				__Result = ""Так"";
			}
		}
	}
}
",,568
569,733InsSum160,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""160"");
__Result = """";
if (program != null && program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count() > 0)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"")[0];
	if (insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,569
570,733InsSum113,"Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"");
__Result = """";
if (program != null && program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count() > 0)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"")[0];
	if (insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,570
571,733Rate160,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""160"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N4"");
}
",,571
572,733Rate113,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N4"");
}
",,572
573,InsuredDocAddition,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			Workflow.DTO.Models.Document doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Свідоцтво про народження"");
			if (doc == null)
			{
				doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
			}
			if (doc == null)
			{
				doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
			}
			if (doc == null)
			{
				doc = face.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
			}
			if (doc != null)
			{
				__Result = doc.Number;
			}
			if (!string.IsNullOrEmpty(doc.IssuedBy))
			{
				__Result = __Result + "" "" + doc.IssuedBy;
			}
			if (doc.IssuedDate != null)
			{
				__Result = __Result + "" "" + doc.IssuedDate.Value.ToShortDateString() + "" р."";
			}
		}
	}
}
",,573
574,InsuredINNAddition,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = face.IdentificationCodeEDRPOU;
		}
	}
}
",,574
575,InsuredMobAddition,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = face.MobilePhoneNumber;
		}
	}
}
",,575
576,733InsuredMail,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = face.Email;
		}
	}
}
",,576
577,733InsuredBirthdate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = face.Birthdate.Value.ToShortDateString();
		}
	}
}
",,577
578,733InsuredActualAddress,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face insuredFace = (Workflow.DTO.Models.Face)insuranceObject.Object;
			if (insuredFace != null && insuredFace.Address != null)
			{
				__Result = insuredFace.Address;
			}
		}
	}
}
",,578
579,733InsuredName,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = string.Format(""{0} {1} {2}"", face.Lastname, face.Firstname, face.Secondname);
		}
	}
}
",,579
580,708InsuredMail,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = face.Email;
		}
	}
}
",,580
581,708InsuredBirthdate,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = face.Birthdate.Value.ToShortDateString();
		}
	}
}
",,581
582,708InsuredActualAddress,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face insuredFace = (Workflow.DTO.Models.Face)insuranceObject.Object;
			if (insuredFace != null && insuredFace.PostAddressObject != null)
			{
				if (insuredFace.PostAddressObject.GetParentRegionName() == insuredFace.PostAddressObject.GetRegionName())
				{
					__Result = insuredFace.PostAddressObject.PostCode + "" "" + insuredFace.PostAddressObject.GetParentRegionName() + "", "" + insuredFace.PostAddressObject.GetSettlementName() + "", "" + insuredFace.PostAddressObject.GetStreetTypeName() + "" "" + insuredFace.PostAddressObject.Street + "", б. "" + insuredFace.PostAddressObject.House + "", кв. "" + insuredFace.PostAddressObject.Flat;
				}
				else
				{
									__Result = insuredFace.PostAddressObject.PostCode + "" "" + insuredFace.PostAddressObject.GetParentRegionName() + "", "" + insuredFace.PostAddressObject.GetRegionName() + "", "" + insuredFace.PostAddressObject.GetSettlementName() + "", "" + insuredFace.PostAddressObject.GetStreetTypeName() + "" "" + insuredFace.PostAddressObject.Street + "", б. "" + insuredFace.PostAddressObject.House + "", кв. "" + insuredFace.PostAddressObject.Flat;
				}
			}
		}
	}
}
",,582
583,708InsuredName,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
			__Result = string.Format(""{0} {1} {2}"", face.Lastname, face.Firstname, face.Secondname);
		}
	}
}
",,583
584,708PacetSafePlus,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Пакет"" && t.GetValueCaption().ToString() == ""БЕЗПЕЧНИЙ+"");
			if (attribute != null)
			{
				__Result = ""Так"";
			}
		}
	}
}
",,584
585,708PacetSafe,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (program != null)
{
	int count = program.InsuranceObjects.Where(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"").Count();
	if (count >= 2)
	{
		__Result = ""Згідно Додатку №1"";
	}
	else
	{
			Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insuranceObject != null && insuranceObject.Object != null)
		{
			Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Пакет"" && t.GetValueCaption().ToString() == ""БЕЗПЕЧНИЙ"");
			if (attribute != null)
			{
				__Result = ""Так"";
			}
		}
	}
}
",,585
586,InsurerGenitiveName,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID == 2)
	{
		__Result = face.FullName;
	}
	else
	{
			__Result = face.GenitiveName;
	}
}
",,586
587,164Payment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""164"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N0"");
	}
}
",,587
588,164InsSum,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""164"");
__Result = ""---"";
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N0"");
}
",,588
589,SMS733,"__Result = ""Разовий ідентифікатор для підписання договору \""У відпустку з Орантою\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,589
590,733Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/> НАСК \""ОРАНТА\"""";
",,590
591,Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/> НАСК \""ОРАНТА\"""";
",,591
592,733LetterSubject,"__Result = ""Договір страхування \""У відпустку з Орантою\"" номер "" + __Product.PolisNumber;
",,592
593,SMS716,"__Result = ""Разовий ідентифікатор для підписання договору \""Медичне страхування фізичних осіб\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,593
594,716LetterSubject,"__Result = ""Договір страхування \""Медичне страхування фізичних осіб\"" номер "" + __Product.PolisNumber;
",,594
595,716Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір \""Медичне страхування фізичних осіб\"" у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""<br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня<br/>"";
",,595
596,141Letter,"__Result = ""Шановний "" + __Product.Insurer.Face.Name + ""!<br/>Дякуємо, що обрали НАСК \""ОРАНТА\"".<br/>Ви зробили вірний вибір на користь Вашої безпеки.<br/>Ваш Договір  -  у вкладенні до цього листа.<br/>Дбаємо про Вашу безпеку,<br/>НАСК \""ОРАНТА\"""";
",,596
597,141ABR_Letter,"__Result = ""Шановний "" + __Product.Insurer.Face.Name + ""!<br/>Дякуємо, що обрали НАСК \""ОРАНТА\"".<br/>Ви зробили вірний вибір на користь Вашої безпеки.<br/>Ваш Договір  -  у вкладенні до цього листа.<br/>Дбаємо про Вашу безпеку,<br/>НАСК \""ОРАНТА\"""";
",,597
598,141Subject,"__Result = ""Договір страхування ТУРИСТИЧНЕ СТРАХУВАННЯ номер "" + __Product.PolisNumber;
",,598
599,141ABR_Subject,"__Result = ""Договір страхування ТУРИСТИЧНЕ СТРАХУВАННЯ номер "" + __Product.PolisNumber;
",,599
600,141Sms,"__Result = ""Разовий ідентифікатор для підписання договору ТУРИСТИЧНОГО СТРАХУВАННЯ: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,600
601,141Sms_ABR,"__Result = ""Разовий ідентифікатор для підписання договору ТУРИСТИЧНОГО СТРАХУВАННЯ: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,601
602,345InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""345"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,602
603,NewInsurerFullName,"__Result = """";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID == 2)
	{
		__Result = face.FullName;
	}
	else
	{
			__Result = string.Format(""{0} {1} {2}"", face.Lastname, face.Firstname, face.Secondname);
	}
}
",,603
604,510InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""510"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,604
605,510InsRate3,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""510"");
if (program != null && (__Product.BeginingDate.Date.AddYears(3) < __Product.EndingDate.Date || __Product.BeginingDate.Date.AddYears(3) == __Product.EndingDate.Date))
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страховий тариф за період покриття"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,605
606,510InsRate2,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""510"");
if (program != null && (__Product.BeginingDate.Date.AddYears(2) < __Product.EndingDate.Date || __Product.BeginingDate.Date.AddYears(2) == __Product.EndingDate.Date) || __Product.BeginingDate.Date.AddYears(3) < __Product.EndingDate.Date || __Product.BeginingDate.Date.AddYears(3) == __Product.EndingDate.Date)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страховий тариф за період покриття"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,606
607,510InsSum3,"__Result = ""XXXX"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""510"");
if (prog != null && (__Product.BeginingDate.Date.AddYears(3) < __Product.EndingDate.Date || __Product.BeginingDate.Date.AddYears(3) == __Product.EndingDate.Date))
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,607
608,510InsSum2,"__Result = ""XXXX"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""510"");
if (prog != null && (__Product.BeginingDate.Date.AddYears(2) < __Product.EndingDate.Date || __Product.BeginingDate.Date.AddYears(2) == __Product.EndingDate.Date) || __Product.BeginingDate.Date.AddYears(3) < __Product.EndingDate.Date || __Product.BeginingDate.Date.AddYears(3) == __Product.EndingDate.Date)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,608
609,709ContractIsAttachment,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Договір страхування є додатковим до інших товарів, робіт або послуг, що не є страховими"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,609
610,709SizeOfExpenses,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Розмір витрат на укладання договору, %"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,610
611,505Franshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""505"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Фізичні особи"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна майну потерпілих"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза за шкоду майну третіх осіб  "");
			if (franchise != null)
			{
				__Result = franchise.GetFranchiseValueCaption().ToString();
			}
		}
	}
}
",,611
612,346TotalRate,"__Result = """";
if (__Product.Programs != null)
{
	decimal payment = __Product.PaymentPeriods.Sum(p => p.PlanedPayments != null ? p.PlanedPayments.Sum(pp => pp.Value) : (decimal)0);
	decimal insuranceSum = __Product.Programs.Sum(p => p.InsuranceObjects != null ? p.InsuranceObjects.Sum(io => io.InsuranceSum != null ? io.InsuranceSum.Value : (decimal)0) : (decimal)0);
	decimal halfInsuranceSum = __Product.InsuranceSumUkr / 2;
	decimal rate = (decimal)100 * payment / halfInsuranceSum;
	__Result = rate.ToString(""N4"");
}
",,612
613,346InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,613
614,TotalRate,"__Result = """";
if (__Product.Programs != null)
{
	decimal payment = __Product.PaymentPeriods.Sum(p => p.PlanedPayments != null ? p.PlanedPayments.Sum(pp => pp.Value) : (decimal)0);
	decimal insuranceSum = __Product.Programs.Sum(p => p.InsuranceObjects != null ? p.InsuranceObjects.Sum(io => io.InsuranceSum != null ? io.InsuranceSum.Value : (decimal)0) : (decimal)0);
	decimal rate = (decimal)100 * payment / __Product.InsuranceSumUkr;
	__Result = rate.ToString(""N4"");
}
",,614
615,CostEstate346,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
		if (estate.Cost != null)
		{
			__Result = estate.Cost.Value.ToString();
		}
	}
}
",,615
616,IsTraumaticWeapon,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.Object.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Тип зброї"");
		if (attribute != null)
		{
			if (attribute.GetValueCaption().ToString() == ""Травматична зброя"")
			{
				__Result = ""Так"";
			}
			else
			{
							__Result = ""Ні"";
			}
		}
	}
}
",,616
617,IsFirearmsRifled,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.Object.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Тип зброї"");
		if (attribute != null)
		{
			if (attribute.GetValueCaption().ToString() == ""Вогнепальна зброя нарізна"")
			{
				__Result = ""Так"";
			}
			else
			{
							__Result = ""Ні"";
			}
		}
	}
}
",,617
618,IsSmoothFirearms,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.Object.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Тип зброї"");
		if (attribute != null)
		{
			if (attribute.GetValueCaption().ToString() == ""Вогнепальна зброя гладкоствольна"")
			{
				__Result = ""Так"";
			}
			else
			{
							__Result = ""Ні"";
			}
		}
	}
}
",,618
619,NewInsuredActualAddress,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Face insuredFace = (Workflow.DTO.Models.Face)insuranceObject.Object;
	if (insuredFace != null && insuredFace.PostActualAddressObject != null)
	{
		__Result = insuredFace.PostActualAddressObject.GetFullAddress();
	}
}
",,619
620,NewInsurerActualAddress,"__Result = ""---"";
if (__Product.Insurer.Face != null && __Product.Insurer.Face.PostActualAddressObject != null)
{
	__Result = __Product.Insurer.Face.PostActualAddressObject.GetFullAddress();
}
",,620
621,721RatePeriod,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""510"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Страховий тариф за період покриття"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,621
622,345Rate,"__Result = ""----"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""345"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Зброя"");
	if (insuranceObject != null && insuranceObject.InsuranceRate != null)
	{
		decimal payment = insuranceObject.InsuranceRate.Value;
		__Result = payment.ToString(""N2"");
	}
}
",,622
623,722SizeOfExpenses,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Розмір витрат на укладання договору"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,623
624,722WeaponCost,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Вартість майна"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,624
625,722WeaponCode,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Код зброї"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,625
626,722WeaponSerialNumber,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Серійний номер зброї"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,626
627,722WeaponModel,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Модель зброї"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,627
628,722WeaponManufacturer,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""346"" || p.GetInsuranceTypeCode() == ""345"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Виробник зброї"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,628
629,345Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>ДІЇ ПРИ НАСТАННІ СТРАХОВОГО ВИПАДКУ:<br/>1. Повідомте в страхову компанію протягом 24 годин та слідуйте наданим інструкціям: <br/>067 170 73 37<br/>050 170 73 37<br/>093 170 73 37;<br/>2. Привезіть виріб до сервісного центру або регіонального магазину Ібіс;<br/>3. Очікуйте результати діагностики від сервісного центру;<br/>4. Після ремонту забирайте свій виріб або отримуйте компенсацію.<br/>Із найкращими побажаннями,<br/>НАСК \""ОРАНТА\"""";
",,629
630,345LetterSubject,"__Result = ""Супроводжувальний лист клієнту до е-поліса \""Гарантія плюс\"" номер "" + __Product.PolisNumber;
",,630
631,SMS345,"__Result = ""Разовий ідентифікатор для підписання договору Гарантія плюс: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,631
632,722Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>ДІЇ ПРИ НАСТАННІ СТРАХОВОГО ВИПАДКУ:<br/>1. Повідомте в страхову компанію протягом 24 годин та слідуйте наданим інструкціям: <br/>067 170 73 37<br/>050 170 73 37<br/>093 170 73 37;<br/>2. Привезіть виріб до сервісного центру або регіонального магазину Ібіс;<br/>3. Очікуйте результати діагностики від сервісного центру;<br/>4. Після ремонту забирайте свій виріб або отримуйте компенсацію.<br/>Із найкращими побажаннями,<br/>НАСК \""ОРАНТА\"""";
",,632
633,722LetterSubject,"__Result = ""Супроводжувальний лист клієнту до е-поліса \""Максимальний захист\"" номер "" + __Product.PolisNumber;
",,633
634,SMS722,"__Result = ""Разовий ідентифікатор для підписання договору Максимальний захист: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,634
635,AgentEmail,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.Email != null)
			{
				__Result = agentCommission.Agent.Email;
			}
		}
	}
}
",,635
636,AgentPhoneNumber,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				if (agentCommission.Agent.IsJuridicalPerson && !agentCommission.Agent.IsPerson)
				{
					__Result = agentCommission.Agent.PhoneNumber;
				}
				else
				{
									__Result = agentCommission.Agent.MobilePhoneNumber;
				}
			}
		}
	}
}
",,636
637,AgentBirthdate,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.Birthdate != null)
			{
				__Result = agentCommission.Agent.Birthdate.Value.ToShortDateString();
			}
		}
	}
}
",,637
638,AgentINN,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null)
			{
				__Result = agentCommission.Agent.IdentificationCodeEDRPOU;
			}
		}
	}
}
",,638
639,AgentActualAddress,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostActualAddressObject != null)
			{
				__Result = agentCommission.Agent.PostActualAddressObject.GetFullAddress();
			}
		}
	}
}
",,639
640,AgentAddress,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission != null && agentCommission.Agent != null && agentCommission.Agent.PostAddressObject != null)
			{
				__Result = agentCommission.Agent.PostAddressObject.GetFullAddress();
			}
		}
	}
}
",,640
641,AgentFullName,"__Result = ""---"";
if (__Product.Programs[0].Commissions != null)
{
	Workflow.DTO.Models.Commission agentCommission = __Product.Programs[0].Commissions.FirstOrDefault(c => c.GetCommissionTypeName() == ""Агент"");
	if (agentCommission != null)
	{
		Workflow.DTO.Models.Agent agent = __Context.GetAgent(agentCommission.AgentGID);
		if (agent != null && (agent.AgentChannels == null || !agent.AgentChannels.Any(ac => ac.Code == ""11"" || ac.Code == ""21"" || ac.Code == ""31"" || ac.Code == ""32"")))
		{
			if (agentCommission.Agent.IsJuridicalPerson && !agentCommission.Agent.IsPerson)
			{
				__Result = agentCommission.Agent.FullName;
			}
			else
			{
							__Result = agentCommission.Agent.Lastname + "" "" + agentCommission.Agent.Firstname + "" "" + agentCommission.Agent.Secondname;
			}
		}
	}
}
",,641
642,NewInsuredAddress,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && io.GetObjectTypeName() == ""Фізичні особи"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Face insuredFace = (Workflow.DTO.Models.Face)insuranceObject.Object;
	if (insuredFace != null && insuredFace.PostAddressObject != null)
	{
		__Result = insuredFace.PostAddressObject.GetFullAddress();
	}
}
",,642
643,475Franshise,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"" || p.GetInsuranceTypeCode() == ""470"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Фізичні особи"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Інші ризики"" && c.Franchises != null);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
			if (franchise != null)
			{
				if (franchise.GetFranchiseValueCaption() != null && !string.IsNullOrEmpty(franchise.GetFranchiseValueCaption().ToString()))
				{
					__Result = franchise.GetFranchiseValueCaption().ToString();
				}
			}
		}
	}
}
",,643
644,InsuranceClassName,"__Result = """";
if (__Product.Programs.Count() > 0)
{
	__Result = __Product.Programs[0].GetInsuranceClassName();
}
",,644
645,InsuranceClass,"__Result = """";
if (__Product.Programs.Count() > 0)
{
	__Result = __Product.Programs[0].GetInsuranceClassCode();
}
",,645
646,BusinessLineName,"__Result = """";
if (__Product.Programs.Count() > 0)
{
	__Result = __Product.Programs[0].GetBusinessLineName();
}
",,646
647,BusinessLineCode,"__Result = """";
if (__Product.Programs.Count() > 0)
{
	__Result = __Product.Programs[0].GetBusinessLineCode();
}
",,647
648,DirectorNameGenitive,"__Result = ""---"";
Workflow.DTO.Models.Branch direction = __Context.GetDirectionBranch(__Product.BranchGID);
if (direction != null)
{
	Workflow.DTO.Models.Agent director = __Context.GetBranchDirector(direction.gid);
	if (director != null)
	{
		Workflow.DTO.Models.Face directorFace = (Workflow.DTO.Models.Face)__Context.GetObject(director.gid);
		if (directorFace != null)
		{
			__Result = directorFace.GenitiveName;
		}
	}
}
",,648
649,DirectorPosition,"__Result = ""---"";
Workflow.DTO.Models.Branch direction = __Context.GetDirectionBranch(__Product.BranchGID);
if (direction != null)
{
	Workflow.DTO.Models.Agent director = __Context.GetBranchDirector(direction.gid);
	if (director != null)
	{
		Workflow.DTO.Models.Face directorFace = (Workflow.DTO.Models.Face)__Context.GetObject(director.gid);
		if (directorFace != null)
		{
			__Result = directorFace.Post;
		}
	}
}
",,649
650,DirectorPositionGenitive,"__Result = ""---"";
Workflow.DTO.Models.Branch direction = __Context.GetDirectionBranch(__Product.BranchGID);
if (direction != null)
{
	Workflow.DTO.Models.Agent director = __Context.GetBranchDirector(direction.gid);
	if (director != null)
	{
		Workflow.DTO.Models.Face directorFace = (Workflow.DTO.Models.Face)__Context.GetObject(director.gid);
		if (directorFace != null)
		{
			__Result = directorFace.GenitivePost;
		}
	}
}
",,650
651,721LetterSubject,"__Result = ""Договір страхування \""Калібр\"" номер "" + __Product.PolisNumber;
",,651
652,721Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/> НАСК \""ОРАНТА\"""";
",,652
653,SMS721,"__Result = ""Разовий ідентифікатор для підписання договору \""Калібр\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,653
654,EstateFlat,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Адреса реєстрації Страхувальника"");
		if (attribute != null && attribute.Value.ToString() == ""True"")
		{
			__Result = ""---"";
		}
		else
		{
					Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
			if (estate.PostAddressObject != null)
			{
				__Result = estate.PostAddressObject.Flat;
			}
		}
	}
}
",,654
655,EstateHouse,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Адреса реєстрації Страхувальника"");
		if (attribute != null && attribute.Value.ToString() == ""True"")
		{
			__Result = ""---"";
		}
		else
		{
					Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
			if (estate.PostAddressObject != null)
			{
				__Result = estate.PostAddressObject.House;
			}
		}
	}
}
",,655
656,EstateStreetName,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Адреса реєстрації Страхувальника"");
		if (attribute != null && attribute.Value.ToString() == ""True"")
		{
			__Result = ""---"";
		}
		else
		{
					Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
			if (estate.PostAddressObject.Street != null)
			{
				__Result = estate.PostAddressObject.Street;
			}
		}
	}
}
",,656
657,EstateSettlementName,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Адреса реєстрації Страхувальника"");
		if (attribute != null && attribute.Value.ToString() == ""True"")
		{
			__Result = ""---"";
		}
		else
		{
					Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
			if (estate.PostAddressObject.GetSettlementName() != null)
			{
				__Result = estate.PostAddressObject.GetSettlementName();
			}
			else
			{
							if (estate.PostAddressObject.GetSettlementName() == ""Київ"")
				{
					__Result = ""Київ"";
				}
				else
				{
									if (estate.PostAddressObject.GetSettlementName() == ""Севастополь"")
					{
						__Result = ""Севастополь"";
					}
				}
			}
		}
	}
}
",,657
658,EstateRegion,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Адреса реєстрації Страхувальника"");
		if (attribute != null && attribute.Value.ToString() == ""True"")
		{
			__Result = ""---"";
		}
		else
		{
					Workflow.DTO.Models.Estate estate = (Workflow.DTO.Models.Estate)insuranceObject.Object;
			if (estate.PostAddressObject != null && estate.PostAddressObject.GetParentRegionName() != null && estate.PostAddressObject.GetParentRegionName() != ""Севастополь"" && estate.PostAddressObject.GetParentRegionName() != ""Київ"")
			{
				__Result = estate.PostAddressObject.GetParentRegionName().Replace(""область"", """");
			}
		}
	}
}
",,658
659,IsAddEstateInsurer,"__Result = ""Так"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = insuranceObject.EntityAttributes.FirstOrDefault(t => t.GetAttributeName() == ""Адреса реєстрації Страхувальника"");
		if (attribute != null && attribute.GetValueCaption().ToString() != ""True"")
		{
			__Result = ""Ні"";
		}
	}
}
",,659
660,AppCrossProductPolisSeria,"__Result = """";
Workflow.DTO.Models.Product cross = __InsuranceApplication.Products.FirstOrDefault(p => p.GetProductTypeCode() == ""233"");
if (cross != null)
{
	Workflow.DTO.Models.Blank blank = cross.Blanks.FirstOrDefault(b => b.GetBlankTypeName() == ""Поліс ОСЦПВВ н/з-2011р."");
	if (blank != null)
	{
		int index = blank.Number.IndexOf(""-"");
		__Result = blank.Number.Substring(0, blank.Number.IndexOf(""-""));
	}
}
else
{
	__Result = """";
}
if (string.IsNullOrEmpty(__Result) && __InsuranceApplication.BasedOnProductGID != null)
{
	Workflow.DTO.Models.Product crossProduct = __Context.GetProductByGID(__InsuranceApplication.BasedOnProductGID.Value);
	if (crossProduct != null)
	{
		int indexC = crossProduct.PolisNumber.IndexOf(""-"");
		__Result = crossProduct.PolisNumber.Substring(0, crossProduct.PolisNumber.IndexOf(""-""));
	}
}
",,660
661,AppCrossProductPolisNumber,"__Result = """";
Workflow.DTO.Models.Product cross = __Context.GetCrossProduct(__Product);
if (cross != null)
{
	Workflow.DTO.Models.Blank blank = cross.Blanks.FirstOrDefault(b => b.GetBlankTypeName() == ""Поліс ОСЦПВВ н/з-2011р."");
	if (blank != null)
	{
		int index = blank.Number.IndexOf(""-"");
		__Result = blank.Number.Substring(index + 1, blank.Number.Length - index - 1);
	}
	else
	{
			__Result = cross.PolisNumber;
	}
}
else
{
	Workflow.DTO.Models.Program prog = __Product.Programs[0];
	if (prog != null)
	{
		Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
		if (param != null)
		{
			__Result = param.ParameterValue.ToString();
		}
	}
}
if (string.IsNullOrEmpty(__Result) && __InsuranceApplication.BasedOnProductGID != null)
{
	Workflow.DTO.Models.Product crossProduct = __Context.GetProductByGID(__InsuranceApplication.BasedOnProductGID.Value);
	if (crossProduct != null)
	{
		int indexC = crossProduct.PolisNumber.IndexOf(""-"");
		__Result = crossProduct.PolisNumber.Substring(indexC + 1, crossProduct.PolisNumber.Length - indexC - 1);
	}
	else
	{
			__Result = crossProduct.PolisNumber;
	}
}
",,661
662,ConstructionFranshise,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Конструктивні елементи"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
	if (cover != null)
	{
		Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
		if (franchise != null)
		{
			__Result = franchise.GetFranchiseValueCaption().ToString();
		}
	}
}
",,662
663,DecorationFranshise,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Внутрішнє оздоблення"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
	if (cover != null)
	{
		Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
		if (franchise != null)
		{
			__Result = franchise.GetFranchiseValueCaption().ToString();
		}
	}
}
",,663
664,MovablesFranshise,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"" && i.Object != null && i.Covers != null);
if (insuranceObject != null)
{
	Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.GetRiskName() == ""Стихійні явища"" && c.Franchises != null);
	if (cover != null)
	{
		Workflow.DTO.Models.Franchise franchise = cover.Franchises.FirstOrDefault(f => f.GetFranchiseTypeName() == ""Франшиза універсальна"");
		if (franchise != null)
		{
			__Result = franchise.GetFranchiseValueCaption().ToString();
		}
	}
}
",,664
665,MovablesPayment,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""344"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
		__Result = result.ToString(""N2"");
	}
}
",,665
666,MovablesRate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""344"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
		__Result = result.ToString(""N4"");
	}
}
",,666
667,MovablesInsSum,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Рухоме майно"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,667
668,TimeSmsCode,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Час підпису разовим ідентифікатором"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,668
669,DecorationPayment,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""344"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Внутрішнє оздоблення"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Внутрішнє оздоблення"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
		__Result = result.ToString(""N2"");
	}
}
",,669
670,ConstructionPayment,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""344"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Конструктивні елементи"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Конструктивні елементи"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = (decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment;
		__Result = result.ToString(""N2"");
	}
}
",,670
671,DecorationRate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""344"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Внутрішнє оздоблення"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Внутрішнє оздоблення"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
		__Result = result.ToString(""N4"");
	}
}
",,671
672,DecorationInsSum,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Внутрішнє оздоблення"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,672
673,ConstructionRate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
Workflow.DTO.Models.Program secondProgram = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""344"");
if (program != null && secondProgram != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Конструктивні елементи"");
	Workflow.DTO.Models.InsuranceObject secondInsuranceObject = secondProgram.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Конструктивні елементи"");
	if (insuranceObject != null && insuranceObject.InsurancePayment.Value != null && secondInsuranceObject != null && secondInsuranceObject.InsurancePayment.Value != null)
	{
		decimal result = ((decimal)insuranceObject.InsurancePayment + (decimal)secondInsuranceObject.InsurancePayment) / insuranceObject.InsuranceSum.Value * 100;
		__Result = result.ToString(""N4"");
	}
}
",,673
674,ConstructionInsSum,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Конструктивні елементи"");
	if (insuranceObject != null && insuranceObject.InsuranceSum != null)
	{
		__Result = insuranceObject.InsuranceSum.Value.ToString(""N2"");
	}
}
",,674
675,BuildArea,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetObjectTypeName() == ""Внутрішнє оздоблення"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Загальна площа, кв.м"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,675
676,KindOfAnimal,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Домашній улюбленець"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Вид тварини"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,676
677,UniqueIdentificationNumberAnimal,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Домашній улюбленець"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Унікальний ідентифікаційний номер"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,677
678,MonthYearOfBirthAnimal,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Домашній улюбленець"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Місяць, рік народження"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,678
679,BreedAnimal,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Домашній улюбленець"");
	if (insObj != null && insObj.Object != null)
	{
		Workflow.DTO.Models.EntityAttribute attr = insObj.Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Порода"");
		if (attr != null)
		{
			__Result = attr.Value.ToString();
		}
	}
}
",,679
680,NameAnimal,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (prog != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Домашній улюбленець"");
	if (insObj != null)
	{
		__Result = insObj.Name;
	}
}
",,680
681,505Payment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""505"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,681
682,505Rate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""505"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Фізичні особи"");
	if (insuranceObject != null && insuranceObject.InsuranceRate != null)
	{
		decimal payment = insuranceObject.InsuranceRate.Value;
		__Result = payment.ToString(""N4"");
	}
}
",,682
683,505InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""505"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,683
684,475Payment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,684
685,475Rate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Фізичні особи"");
	if (insuranceObject != null && insuranceObject.InsuranceRate != null)
	{
		decimal payment = insuranceObject.InsuranceRate.Value;
		__Result = payment.ToString(""N4"");
	}
}
",,685
686,475InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""475"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,686
687,470Payment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""470"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,687
688,470Rate,"__Result = ""--------"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""470"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetObjectTypeName() == ""Фізичні особи"");
	if (insuranceObject != null && insuranceObject.InsuranceRate != null)
	{
		decimal payment = insuranceObject.InsuranceRate.Value;
		__Result = payment.ToString(""N4"");
	}
}
",,688
689,470InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""470"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,689
690,342RenovationClass,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Клас ремонту"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,690
691,342BuildArea,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Загальна площа, кв.м"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,691
692,342NoWear,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Знос"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		__Result = ""Ні"";
	}
	else
	{
			__Result = ""Так"";
	}
}
",,692
693,342Wear,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Знос"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,693
694,709PaketKvartiraPlus,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Квартира+"")
	{
		__Result = ""Так"";
	}
}
",,694
695,709PaketKvartira,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""342"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Квартира"")
	{
		__Result = ""Так"";
	}
}
",,695
696,709Letter,"__Result = ""Вітаємо!<br/>Ви щойно придбали договір страхування. Дякуємо за Ваш вибір.<br/>Договір у вкладенні.<br/>Із найкращими побажаннями,<br/>НАСК \""ОРАНТА\"""";
",,696
697,709LetterSubject,"__Result = ""Договір страхування \""Рідна квартира\"" номер "" + __Product.PolisNumber;
",,697
698,SMS709,"__Result = ""Разовий ідентифікатор для підписання договору \""Рідна квартира\"": {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,698
699,NowDay,"__Result = DateTime.GetNow().ToString(""dd.MM.yyyy"");
",,699
700,SMSCross,"List<Workflow.DTO.Models.Product> products = __InsuranceApplication.Products;
__Result = ""Разовий ідентифікатор для підписання договору "" + products[0].GetProductTypeName() + "": {smscode}; "";
int counter = 1;
while (counter < products.Count())
{
	Workflow.DTO.Models.Product product = products[counter];
	string productIdentifier = product.GetProductTypeName();
	__Result = __Result + productIdentifier + "": {smscode}; "";
	counter = counter + 1;
}
if (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт 8П - сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт Сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт Сайт промокод"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 1"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 10"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 20"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 30"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт Сайт 15"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""Мобільний додаток Стандарт 15"" || __InsuranceApplication.GetInsuranceApplicationSourceTypeName() == ""Інтернет-магазин"")
{
	__Result = __Result;
}
else
{
	__Result = __Result + "" посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
}
__Result = __Result.Replace(""ЕП ОСЦВВНТЗ для фіз. особи НОВИЙ 20190921"", ""Автоцивілка"").Replace(""701 АБСОЛЮТНИЙ ЗАХИСТ"", ""Абсолютний захист"").Replace(""786 ЕП ОСЦПВ 2025 для фізичних осіб"", ""Автоцивілка"").Replace(""786 ЕП ОСЦПВ 2025 для юридичних осіб"", ""Автоцивілка"").Replace(""219 Автопарасолька 2025"", ""Автопарасолька"").Replace(""724 ДЦВ online"", ""ДЦВ online"").Replace(""708 Особиста безпека крос"", ""Особиста безпека"");
",,700
701,AppOrantaTravelLuggageRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = GetProgramLuggage;
decimal payment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == program.gid).Sum(pp1 => pp1.Value));
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue currencyParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Валюта"");
	if (currencyParameter != null)
	{
		decimal insuranceSum = 0;
		decimal insuranceSumInCurrency = 0;
		Workflow.DTO.Models.ProgramParameterValue euroInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в EURO"");
		if (euroInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""EURO"")
		{
			insuranceSumInCurrency = (decimal)euroInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""EUR"", __Product.RegisteredDate);
		}
		Workflow.DTO.Models.ProgramParameterValue usdInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в USD"");
		if (usdInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""USD"")
		{
			insuranceSumInCurrency = (decimal)usdInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""USD"", __Product.RegisteredDate);
		}
		if (insuranceSum > 0)
		{
			decimal insuranceRate = payment / insuranceSum * 100;
			__Result = insuranceRate.ToString(""N5"");
		}
	}
}
",,701
702,AppOrantaTravelAccidentRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = GetProgramAccident;
decimal payment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == program.gid).Sum(pp1 => pp1.Value));
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue currencyParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Валюта"");
	if (currencyParameter != null)
	{
		decimal insuranceSum = 0;
		decimal insuranceSumInCurrency = 0;
		Workflow.DTO.Models.ProgramParameterValue euroInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в EURO"");
		if (euroInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""EURO"")
		{
			insuranceSumInCurrency = (decimal)euroInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""EUR"", __Product.RegisteredDate);
		}
		Workflow.DTO.Models.ProgramParameterValue usdInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в USD"");
		if (usdInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""USD"")
		{
			insuranceSumInCurrency = (decimal)usdInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""USD"", __Product.RegisteredDate);
		}
		if (insuranceSum > 0)
		{
			decimal insuranceRate = payment / insuranceSum * 100;
			__Result = insuranceRate.ToString(""N5"");
		}
	}
}
",,702
703,OrantaTravelAccidentRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = GetProgramAccident;
decimal payment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == program.gid).Sum(pp1 => pp1.Value));
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue currencyParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Валюта"");
	if (currencyParameter != null)
	{
		decimal insuranceSum = 0;
		decimal insuranceSumInCurrency = 0;
		Workflow.DTO.Models.ProgramParameterValue euroInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в EURO"");
		if (euroInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""EURO"")
		{
			insuranceSumInCurrency = (decimal)euroInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""EUR"", __Product.RegisteredDate);
		}
		Workflow.DTO.Models.ProgramParameterValue usdInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в USD"");
		if (usdInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""USD"")
		{
			insuranceSumInCurrency = (decimal)usdInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""USD"", __Product.RegisteredDate);
		}
		if (insuranceSum > 0)
		{
			decimal insuranceRate = payment / insuranceSum * 100;
			__Result = insuranceRate.ToString(""N5"");
		}
	}
}
",,703
704,AppOrantaTravelMedRate,"__Result = ""---"";
Workflow.DTO.Models.Program program = GetProgramMed;
decimal payment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == program.gid).Sum(pp1 => pp1.Value));
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue currencyParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Валюта"");
	if (currencyParameter != null)
	{
		decimal insuranceSum = 0;
		decimal insuranceSumInCurrency = 0;
		Workflow.DTO.Models.ProgramParameterValue euroInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в EURO"");
		if (euroInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""EURO"")
		{
			insuranceSumInCurrency = (decimal)euroInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""EUR"", __Product.RegisteredDate);
		}
		Workflow.DTO.Models.ProgramParameterValue usdInsuranceSumParameter = program.Parameters.FirstOrDefault(p => p.GetParameterName() == ""Страхова сума в USD"");
		if (usdInsuranceSumParameter != null && (string)currencyParameter.GetParameterValueCaption() == ""USD"")
		{
			insuranceSumInCurrency = (decimal)usdInsuranceSumParameter.GetParameterValueCaption();
			insuranceSum = __Context.ExchangeMoney(insuranceSumInCurrency, ""USD"", __Product.RegisteredDate);
		}
		if (insuranceSum > 0)
		{
			decimal insuranceRate = payment / insuranceSum * 100;
			__Result = insuranceRate.ToString(""N5"");
		}
	}
}
",,704
705,SMS710,"__Result = ""Код для підписання електронного полісу У ВІДПУСТКУ З ОРАНТОЮ: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,705
706,710Letter,"__Result = ""Шановний "" + __Product.Insurer.Face.Name + ""!<br/>Дякуємо, що взяли НАСК \""ОРАНТА\"" з собою у подорож.<br/>З нами вона буде не тільки цікавою та яскравою,  а ще й безпечною.<br/>Не хвилюйтесь, якщо від переповнення емоцій Ви зазнаєте травми, підхопите застуду або просто старі захворювання дадуть про себе знати.<br/>Наша команда завжди на захисті Ваших позитивних вражень і готова швидко прийти на допомогу.<br/>Програма \""У відпустку з Орантою\"" повністю покриває нещасні випадки та розлади здоров’я (навіть гострий зубний біль!).<br/>Договір знаходиться у вкладенні до цього листа.<br/>Якщо трапиться страховий випадок - телефонуйте за номером (050) 624-96-69, (067) 624-96-69, (093) 624-96-69 (з мобільних телефонів); 044 520 29 02 або (044) 520-29-52 (у місті Києві) або надішліть повідомлення за адресою: dms@assist.org.ua або на Viber, Telegram, WhatsApp за номером 067-239-76-80 і ми вирішимо це питання у найкоротший термін.<br/>Слідкуйте за нашими останніми новинами в соцмережах.<br/>Приймайте участь у розіграші цінних подарунків.<br/>Дбаємо про Вашу безпеку,<br/>НАСК \""ОРАНТА\"""";
",,706
707,710LetterSubject,"__Result = ""Договір страхування \""У відпустку з Орантою\"" номер "" + __Product.PolisNumber;
",,707
708,113VariantII,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"" || p.GetInsuranceTypeCode() == ""114"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Варіант II"")
	{
		__Result = ""Так"";
	}
}
",,708
709,113VariantI,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"" || p.GetInsuranceTypeCode() == ""114"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Варіант страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Варіант I"")
	{
		__Result = ""Так"";
	}
}
",,709
710,160Payment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""160"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,710
711,160Rate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""160"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N2"");
}
",,711
712,160InsSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""160"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,712
713,113Payment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"" || p.GetInsuranceTypeCode() == ""114"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,713
714,113Rate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"" || p.GetInsuranceTypeCode() == ""114"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N2"");
}
",,714
715,113InsSum,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"" || p.GetInsuranceTypeCode() == ""114"");
__Result = ""---"";
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N2"");
}
",,715
716,SportsCategorySPTURshort,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"" || p.GetInsuranceTypeCode() == ""114"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Спортивна категорія"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""SP-TUR"")
	{
		__Result = ""Так"";
	}
}
",,716
717,SportsCategorySPshort,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""113"" || p.GetInsuranceTypeCode() == ""114"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Спортивна категорія"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""SP"")
	{
		__Result = ""Так"";
	}
}
",,717
718,708Letter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір страхування ОСОБИСТА БЕЗПЕКА  у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""  <br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні. Щодня."";
",,718
719,708Subject,"__Result = ""Договір страхування ОСОБИСТА БЕЗПЕКА номер "" + __Product.PolisNumber;
",,719
720,708Sms,"__Result = ""Разовий ідентифікатор для підписання договору ОСОБИСТА БЕЗПЕКА: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,720
721,702MiniCaskoLetter,"__Result = ""Вітаємо, "" + __Product.Insurer.Face.Firstname + "" "" + __Product.Insurer.Face.Secondname + ""!<br/>Ваш електронний договір МІНІ КАСКО у вкладенні. Він діє з "" + __Product.BeginingDate.ToShortDateString() + "" по "" + __Product.EndingDate.AddSeconds((double)(-1)).ToShortDateString() + ""  <br/>Дякуємо, що обираєте НАСК \""ОРАНТА\"".<br/>Оберігаємо з 1921 року і до сьогодні.Щодня.<br/><br/>НАСК \""ОРАНТА\"""";
",,721
722,702MiniCasko,"__Result = ""Договір страхування МІНІ КАСКО номер "" + __Product.PolisNumber;
",,722
723,NewInsurerAddress,"__Result = ""---"";
if (__Product.Insurer.Face != null && __Product.Insurer.Face.PostAddressObject != null)
{
	__Result = __Product.Insurer.Face.PostAddressObject.GetFullAddress();
}
",,723
724,linkMTSBU,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __InsuranceApplication.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Посилання на електронний поліс"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
",,724
725,Sms702MiniCasco,"__Result = ""Разовий ідентифікатор для підписання договору МІНІ КАСКО: {smscode}, посилання для оплати "" + __Context.GetSetting(""PaymentURL"") + __InsuranceApplication.id.ToString() + ""-"" + __InsuranceApplication.gid.ToString().Substring(0, __InsuranceApplication.gid.ToString().IndexOf(""-""));
",,725
726,NewBeneficiaryAddress,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face != null && face.PostAddressObject != null && face.PostAddressObject.GetFullAddress() != null)
		{
			__Result = face.PostAddressObject.GetFullAddress();
		}
	}
}
",,726
727,NewBeneficiaryName,"__Result = ""XXXX"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.InsuranceObjects.Any(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач""));
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Вигодонабувач"");
	if (insuranceObject != null && insuranceObject.Object != null)
	{
		Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)insuranceObject.Object;
		if (face.PersonTypeID == 2)
		{
			__Result = face.FullName;
		}
		else
		{
					__Result = string.Format(""{0} {1} {2}"", face.Lastname, face.Firstname, face.Secondname);
		}
	}
}
",,727
728,TotalPayment0,"__Result = """";
if (__Product.Programs != null)
{
	decimal payment = __Product.PaymentPeriods.Sum(p => p.PlanedPayments != null ? p.PlanedPayments.Sum(pp => pp.Value) : (decimal)0);
	__Result = payment.ToString(""N0"");
}
",,728
729,InsurerAddressFull,"__Result = """";
if (__Product.Insurer.Face != null)
{
	__Result = __Product.Insurer.Face.PostActualAddressObject != null ? __Product.Insurer.Face.PostActualAddressObject.GetFullAddress() : __Product.Insurer.Face.Address;
}
",,729
730,151TeleMedSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""151 Добровільне медичне страхування ТЕЛЕМЕДИЦИНА"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N0"");
}
",,730
731,151TeleMedRate,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""151 Добровільне медичне страхування ТЕЛЕМЕДИЦИНА"");
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N6"");
}
",,731
732,151TeleMedPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""151 Добровільне медичне страхування ТЕЛЕМЕДИЦИНА"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N0"");
	}
}
",,732
733,151ProtectionSum,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N0"");
}
",,733
734,151ProtectionRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""151 Добровільне медичне страхування ОСОБИСТА БЕЗПЕКА"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N6"");
}
",,734
735,151ProtectionPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N0"");
	}
}
",,735
736,102InsSum,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
__Result = ""---"";
if (prog != null)
{
	__Result = prog.CostValue.ToString(""N0"");
}
",,736
737,102Rate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N6"");
}
",,737
738,102Payment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N0"");
	}
}
",,738
739,SportsCategoryNot,"__Result = ""Так"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""151"" || p.GetInsuranceTypeCode() == ""113"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Спортивна категорія"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""-немає-"")
	{
		__Result = ""Ні"";
	}
}
",,739
740,SportsCategorySP,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Спортивна категорія"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Професійні спортсмени (змагання) SP"")
	{
		__Result = ""Так"";
	}
}
",,740
741,SportsCategorySA,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Спортивна категорія"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Екстремальні види спорту SA"")
	{
		__Result = ""Так"";
	}
}
",,741
742,InsuredPersonMail,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	__Result = f.Email;
}
",,742
743,InsuredPersonMobPhone,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	__Result = f.MobilePhoneNumber;
}
",,743
744,PacetSafePlus,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""БЕЗПЕЧНИЙ+"")
	{
		__Result = ""Так"";
	}
}
",,744
745,PacetSafe,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""102"" || p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""БЕЗПЕЧНИЙ"")
	{
		__Result = ""Так"";
	}
}
",,745
746,FranGuilty,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""XXXX"";
	}
	else
	{
			__Result = ""1,0"";
	}
}
",,746
747,FranNotGuilty,"__Result = ""0.0"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""XXXX"";
	}
}
",,747
748,211NoWearofParts,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Знос деталей"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Так"")
	{
		__Result = ""Ні"";
	}
	else
	{
			__Result = ""Так"";
	}
}
",,748
749,211WearofParts,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Знос деталей"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,749
750,211VehicleCost,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Дійсна вартість ТЗ"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,750
751,211RiskDamage,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пошкодження внаслідок ДТП"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,751
752,211RiskTotal,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Повна загибель внаслідок ДТП"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,752
753,211Paket,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,753
754,211VehicleMileage,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пробіг"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,754
755,MiniCascoRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""211"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N4"");
}
",,755
756,VehicleMileage,"__Result = """";
Workflow.DTO.Models.InsuranceObject insuranceObject = __Product.Programs[0].InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
if (insuranceObject != null)
{
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
	if (vehicle != null && vehicle.Mileage != null)
	{
		__Result = vehicle.Mileage.Value.ToString(""N0"");
	}
}
",,756
757,241NoOTP,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"");
__Result = __Context.PrintMarkedPoint(prog == null);
",,757
758,211NoCasko,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО BASIC"");
__Result = __Context.PrintMarkedPoint(prog == null);
",,758
759,211Casko,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО BASIC"");
__Result = __Context.PrintMarkedPoint(prog != null);
",,759
760,241OTP,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"");
__Result = __Context.PrintMarkedPoint(prog != null);
",,760
761,115NoRoad,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""115"");
__Result = __Context.PrintMarkedPoint(prog == null);
",,761
762,115Road,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""115"");
__Result = __Context.PrintMarkedPoint(prog != null);
",,762
763,PacetS,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"" || p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""115"");
if (program != null)
{
	__Result = __Context.PrintMarkedPoint(program.Parameters.Any(p => p.GetParameterCaption() == ""Пакет"" && p.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»""));
}
",,763
764,PacetXL,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"" || p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""115"");
if (program != null)
{
	__Result = __Context.PrintMarkedPoint(program.Parameters.Any(p => p.GetParameterCaption() == ""Пакет"" && p.GetParameterValueCaption().ToString() == ""ПАКЕТ «XL»""));
}
",,764
765,PacetM,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"" || p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""115"");
if (program != null)
{
	__Result = __Context.PrintMarkedPoint(program.Parameters.Any(p => p.GetParameterCaption() == ""Пакет"" && p.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»""));
}
",,765
766,PacetL,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"" || p.GetInsuranceTypeCode() == ""211"" || p.GetInsuranceTypeCode() == ""115"");
if (program != null)
{
	__Result = __Context.PrintMarkedPoint(program.Parameters.Any(p => p.GetParameterCaption() == ""Пакет"" && p.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»""));
}
",,766
767,241OTPLInsSumm,"__Result = ""---"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"");
if (program != null)
{
	__Result = program.CostValue.ToString(""N2"");
}
",,767
768,115RoadPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""115"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,768
769,211CaskoPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО BASIC"" || p.GetProgramTypeName() == ""211 КАСКО КОМФОРТ"" || p.GetProgramTypeName() == ""211 КАСКО КОМФОРТ крос продукт"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,769
770,115RoadRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""115"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,770
771,241OTPLPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,771
772,241OTPLRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""241"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,772
773,211CascoRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetProgramTypeName() == ""211 КАСКО BASIC"" || p.GetProgramTypeName() == ""211 КАСКО КОМФОРТ"" || p.GetProgramTypeName() == ""211 КАСКО КОМФОРТ крос продукт"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,773
774,Mileage,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"" || p.GetInsuranceTypeCode() == ""218"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пробіг"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,774
775,OrantaTravelPaketL,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.Franchises.Count() > 0);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises[0];
			string value = franchise.GetFranchiseValueCaption().ToString();
			Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
			if (value == ""0"" && param != null && param.GetParameterValueCaption().ToString() == ""C"")
			{
				__Result = ""Так"";
			}
		}
	}
}
",,775
776,OrantaTravelPaketM,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.Franchises.Count() > 0);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises[0];
			string value = franchise.GetFranchiseValueCaption().ToString();
			Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
			if (value == ""0"" && param != null && param.GetParameterValueCaption().ToString() == ""A"")
			{
				__Result = ""Так"";
			}
		}
	}
}
",,776
777,OrantaTravelPaketS,"__Result = ""Ні"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && i.Object != null && i.Covers != null);
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers.FirstOrDefault(c => c.Franchises.Count() > 0);
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises[0];
			string value = franchise.GetFranchiseValueCaption().ToString();
			Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
			if (value == ""50"" && param != null && param.GetParameterValueCaption().ToString() == ""A"")
			{
				__Result = ""Так"";
			}
		}
	}
}
",,777
778,EPGCAgreementPrev,"__Result = "" "";
if (__BaseProduct != null)
{
	if (__Product.GetSupplementaryAgreementTypeName() == ""Переоформлення ЕП ЗК"")
	{
		__Result = __BaseProduct.PolisNumber;
	}
}
else
{
	__Result = "" "";
}
",,778
779,EPGCAgreement,"__Result = "" "";
if (__BaseProduct != null)
{
	if (__Product.GetSupplementaryAgreementTypeName() == ""Переоформлення ЕП ЗК"")
	{
		__Result = ""Цей поліс переоформлений з поліса № "" + __BaseProduct.PolisNumber;
	}
}
else
{
	__Result = "" "";
}
",,779
780,IsMULTITRIP,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Тип перебування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""MULTI-TRIP"")
	{
		__Result = ""Так"";
	}
	else
	{
			__Result = ""Ні"";
	}
}
",,780
781,EPOsagoEstateRiskLimit,"__Result = """";
if (__Product.Programs != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName().Trim() == ""Шкода, заподіяна майну потерпілих"" && c.CoverLimit != null));
	if (insObj != null)
	{
		decimal value = insObj.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна майну потерпілих"" && c.CoverLimit != null).CoverLimit.Value;
		__Result = value.ToString(""N0"") + "" ("" + __Context.MoneyPhrase(value, ""UAH"", true) + "")"";
	}
}
",,781
782,EPOsagoLifeHealthRiskLimit,"__Result = """";
if (__Product.Programs != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
{
	Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName().Trim() == ""Шкода, заподіяна життю та здоров'ю"" && c.CoverLimit != null));
	if (insObj != null)
	{
		decimal value = insObj.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна життю та здоров'ю "" && c.CoverLimit != null).CoverLimit.Value;
		__Result = value.ToString(""N0"") + "" ("" + __Context.MoneyPhrase(value, ""UAH"", true) + "")"";
	}
}
",,782
783,InsuranceObjectAddress,"Workflow.DTO.Models.Face insuredFace = (Workflow.DTO.Models.Face)__Product.Programs[0].InsuranceObjects[0].Object;
__Result = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт 8П - сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ОСЦПВНТЗ для фіз особи Партнер Номер 01 НОВИЙ"") || insuredFace.PostAddressObject == null ? insuredFace.Address : insuredFace.PostAddressObject.GetFullAddress();
",,783
784,EPInsuredBirthDate,"__Result = """";
if (__Product.Insurer.Face.Birthdate != null)
{
	__Result = string.Format("", {0}"", ((DateTime)__Product.Insurer.Face.Birthdate).ToShortDateString());
}
",,784
785,InsuredPhoneNumber143,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""143"");
if (program != null && program.InsuranceObjects != null)
{
	Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)program.InsuranceObjects[0].Object;
	__Result = face.PhoneNumber;
}
",,785
786,InsuredEmail143,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""143"");
if (program != null && program.InsuranceObjects != null)
{
	Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)program.InsuranceObjects[0].Object;
	__Result = face.Email;
}
",,786
787,OrantaInsurerIdentificationCodeEDRPOU143,"__Result = """";
if (!string.IsNullOrEmpty(__Product.Insurer.Face.IdentificationCode) && !(__Product.Insurer.Face.IdentificationCode.Substring(0, 1) == ""F""))
{
	__Result = string.Format(""{0}"", __Product.Insurer.Face.IdentificationCode);
}
else
{
	if (!string.IsNullOrEmpty(__Product.Insurer.Face.IdentificationCodeEDRPOU) && !(__Product.Insurer.Face.IdentificationCodeEDRPOU.Substring(0, 1) == ""F""))
	{
		__Result = string.Format(""{0}"", __Product.Insurer.Face.IdentificationCodeEDRPOU);
	}
}
",,787
788,RegisterPlacePolicy143,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""143"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Місце укладання"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
	else
	{
			__Result = """";
	}
}
",,788
789,RegisterPlacePolicy161SV,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""161"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Місце укладання"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
	else
	{
			__Result = """";
	}
}
",,789
790,RenewCrossProductAutoUmbrellaPolisBeginDate,"List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""219 АВТОПАРАСОЛЬКА (без бланку)"");
if (crossProducts == null || crossProducts.Count() == 0)
{
	crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""219 Автопарасолька"");
}
if (crossProducts != null && crossProducts.Count() > 0)
{
	__Result = crossProducts.ElementAt(0).BeginingDate.ToShortDateString();
}
",,790
791,RenewCrossProductAutoUmbrellaPolisNumber,"__Result = """";
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""219 АВТОПАРАСОЛЬКА (без бланку)"");
if (crossProducts == null || crossProducts.Count() == 0)
{
	crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""219 Автопарасолька"");
}
if (crossProducts != null && crossProducts.Count() > 0)
{
	int index = crossProducts.ElementAt(0).PolisNumber.IndexOf(""-"");
	__Result = crossProducts.ElementAt(0).PolisNumber.Substring(index + 1, crossProducts[0].PolisNumber.Length - index - 1);
}
",,791
792,RenewCrossProductAutoUmbrellaPolisSeria,"__Result = """";
List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""219 АВТОПАРАСОЛЬКА (без бланку)"");
if (crossProducts == null || crossProducts.Count() == 0)
{
	crossProducts = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""219 Автопарасолька"");
}
if (crossProducts != null && crossProducts.Count() > 0)
{
	int index = crossProducts.ElementAt(0).PolisNumber.IndexOf(""-"");
	__Result = crossProducts.ElementAt(0).PolisNumber.Substring(0, crossProducts[0].PolisNumber.IndexOf(""-""));
}
",,792
793,RenewAutoUmbrellaProductType,"__Result = """";
List<Workflow.DTO.Models.Product> products = __Context.GetCrossProductsByCrossProductTypeName(__Product, ""219 АВТОПАРАСОЛЬКА (без бланку)"");
__Result = __Context.PrintMarkedPoint(products.Any(p => p.GetProductTypeName() == ""219 АВТОПАРАСОЛЬКА (без бланку)""));
",,793
794,RenewMtplProductType,"__Result = """";
__Result = __Context.PrintMarkedPoint(__Product.GetProductTypeName() != ""219 АВТОПАРАСОЛЬКА (без бланку)"");
",,794
795,InsuredPerson1FullName,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	__Result = string.Format(""{0} {1} {2}"", f.Lastname, f.Firstname, f.Secondname);
}
",,795
796,CrossProductPolicyEndingDate,"Workflow.DTO.Models.Product cross = __Context.GetCrossProduct(__Product);
if (cross != null)
{
	DateTime date = cross.EndingDate.AddSeconds((double)(-1));
	__Result = string.Format(""{0}"", date.ToShortDateString());
}
",,796
797,CrossProductPolisBeginDate,"Workflow.DTO.Models.Product cross = __Context.GetCrossProduct(__Product);
if (cross != null)
{
	__Result = cross.BeginingDate.ToShortDateString();
}
if (string.IsNullOrEmpty(__Result))
{
	List<string> Codes = new List<string>();
	Codes.Add(""233"");
	List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeCodes(__Product, Codes);
	if (crossProducts != null && crossProducts.Count() > 0)
	{
		__Result = crossProducts.ElementAt(0).RegisteredDate.ToShortDateString();
	}
}
",,797
798,RegisterPlacePolicy161,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""161"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Місце укладання"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
	else
	{
			__Result = """";
	}
}
",,798
799,RegisterPlacePolicy162,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""162"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Місце укладання"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
	else
	{
			__Result = """";
	}
}
",,799
800,TotalPayments,"__Result = """";
if (__Product.Programs != null)
{
	decimal payment = __Product.PaymentPeriods.Sum(p => p.PlanedPayments != null ? p.PlanedPayments.Sum(pp => pp.Value) : (decimal)0);
	__Result = payment.ToString(""N2"");
}
",,800
801,TotalPaymentInWords,"decimal value = __Product.PaymentPeriods.Sum(p => p.PlanedPayments != null ? p.PlanedPayments.Sum(pp => pp.Value) : (decimal)0);
if (value != null)
{
	__Result = __Context.MoneyPhrase(value, ""UAH"", false);
}
else
{
	__Result = """";
}
",,801
802,InsuredPerson1DocIssuer,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	Workflow.DTO.Models.Document doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
	if (doc == null)
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
	}
	if (doc == null)
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення водія"");
	}
	if (doc == null && !f.GetIsResident())
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт іноземного громадянина"");
	}
	if (doc != null && doc.IssuedDate != null)
	{
		__Result = doc.IssuedBy + "" "" + (doc.IssuedDate.Value != null ? doc.IssuedDate.Value.ToString(""dd MM yyyy"") : """");
	}
}
",,802
803,InsuredPerson1DocNumber,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	Workflow.DTO.Models.Document doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
	if (doc == null)
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
	}
	if (doc == null)
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення водія"");
	}
	if (doc == null && !f.GetIsResident())
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт іноземного громадянина"");
	}
	if (doc != null && doc.Number != null)
	{
		int index = doc.Number.IndexOf(""-"");
		__Result = doc.Number.Substring(index + 1, doc.Number.Length - index - 1);
	}
}
",,803
804,InsuredPerson1DocSeria,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	Workflow.DTO.Models.Document doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт"");
	if (doc == null)
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
	}
	if (doc == null)
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Посвідчення водія"");
	}
	if (doc == null && !f.GetIsResident())
	{
		doc = f.Documents.FirstOrDefault(i => i.GetDocumentTypeName() == ""Паспорт іноземного громадянина"");
	}
	if (doc != null && doc.Number != null)
	{
		__Result = doc.Number.IndexOf(""-"") != -1 ? doc.Number.Substring(0, doc.Number.IndexOf(""-"")) : """";
	}
}
",,804
805,InsuredPerson1Initials,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	__Result = string.Format(""{0} {1}.{2}."", f.Lastname, f.Firstname.Remove(1, f.Firstname.Length - 1), f.Secondname.Remove(1, f.Secondname.Length - 1));
}
",,805
806,InsuredEmail,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (program != null && program.InsuranceObjects != null)
{
	Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)program.InsuranceObjects[0].Object;
	__Result = face.Email;
}
",,806
807,InsuredPhoneNumber,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (program != null && program.InsuranceObjects != null)
{
	Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)program.InsuranceObjects[0].Object;
	__Result = face.PhoneNumber;
}
",,807
808,Program153InsuranceSumInWords,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""153"");
if (program != null)
{
	__Result = __Context.MoneyPhrase(program.CostValue, ""UAH"", false);
}
else
{
	__Result = """";
}
",,808
809,Program152InsuranceSumInWords,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (program != null)
{
	__Result = __Context.MoneyPhrase(program.CostValue, ""UAH"", false);
}
else
{
	__Result = """";
}
",,809
810,Program153InsuranceSum,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""153"");
if (program != null)
{
	__Result = program.CostValue.ToString(""N2"");
}
",,810
811,Program152InsuranceSum,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (program != null)
{
	__Result = program.CostValue.ToString(""N2"");
}
",,811
812,RegisterPlacePolicy,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Місце укладання"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
	else
	{
			__Result = """";
	}
}
",,812
813,TotalInsuranceSumInWords,"decimal value = __Product.InsuranceSumUkr;
if (value != null)
{
	__Result = __Context.MoneyPhrase(value, ""UAH"", false);
}
else
{
	__Result = """";
}
",,813
814,InsuranceSumTotal,"__Result = __Product.InsuranceSumUkr.ToString(""N2"");
",,814
815,NumberofPolicy,"__Result = __Product.PolisNumber;
",,815
816,ContractNumberGeneral,"__Result = """";
if (__Product.Contract != null)
{
	if (!string.IsNullOrEmpty(__Product.Contract.ContractNumber))
	{
		__Result = __Product.Contract.ContractNumber;
	}
}
",,816
817,PaymentExpresPlus6,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес +"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays < 200)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,817
818,PaymentExpresPlus1,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес +"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays > 200)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,818
819,PaymentExpres1,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays > 200)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,819
820,PaymentExpres6,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays < 200)
		{
			__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Sum(p => p.Value)).ToString(""N2"");
		}
	}
}
",,820
821,RateExpresPlus6,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес +"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays < 200)
		{
			decimal value = prog.InsuranceRate;
			__Result = value.ToString(""N3"");
		}
	}
}
",,821
822,RateExpresPlus1,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес +"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays > 200)
		{
			decimal value = prog.InsuranceRate;
			__Result = value.ToString(""N3"");
		}
	}
}
",,822
823,RateExpres1,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays > 200)
		{
			decimal value = prog.InsuranceRate;
			__Result = value.ToString(""N3"");
		}
	}
}
",,823
824,RateExpres6,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays < 200)
		{
			decimal value = prog.InsuranceRate;
			__Result = value.ToString(""N3"");
		}
	}
}
",,824
825,ExpresPlus6,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес +"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays < 200)
		{
			__Result = ""Так"";
		}
	}
}
",,825
826,ExpresPlus1,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес +"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays > 200)
		{
			__Result = ""Так"";
		}
	}
}
",,826
827,Expres1,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays > 200)
		{
			__Result = ""Так"";
		}
	}
}
",,827
828,Expres6,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""152"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Експрес"")
	{
		double durationMillis = DateTime.Subtract(__Product.EndingDate, __Product.BeginingDate);
		int durationDays = (long)durationMillis / 1000 / 60 / 60 / 24;
		if (durationDays < 200)
		{
			__Result = ""Так"";
		}
	}
}
",,828
829,RenewTypeNewRegistrationCertificate,"__Result = """";
Workflow.DTO.Models.ProgramParameterValue parameter = __Product.Programs[0].Parameters.FirstOrDefault(p => p.GetParameterName() == ""Тип переоформлення"");
__Result = __Context.PrintMarkedPoint(parameter != null && parameter.GetParameterValueCaption().ToString() == ""Заміна техпаспорту"");
",,829
830,RenewTypeCorrection,"__Result = """";
Workflow.DTO.Models.ProgramParameterValue parameter = __Product.Programs[0].Parameters.FirstOrDefault(p => p.GetParameterName() == ""Тип переоформлення"");
__Result = __Context.PrintMarkedPoint(parameter != null && parameter.GetParameterValueCaption().ToString() == ""Виправлення помилок"");
",,830
831,AutoUmdrellaAgreement,"__Result = "" "";
if (__BaseProduct != null)
{
	if (__Product.GetSupplementaryAgreementTypeName() == ""Доп.Соглашение"")
	{
		__Result = ""1.1. Сторони домовились викласти договір № "" + __BaseProduct.PolisNumber + ""  у новій редакції."";
	}
}
else
{
	__Result = "" "";
}
",,831
832,AutoUmbrellaVehicleRegistrationNumber,"__Result = """";
int programIndex = 0;
while (programIndex < __Product.Programs.Count() && string.IsNullOrEmpty(__Result))
{
	Workflow.DTO.Models.Program program = __Product.Programs[programIndex];
	int insuranceObjectIndex = 0;
	while (insuranceObjectIndex < program.InsuranceObjects.Count() && string.IsNullOrEmpty(__Result))
	{
		Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects[insuranceObjectIndex];
		if (insuranceObject.GetInsuranceObjectTypeName() == ""Об’єкт страхування"" && insuranceObject.Object != null && insuranceObject.Object.GetObjectTypeName() == ""Наземний транспортний засіб"")
		{
			Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)insuranceObject.Object;
			if (vehicle != null && vehicle.RegistrationNumber != null)
			{
				__Result = vehicle.RegistrationNumber;
			}
		}
		insuranceObjectIndex = insuranceObjectIndex + 1;
	}
	programIndex = programIndex + 1;
}
",,832
833,BaseProductOrantaMtplDocumentNumber,"Workflow.DTO.Models.Document doc = BaseProductGetMtplInsurerDocument;
__Result = """";
if (doc != null && doc.Number != null)
{
	__Result = doc.Number.IndexOf(""-"") != -1 ? doc.Number.Substring(doc.Number.IndexOf(""-"") + 1, doc.Number.Length - doc.Number.IndexOf(""-"") - 1) : doc.Number;
}
",,833
834,BaseProductOrantaMtplDocumentSerie,"Workflow.DTO.Models.Document doc = BaseProductGetMtplInsurerDocument;
__Result = """";
if (doc != null && doc.Number != null)
{
	__Result = doc.Number.IndexOf(""-"") != -1 ? doc.Number.Substring(0, doc.Number.IndexOf(""-"")) : """";
}
",,834
835,BaseProductInsurerAddress,"__Result = __BaseProduct.Insurer.Face.PostAddressObject != null ? __BaseProduct.Insurer.Face.PostAddressObject.GetFullAddress() : __BaseProduct.Insurer.Face.Address;
",,835
836,BaseProductInsurerSecondName,"__Result = ((Workflow.DTO.Models.Face)__BaseProduct.Insurer.Face).Secondname;
",,836
837,BaseProductInsurerFirstName,"__Result = ((Workflow.DTO.Models.Face)__BaseProduct.Insurer.Face).Firstname;
",,837
838,BaseProductInsurerLastName,"__Result = ((Workflow.DTO.Models.Face)__BaseProduct.Insurer.Face).Lastname;
",,838
839,BaseProductVehicleNumber,"__Result = ((Workflow.DTO.Models.Vehicle)__BaseProduct.Programs[0].InsuranceObjects[0].Object).RegistrationNumber;
",,839
840,BaseProductVehicleBodyNumber,"__Result = ((Workflow.DTO.Models.Vehicle)__BaseProduct.Programs[0].InsuranceObjects[0].Object).BodyNumber;
",,840
841,BaseProductPolisNumber,"__Result = """";
int index = __BaseProduct.PolisNumber.IndexOf(""-"");
if (index > 0)
{
	__Result = __BaseProduct.PolisNumber.Substring(index + 1, __BaseProduct.PolisNumber.Length - index - 1);
}
else
{
	__Result = __BaseProduct.PolisNumber;
}
",,841
842,BaseProductPolisSerie,"__Result = """";
int index = __BaseProduct.PolisNumber.IndexOf(""-"");
if (index > 0)
{
	__Result = __BaseProduct.PolisNumber.Substring(0, index);
}
",,842
843,BaseProductRegisteredDate,"__Result = __BaseProduct.RegisteredDate.ToShortDateString();
",,843
844,InsurerEmail,"__Result = """";
if (__Product.Insurer.Face != null)
{
	__Result = __Product.Insurer.Face.Email;
}
",,844
845,OrantaTravelPeriodDays,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Строк дії договору"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,845
846,CrossProductVehicleRegistrationNumber,"__Result = """";
Workflow.DTO.Models.Product cross = __Context.GetCrossProduct(__Product);
if (cross != null)
{
	__Result = ((Workflow.DTO.Models.Vehicle)cross.Programs[0].InsuranceObjects[0].Object).RegistrationNumber;
}
",,846
847,InsurerMobilePhoneNumber,"__Result = """";
if (__Product.Insurer.Face != null)
{
	__Result = __Product.Insurer.Face.MobilePhoneNumber;
}
",,847
848,EPAgreement,"__Result = "" "";
if (__BaseProduct != null)
{
	if (__Product.GetSupplementaryAgreementTypeName() == ""Переоформлення ЕП"")
	{
		__Result = ""Переоформлений, на заміну поліса № "" + __BaseProduct.PolisNumber;
	}
}
else
{
	__Result = "" "";
}
",,848
849,EOTKDate,"Workflow.DTO.Models.Program prog = __Product.Programs[0];
__Result = """";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Дата наступного ОТК"");
	if (param != null)
	{
		string value = param.GetParameterValueCaption().ToString();
		__Result = value.Substring(0, value.IndexOf("" ""));
	}
}
",,849
850,EAllMonthUse,"__Result = ""Так"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""233"" || p.GetInsuranceTypeCode() == ""234"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(t => t.GetParameterCaption() == ""Реєстрація ТЗ"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Зареєстровано в україні, але використовується сезонно"")
	{
		string result = ""Ні: "";
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 1 Січень"") != null)
		{
			result = result + ""1 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 2 Лютий"") != null)
		{
			result = result + ""2 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 3 Березень"") != null)
		{
			result = result + ""3 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 4 Квітень"") != null)
		{
			result = result + ""4 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 5 Травень"") != null)
		{
			result = result + ""5 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 6 Червень"") != null)
		{
			result = result + ""6 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 7 Липень"") != null)
		{
			result = result + ""7 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 8 Серпень"") != null)
		{
			result = result + ""8 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == "" 9 Вересень"") != null)
		{
			result = result + ""9 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == ""10 Жовтень"") != null)
		{
			result = result + ""10 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == ""11 Листопад"") != null)
		{
			result = result + ""11 "";
		}
		else
		{
					result = result + ""X "";
		}
		if (program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Період використання транспортного засобу"" && p.GetParameterValueCaption().ToString() == ""12 Грудень"") != null)
		{
			result = result + ""12 "";
		}
		else
		{
					result = result + ""X"";
		}
		__Result = result;
	}
}
",,850
851,SMSCode,"__Result = """";
Workflow.DTO.Models.EntityAttribute attribute = __Product.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeName() == ""Разовий ідентифікатор"");
if (attribute != null)
{
	__Result = attribute.Value.ToString();
}
else
{
	__Result = __Product.AgentReportNumber;
}
",,851
852,CrossProductPolisSeria,"__Result = """";
Workflow.DTO.Models.Product cross = __Context.GetCrossProduct(__Product);
if (cross != null)
{
	Workflow.DTO.Models.Blank blank = cross.Blanks.FirstOrDefault(b => b.GetBlankTypeName() == ""Поліс ОСЦПВВ н/з-2011р."");
	if (blank != null)
	{
		int index = blank.Number.IndexOf(""-"");
		__Result = blank.Number.Substring(0, blank.Number.IndexOf(""-""));
	}
}
else
{
	Workflow.DTO.Models.Program prog = __Product.Programs[0];
	if (prog != null)
	{
		Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
		if (param != null)
		{
			__Result = """";
		}
	}
}
if (string.IsNullOrEmpty(__Result))
{
	List<string> Codes = new List<string>();
	Codes.Add(""233"");
	List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeCodes(__Product, Codes);
	if (crossProducts != null && crossProducts.Count() > 0)
	{
		int indexC = crossProducts.ElementAt(0).PolisNumber.IndexOf(""-"");
		__Result = crossProducts.ElementAt(0).PolisNumber.Substring(0, crossProducts[0].PolisNumber.IndexOf(""-""));
	}
}
",,852
853,CrossProductPolisNumber,"__Result = """";
Workflow.DTO.Models.Product cross = __Context.GetCrossProduct(__Product);
if (cross != null)
{
	Workflow.DTO.Models.Blank blank = cross.Blanks.FirstOrDefault(b => b.GetBlankTypeName() == ""Поліс ОСЦПВВ н/з-2011р."");
	if (blank != null)
	{
		int index = blank.Number.IndexOf(""-"");
		__Result = blank.Number.Substring(index + 1, blank.Number.Length - index - 1);
	}
	else
	{
			__Result = cross.PolisNumber;
	}
}
else
{
	Workflow.DTO.Models.Program prog = __Product.Programs[0];
	if (prog != null)
	{
		Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
		if (param != null)
		{
			__Result = param.ParameterValue.ToString();
		}
	}
}
if (string.IsNullOrEmpty(__Result))
{
	List<string> Codes = new List<string>();
	Codes.Add(""233"");
	List<Workflow.DTO.Models.Product> crossProducts = __Context.GetCrossProductsByCrossProductTypeCodes(__Product, Codes);
	if (crossProducts != null && crossProducts.Count() > 0)
	{
		int indexC = crossProducts.ElementAt(0).PolisNumber.IndexOf(""-"");
		if (indexC != -1)
		{
			__Result = crossProducts.ElementAt(0).PolisNumber.Substring(indexC + 1, crossProducts[0].PolisNumber.Length - indexC - 1);
		}
		else
		{
					__Result = crossProducts.ElementAt(0).PolisNumber;
		}
	}
}
",,853
854,AssistanceNumber,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs[0];
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""№ картки «ASSISTANCE для Вас 24/7"");
	if (param != null)
	{
		__Result = param.ParameterValue.ToString();
	}
}
",,854
855,OsagoLifeHealthRiskLimit,"__Result = """";
Workflow.DTO.Models.Blank blank = __Product.Blanks.FirstOrDefault(b => b.GetBlankTypeName() == ""Поліс ОСЦПВВ н/з-2011р."");
if (blank != null)
{
	int index = blank.Number.IndexOf(""-"");
	string seria = blank.Number.Substring(0, index);
	int number = int.Parse(blank.Number.Substring(index + 1, blank.Number.Length - index - 1));
	if (!(seria == ""АО"" && number >= 6870001 && number <= 7030000))
	{
		if (__Product.Programs != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
		{
			Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName() == ""Шкода, заподіяна життю та здоров'ю "" && c.CoverLimit != null));
			if (insObj != null)
			{
				decimal value = insObj.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна життю та здоров'ю "" && c.CoverLimit != null).CoverLimit.Value;
				__Result = value.ToString(""N0"") + "" ("" + __Context.MoneyPhrase(value, ""UAH"", true) + "")"";
			}
		}
	}
}
",,855
856,OsagoEstateRiskLimit,"__Result = """";
Workflow.DTO.Models.Blank blank = __Product.Blanks.FirstOrDefault(b => b.GetBlankTypeName() == ""Поліс ОСЦПВВ н/з-2011р."");
if (blank != null)
{
	int index = blank.Number.IndexOf(""-"");
	string seria = blank.Number.Substring(0, index);
	int number = int.Parse(blank.Number.Substring(index + 1, blank.Number.Length - index - 1));
	if (!(seria == ""АО"" && number >= 6870001 && number <= 7030000))
	{
		if (__Product.Programs != null && __Product.Programs.Count() > 0 && __Product.Programs[0].InsuranceObjects != null)
		{
			Workflow.DTO.Models.InsuranceObject insObj = __Product.Programs[0].InsuranceObjects.FirstOrDefault(io => io.Covers != null && io.Covers.Any(c => c.GetRiskName() == ""Шкода, заподіяна майну потерпілих"" && c.CoverLimit != null));
			if (insObj != null)
			{
				decimal value = insObj.Covers.FirstOrDefault(c => c.GetRiskName() == ""Шкода, заподіяна майну потерпілих"" && c.CoverLimit != null).CoverLimit.Value;
				__Result = value.ToString(""N0"") + "" ("" + __Context.MoneyPhrase(value, ""UAH"", true) + "")"";
			}
		}
	}
}
",,856
857,VehicleOwnerRegistrationPlace,"__Result = """";
if (__Product.Programs != null && __Product.Programs[0].InsuranceObjects != null && __Product.Programs[0].InsuranceObjects.Count() > 0 && __Product.Programs[0].InsuranceObjects[0].Object != null)
{
	Workflow.DTO.Models.ProgramParameterValue zone = __Product.Programs[0].Parameters.FirstOrDefault(p => p.GetParameterName() == ""Реєстрація ТЗ"");
	Workflow.DTO.Models.Vehicle vehicle = (Workflow.DTO.Models.Vehicle)__Product.Programs[0].InsuranceObjects[0].Object;
	if (zone != null && zone.GetParameterValueCaption().ToString() == ""Зареєстровано не в Україні"")
	{
		__Result = ""За межами України"";
	}
	if (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Агрегатор 30 ФО"")
	{
		__Result = vehicle.Address;
	}
	else
	{
			__Result = vehicle.PostAddressObject != null && !string.IsNullOrEmpty(vehicle.PostAddressObject.GetFullSettlementName()) ? vehicle.PostAddressObject.GetFullSettlementName() : vehicle.Address;
	}
}
",,857
858,InsurerAddress,"__Result = __Product.ProductPermissions != null && __Product.ProductPermissions.Count() > 0 && (__Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП Стандарт 8П - сайт"" || __Product.ProductPermissions[0].GetAgentPermissionNumber() == ""ЕП ОСЦПВНТЗ для фіз особи Партнер Номер 01 НОВИЙ"") || __Product.Insurer.Face.PostAddressObject == null ? __Product.Insurer.Face.Address : __Product.Insurer.Face.PostAddressObject.GetFullAddress();
",,858
859,InsuredPhoneNtCrossed,"__Result = """";
if (__Product.Insurer.Face != null)
{
	if (__Product.Insurer.Face.EntityAttributes != null)
	{
		Workflow.DTO.Models.EntityAttribute attribute = __Product.Insurer.Face.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Телефон Страхувальника для врегулювання страхового випадку"");
		if (attribute != null)
		{
			__Result = attribute.GetValueCaption() != null ? attribute.GetValueCaption().ToString() : """";
		}
		else
		{
					if (!string.IsNullOrEmpty(__Product.Insurer.Face.PhoneNumber))
			{
				__Result = __Product.Insurer.Face.PhoneNumber;
			}
		}
	}
}
",,859
860,K10EP,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""233"" || p.GetInsuranceTypeCode() == ""234"");
if (program != null && program.Coefficients.Count() > 8)
{
	__Result = program.Coefficients[8].Value.ToString(""N2"");
}
",,860
861,AllMonthUse,"__Result = ""Так"";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""233"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Реєстрація ТЗ"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""Зареєстровано в україні, але використовується сезонно"")
	{
		__Result = ""Ні"";
	}
}
",,861
862,PaymentisnotParts,"__Result = __Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() == 1 ? ""так"" : ""ні"";
",,862
863,PaymentinParts,"__Result = __Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() != 1 ? ""так"" : ""ні"";
",,863
864,PaymentPeriodsCount,"__Result = __Product.PaymentPeriods == null ? ""0"" : __Product.PaymentPeriods.Count().ToString();
",,864
865,InsurProgram,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""151"");
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Програма  страхування"");
	if (param != null && param.GetParameterValueCaption() != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,865
866,InsuredBirthDayLocalized,"__Result = __Product.Insurer.Face.Birthdate != null ? __Product.Insurer.Face.Birthdate.Value.ToShortDateString() : ""-----"";
",,866
867,GeneralContractNumber,"__Result = __Product.Contract != null ? __Product.Contract.ContractNumber : ""-----"";
",,867
868,InsurerMobilPhone,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs[0];
if (prog != null && __Product.Insurer.Face != null && __Product.Insurer.Face.EntityAttributes != null)
{
	Workflow.DTO.Models.EntityAttribute attribute = __Product.Insurer.Face.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Телефон Страхувальника для врегулювання страхового випадку"");
	if (attribute != null)
	{
		__Result = attribute.GetValueCaption() != null ? attribute.GetValueCaption().ToString() : """";
	}
}
",,868
869,UmbrellaOTPLSummS50,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)50000)
		{
			__Result = ""Так"";
		}
	}
}
",,869
870,UmbrellaOTPLSummS100,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)100000)
		{
			__Result = ""Так"";
		}
	}
}
",,870
871,UmbrellaOTPLSummM250,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)250000)
		{
			__Result = ""Так"";
		}
	}
}
",,871
872,UmbrellaOTPLSummM100,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)100000)
		{
			__Result = ""Так"";
		}
	}
}
",,872
873,UmbrellaOTPLSummL500,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)500000)
		{
			__Result = ""Так"";
		}
	}
}
",,873
874,UmbrellaOTPLSummL300,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		Workflow.DTO.Models.InsuranceObject insObject = prog.InsuranceObjects.FirstOrDefault(io => io.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
		if (insObject != null && insObject.InsuranceSum == (decimal)300000)
		{
			__Result = ""Так"";
		}
	}
}
",,874
875,UmbrellaNumberMtpl,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs[0];
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
	if (param != null)
	{
		string number = param.ParameterValue.ToString();
		__Result = number.Substring(2, number.Length - 2).Replace(""-"", """");
	}
}
",,875
876,UmbrellaSeriaMtpl,"__Result = """";
Workflow.DTO.Models.Program prog = __Product.Programs[0];
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Поліс ОСЦПВВНТЗ"");
	if (param != null)
	{
		__Result = param.ParameterValue.ToString().Substring(0, 2);
	}
}
",,876
877,UmbrellaRoadPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,877
878,UmbrellaOTPLPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,878
879,UmbrellaCaskoPayment,"__Result = ""---"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	if (__Product.PaymentPeriods != null && __Product.PaymentPeriods.Count() > 0)
	{
		__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
	}
}
",,879
880,UmbrellaCaskoPartsPaym,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Оплата частинами"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,880
881,UmbrellaRoadPaketS,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""Так"";
	}
}
",,881
882,UmbrellaRoadPaketM,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		__Result = ""Так"";
	}
}
",,882
883,UmbrellaRoadPaketL,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		__Result = ""Так"";
	}
}
",,883
884,UmbrellaOTPLPaketS,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""Так"";
	}
}
",,884
885,UmbrellaOTPLPaketM,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		__Result = ""Так"";
	}
}
",,885
886,UmbrellaOTPLPaketL,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		__Result = ""Так"";
	}
}
",,886
887,UmbrellaCaskoPaketS,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «S»"")
	{
		__Result = ""Так"";
	}
}
",,887
888,UmbrellaCaskoPaketM,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «M»"")
	{
		__Result = ""Так"";
	}
}
",,888
889,UmbrellaCaskoPaketL,"__Result = ""Ні"";
Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(p => p.GetParameterCaption() == ""Пакет"");
	if (param != null && param.GetParameterValueCaption().ToString() == ""ПАКЕТ «L»"")
	{
		__Result = ""Так"";
	}
}
",,889
890,UmbrellaRoadRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""158"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,890
891,UmbrellaOTPLRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""247"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,891
892,UmbrellaCaskoRate,"Workflow.DTO.Models.Program prog = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""219"");
__Result = ""---"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N3"");
}
",,892
893,OTKDate,"Workflow.DTO.Models.Program prog = __Product.Programs[0];
__Result = """";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Дата наступного ОТК"");
	if (param != null)
	{
		DateTime date = DateTime.Parse(param.GetParameterValueCaption().ToString());
		__Result = date.Day.ToString(""00"") + "" "" + date.Month.ToString(""00"") + ""   "" + date.Year.ToString().Substring(2, 2);
	}
}
",,893
894,InsurerForeignPassport,"__Result = ""----------"";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID != 2)
	{
		List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
		int i = 0;
		int maxId = -1;
		Workflow.DTO.Models.Document document;
		while (i < documents.Count())
		{
			if (documents[i].id > maxId)
			{
				document = documents[i];
				maxId = documents[i].id;
			}
			i = i + 1;
		}
		if (document != null)
		{
			__Result = document.Number;
		}
	}
}
",,894
895,TravelInsuranceObjectAddress,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.EntityAttribute attribute = liob[0].Object.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Адреса англійською мовою"");
	if (attribute != null)
	{
		__Result = attribute.GetValueCaption() != null ? attribute.GetValueCaption().ToString() : """";
	}
}
",,895
896,InsurerAddressEnglish,"__Result = """";
Workflow.DTO.Models.Program program = __Product.Programs.FirstOrDefault(p => p.GetInsuranceTypeCode() == ""141"");
if (program != null && __Product.Insurer.Face != null && __Product.Insurer.Face.EntityAttributes != null)
{
	Workflow.DTO.Models.EntityAttribute attribute = __Product.Insurer.Face.EntityAttributes.FirstOrDefault(ea => ea.GetAttributeCaption() == ""Адреса англійською мовою"");
	if (attribute != null)
	{
		__Result = attribute.GetValueCaption() != null ? attribute.GetValueCaption().ToString() : """";
	}
}
",,896
897,OrantaSticker,"if (__Product.Blanks.Where(b => b.GetBlankTypeName() == ""Спецзнак «ОСЦПВВ»"" || b.GetBlankTypeName() == ""Спецзнак ЦВ н/з-2011р"" || b.GetBlankTypeName() == ""Спецзнак ЦВ н/з-2010р"") != null)
{
	string result = ""Виданий спеціальний знак: "" + __Product.Blanks.FirstOrDefault(b => b.GetBlankTypeName() == ""Спецзнак «ОСЦПВВ»"" || b.GetBlankTypeName() == ""Спецзнак ЦВ н/з-2011р"" || b.GetBlankTypeName() == ""Спецзнак ЦВ н/з-2010р"").Number;
	__Result = result.Replace(""-"", ""№"");
}
",,897
898,OrantaRegisteredDate,"__Result = __Product.RegisteredDate.Day.ToString(""00"") + "" "" + __Product.RegisteredDate.Month.ToString(""00"") + "" "" + __Product.RegisteredDate.Year.ToString().Substring(2, 2);
",,898
899,OrantaPaymentDate,"DateTime paymentDate = DateTime.GetNow();
__Result = paymentDate.Hour.ToString(""00"") + "" "" + paymentDate.Minute.ToString(""00"") + "" "" + paymentDate.Day.ToString(""00"") + "" "" + paymentDate.Month.ToString(""00"") + ""   "" + paymentDate.Year.ToString().Substring(2, 2);
",,899
900,OrantaEndDateYear,"__Result = __Product.EndingDate.AddMinutes((double)(-1)).Year.ToString().Substring(2, 2);
",,900
901,OrantaBeginDateYear,"__Result = __Product.BeginingDate.Year.ToString().Substring(2, 2);
",,901
902,InsuranceTypeCode,"__Result = __Product.Programs[0].GetInsuranceTypeCode();
",,902
903,OrantaInsurerIdentificationCodeEDRPOU,"__Result = """";
if (!string.IsNullOrEmpty(__Product.Insurer.Face.IdentificationCode) && !(__Product.Insurer.Face.IdentificationCode.Substring(0, 1) == ""F""))
{
	__Result = string.Format("", {0}"", __Product.Insurer.Face.IdentificationCode);
}
else
{
	if (!string.IsNullOrEmpty(__Product.Insurer.Face.IdentificationCodeEDRPOU) && !(__Product.Insurer.Face.IdentificationCodeEDRPOU.Substring(0, 1) == ""F""))
	{
		__Result = string.Format("", {0}"", __Product.Insurer.Face.IdentificationCodeEDRPOU);
	}
}
",,903
904,OrantaInsuredBirthDate,"__Result = """";
if (__Product.Insurer.Face.Birthdate != null)
{
	__Result = string.Format("", {0}"", ((DateTime)__Product.Insurer.Face.Birthdate).ToShortDateString());
}
",,904
905,AgentReportNumber,"__Result = __Product.AgentReportNumber;
",,905
906,OrantaTravelAccidentRate,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N5"");
}
",,906
907,OrantaTravelMedRate,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N5"");
}
",,907
908,OrantaTravelAccidentPaymentUAH,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
}
",,908
909,OrantaTravelMedPaymentUAH,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
}
",,909
910,InsurerInternalPassport,"__Result = ""----------"";
Workflow.DTO.Models.Face face = __Product.Insurer.Face;
if (face != null)
{
	if (face.PersonTypeID != 2)
	{
		List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Паспорт"" || i.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"");
		int i = 0;
		int maxId = -1;
		Workflow.DTO.Models.Document document;
		while (i < documents.Count())
		{
			if (documents[i].id > maxId)
			{
				document = documents[i];
				maxId = documents[i].id;
			}
			i = i + 1;
		}
		if (document != null)
		{
			__Result = document.Number;
		}
	}
}
",,910
911,OrantaTravelTotalPaymentSumCurrency,"Workflow.DTO.Models.Program prog = GetProgramMed;
string current = """";
decimal sum = 0;
Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
decimal calculatedPayment = 0;
Workflow.DTO.Models.ProgramParameterValue paramCurr;
__Result = """";
if (prog != null)
{
	paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в EURO"");
	if (paramCurr != null)
	{
		sum = (decimal)paramCurr.GetParameterValueCaption();
	}
	else
	{
			paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в USD"");
		if (paramCurr != null)
		{
			sum = (decimal)paramCurr.GetParameterValueCaption();
		}
		else
		{
					if (paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
			{
				calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
				sum = __Context.ExchangePrimaryMoney(calculatedPayment, ""USD"", __Product.RegisteredDate);
			}
			if (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR"")
			{
				calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
				sum = __Context.ExchangePrimaryMoney(calculatedPayment, ""EUR"", __Product.RegisteredDate);
			}
		}
	}
}
prog = GetProgramAccident;
if (prog != null)
{
	paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в EURO"");
	if (paramCurr != null)
	{
		sum = sum + (decimal)paramCurr.GetParameterValueCaption();
	}
	else
	{
			paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в USD"");
		if (paramCurr != null)
		{
			sum = sum + (decimal)paramCurr.GetParameterValueCaption();
		}
		else
		{
					if (paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
			{
				calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
				sum = sum + __Context.ExchangePrimaryMoney(calculatedPayment, ""USD"", __Product.RegisteredDate);
			}
			if (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR"")
			{
				calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
				sum = sum + __Context.ExchangePrimaryMoney(calculatedPayment, ""EUR"", __Product.RegisteredDate);
			}
		}
	}
}
prog = GetProgramLuggage;
if (prog != null)
{
	paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в EURO"");
	if (paramCurr != null)
	{
		sum = sum + (decimal)paramCurr.GetParameterValueCaption();
	}
	else
	{
			paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в USD"");
		if (paramCurr != null)
		{
			sum = sum + (decimal)paramCurr.GetParameterValueCaption();
		}
		else
		{
					if (paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
			{
				calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
				sum = sum + __Context.ExchangePrimaryMoney(calculatedPayment, ""USD"", __Product.RegisteredDate);
			}
			if (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR"")
			{
				calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
				sum = sum + __Context.ExchangePrimaryMoney(calculatedPayment, ""EUR"", __Product.RegisteredDate);
			}
		}
	}
}
__Result = sum.ToString(""N2"");
",,911
912,LuggagePaymentSumDollar,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null)
	{
		__Result = paramCurr.GetParameterValueCaption().ToString();
	}
	else
	{
			if (paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
		{
			decimal calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
			__Result = __Context.ExchangePrimaryMoney(calculatedPayment, ""USD"", __Product.RegisteredDate).ToString(""N2"");
		}
	}
}
",,912
913,LuggagePaymentSumEURO,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null)
	{
		__Result = paramCurr.GetParameterValueCaption().ToString();
	}
	else
	{
			if (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR"")
		{
			decimal calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
			__Result = __Context.ExchangePrimaryMoney(calculatedPayment, ""EUR"", __Product.RegisteredDate).ToString(""N2"");
		}
	}
}
",,913
914,LuggageInsuranceSumDollar,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString()) * prog.InsuranceObjects.Count();
		__Result = resultSum.ToString();
	}
}
",,914
915,LuggageInsuranceSumEURO,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR""))
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString()) * prog.InsuranceObjects.Count();
		__Result = resultSum.ToString(""N0"");
	}
}
",,915
916,OrantaTravelTotalPaymentUAH,"decimal value = 0;
Workflow.DTO.Models.Program prog = GetProgramMed;
if (prog != null)
{
	value = value + (decimal)__Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value));
}
prog = GetProgramAccident;
if (prog != null)
{
	value = value + (decimal)__Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value));
}
prog = GetProgramLuggage;
if (prog != null)
{
	value = value + (decimal)__Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value));
}
__Result = value.ToString(""N2"");
",,916
917,OrantaTravelLuggagePaymentUAH,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	__Result = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(p => p.ProgramGID == prog.gid).Sum(p => p.Value)).ToString(""N2"");
}
",,917
918,OrantaTravelLuggageRate,"Workflow.DTO.Models.Program prog = GetProgramLuggage;
__Result = ""-----"";
if (prog != null)
{
	decimal value = prog.InsuranceRate;
	__Result = value.ToString(""N5"");
}
",,918
919,OrantaTravelCoverPeriodDays,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Тип перебування"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""Безперервний"")
		{
			Workflow.DTO.Models.ProgramParameterValue paramPeriod = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Кількість днів перебування за кордоном"");
			if (paramPeriod != null)
			{
				__Result = paramPeriod.GetParameterValueCaption().ToString();
			}
		}
		else
		{
					Workflow.DTO.Models.ProgramParameterValue paramPeriod2 = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Кількість днів перебування за кордоном (Multi-Trip)"");
			if (paramPeriod2 != null)
			{
				__Result = paramPeriod2.GetParameterValueCaption().ToString();
			}
		}
	}
}
",,919
920,OrantaTravelContractPeriodDays,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Тип перебування"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""Безперервний"")
		{
			Workflow.DTO.Models.ProgramParameterValue paramPeriod = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Строк дії договору"");
			if (paramPeriod != null)
			{
				__Result = paramPeriod.GetParameterValueCaption().ToString();
			}
		}
		else
		{
					__Result = ""365"";
		}
	}
}
",,920
921,OrantaTravelSpecialConditions,"__Result = ""Згідно з цим Договором Страховик відшкодовує витрати, пов'язані з невідкладним станом Застрахованої особи внаслідок SARS-CoV-2 (COVID-19)/ According to this Contract the Insurer reimburses the expenses, related to emergency state of the Insured person due to SARS-CoV-2 (COVID-19)"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param1 = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Застрахована особа виїжджає до країн Шенгенської зони"");
	if (param1 != null)
	{
		if (param1.GetParameterValueCaption().ToString() == ""Так"")
		{
			__Result = ""«Рішення Ради ЄС 2004 EG щодо медичного страхування подорожуючих осіб. Згідно з цим Договором Страховик відшкодовує витрати, пов'язані з невідкладним станом Застрахованої особи внаслідок SARS-CoV-2 (COVID-19) /The insurance protection is provided in accordance with the Decision of the Council of European Union 2004 EC concerning travel medical insurance». According to this Contract the Insurer reimburses the expenses, related to emergency state of the Insured person due to SARS-CoV-2 (COVID-19)"";
		}
	}
	Workflow.DTO.Models.ProgramParameterValue param2 = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Програма  страхування"");
	if (param2 != null)
	{
		if (param2.GetParameterValueCaption().ToString() == ""E"")
		{
			if (!string.IsNullOrEmpty(__Result))
			{
				__Result = __Result + ""; "";
			}
			__Result = __Result + ""Програма Е/Program E"";
		}
	}
}
",,921
922,OrantaTravelDeductible,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.InsuranceObject insuranceObject = program.InsuranceObjects.FirstOrDefault(i => i.GetInsuranceObjectTypeName() == ""Об’єкт страхування"");
	if (insuranceObject != null)
	{
		Workflow.DTO.Models.Cover cover = insuranceObject.Covers[0];
		if (cover != null)
		{
			Workflow.DTO.Models.Franchise franchise = cover.Franchises[0];
			if (franchise != null)
			{
				decimal value = (decimal)franchise.GetFranchiseValueCaption();
				__Result = value.ToString(""N2"");
			}
		}
	}
}
",,922
923,OrantaTravelCurrency,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Валюта"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaption().ToString();
	}
}
",,923
924,OrantaTravelSports,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Відпочинок з риз. видами спорта"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() != ""False"")
		{
			__Result = ""V"";
		}
	}
}
",,924
925,OrantaTravelTerritory2OrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Територія дії договору"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""Територія II"" || param.GetParameterValueCaption().ToString() == ""Територія II (всі країни, крім країн Америки)"")
		{
			__Result = ""V"";
		}
	}
}
",,925
926,OrantaTravelTerritory1OrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Територія дії договору"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""Територія I"" || param.GetParameterValueCaption().ToString() == ""Територія I (країни Європи та Шенгену)"")
		{
			__Result = ""V"";
		}
	}
}
",,926
927,OrantaTravelProgramDOrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Програма  страхування"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""D"")
		{
			__Result = ""V"";
		}
	}
}
",,927
928,OrantaTravelProgramCOrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Програма  страхування"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""C"")
		{
			__Result = ""V"";
		}
	}
}
",,928
929,OrantaTravelProgramBOrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Програма  страхування"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""B"")
		{
			__Result = ""V"";
		}
	}
}
",,929
930,OrantaTravelProgramAOrNot,"__Result = ""----"";
Workflow.DTO.Models.Program program = GetProgramMed;
if (program != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = program.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Програма  страхування"");
	if (param != null)
	{
		if (param.GetParameterValueCaption().ToString() == ""A"")
		{
			__Result = ""V"";
		}
	}
}
",,930
931,OrantaMtplDocumentIssuer,"__Result = """";
Workflow.DTO.Models.Document doc = GetMtplInsurerDocument;
if (doc != null)
{
	__Result = doc.IssuedBy;
}
",,931
932,OrantaMtplDocumentIssuedDate,"__Result = """";
Workflow.DTO.Models.Document doc = GetMtplInsurerDocument;
if (doc != null && doc.IssuedDate != null)
{
	__Result = doc.IssuedDate.Value != null ? doc.IssuedDate.Value.ToString(""dd MM yyyy"") : """";
}
",,932
933,OrantaMtplDocumentNumber,"Workflow.DTO.Models.Document doc = GetMtplInsurerDocument;
__Result = """";
if (doc != null && doc.Number != null)
{
	__Result = doc.Number.IndexOf(""-"") != -1 ? doc.Number.Substring(doc.Number.IndexOf(""-"") + 1, doc.Number.Length - doc.Number.IndexOf(""-"") - 1) : doc.Number;
}
",,933
934,OrantaMtplDocumentSerie,"Workflow.DTO.Models.Document doc = GetMtplInsurerDocument;
__Result = """";
if (doc != null && doc.Number != null)
{
	__Result = doc.Number.IndexOf(""-"") != -1 ? doc.Number.Substring(0, doc.Number.IndexOf(""-"")) : """";
}
",,934
935,OrantaMtplDocumentName,"__Result = """";
Workflow.DTO.Models.Document doc = GetMtplInsurerDocument;
if (doc != null)
{
	__Result = doc.GetDocumentTypeName() == ""Біометричний паспорт (ІД картка)"" ? ""Паспорт"" : doc.GetDocumentTypeName();
}
",,935
936,InsuredPerson1INN,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	__Result = f.IdentificationCode;
}
",,936
937,InsuredPerson1Passport,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face face = (Workflow.DTO.Models.Face)liob[0].Object;
	List<Workflow.DTO.Models.Document> documents = face.Documents.Where(i => i.GetDocumentTypeName() == ""Закордонний паспорт"");
	int i = 0;
	int maxId = -1;
	Workflow.DTO.Models.Document document;
	while (i < documents.Count())
	{
		if (documents[i].id > maxId)
		{
			document = documents[i];
			maxId = documents[i].id;
		}
		i = i + 1;
	}
	if (document != null)
	{
		__Result = document.Number;
	}
}
",,937
938,InsuredPerson1NameAndFirstNameEng,"List<Workflow.DTO.Models.InsuranceObject> liob = GetInsuranceObject;
__Result = """";
if (liob.Count() > 0)
{
	Workflow.DTO.Models.Face f = (Workflow.DTO.Models.Face)liob[0].Object;
	__Result = f.FullNameEnglish;
}
",,938
939,TotalPaymentOranta,"decimal value = GetProgramInsuranceSumAndAccident;
__Result = value.ToString(""N2"");
",,939
940,MedAmateurName,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue param = prog.Parameters.FirstOrDefault(pr => pr.GetParameterName() == ""Спортивна категорія"");
	if (param != null)
	{
		__Result = param.GetParameterValueCaptionNotLocalized().ToString() != ""-немає-"" ? param.GetParameterValueCaptionNotLocalized().ToString() : ""-----"";
	}
}
",,940
941,AccidentPaymentSumDollar,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null)
	{
		__Result = paramCurr.GetParameterValueCaption().ToString();
	}
	else
	{
			if (paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
		{
			decimal calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
			__Result = __Context.ExchangePrimaryMoney(calculatedPayment, ""USD"", __Product.RegisteredDate).ToString(""N2"");
		}
	}
}
",,941
942,AccidentPaymentSumEURO,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null)
	{
		__Result = paramCurr.GetParameterValueCaption().ToString();
	}
	else
	{
			if (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR"")
		{
			decimal calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
			__Result = __Context.ExchangePrimaryMoney(calculatedPayment, ""EUR"", __Product.RegisteredDate).ToString(""N2"");
		}
	}
}
",,942
943,AccidentInsuranceSumDollar,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString()) * prog.InsuranceObjects.Count();
		__Result = resultSum.ToString();
	}
}
",,943
944,AccidentInsuranceSumEURO,"Workflow.DTO.Models.Program prog = GetProgramAccident;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR""))
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString()) * prog.InsuranceObjects.Count();
		__Result = resultSum.ToString(""N0"");
	}
}
",,944
945,MedPaymentSumDollar,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null)
	{
		__Result = paramCurr.GetParameterValueCaption().ToString();
	}
	else
	{
			if (paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
		{
			decimal calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
			__Result = __Context.ExchangePrimaryMoney(calculatedPayment, ""USD"", __Product.RegisteredDate).ToString(""N2"");
		}
	}
}
",,945
946,MedPaymentSumEURO,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страховий платіж в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null)
	{
		__Result = paramCurr.GetParameterValueCaption().ToString();
	}
	else
	{
			if (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR"")
		{
			decimal calculatedPayment = __Product.PaymentPeriods.Sum(pp => pp.PlanedPayments.Where(pp1 => pp1.ProgramGID == prog.gid).Sum(pp1 => pp1.Value));
			__Result = __Context.ExchangePrimaryMoney(calculatedPayment, ""EUR"", __Product.RegisteredDate).ToString(""N2"");
		}
	}
}
",,946
947,MedInsuranceSumDollar,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в USD"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && paramCurrency.GetParameterValueCaption().ToString() == ""USD"")
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString()) * prog.InsuranceObjects.Count();
		__Result = resultSum.ToString();
	}
}
",,947
948,MedInsuranceSumEURO,"Workflow.DTO.Models.Program prog = GetProgramMed;
__Result = ""-----"";
if (prog != null)
{
	Workflow.DTO.Models.ProgramParameterValue paramCurr = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Страхова сума в EURO"");
	Workflow.DTO.Models.ProgramParameterValue paramCurrency = prog.Parameters.FirstOrDefault(pr => pr.GetParameterCaption() == ""Валюта"");
	if (paramCurr != null && (paramCurrency.GetParameterValueCaption().ToString() == ""EURO"" || paramCurrency.GetParameterValueCaption().ToString() == ""EUR""))
	{
		decimal resultSum = decimal.Parse(paramCurr.GetParameterValueCaption().ToString()) * prog.InsuranceObjects.Count();
		__Result = resultSum.ToString(""N0"");
	}
}
",,948
949,BranchNameFromParameter,"Workflow.DTO.Models.ProgramParameterValue parameter = __Product.Programs[0].Parameters.FirstOrDefault(p => p.GetParameterName() == ""Місце укладання"");
if (parameter != null)
{
	__Result = parameter.ParameterValue.ToString();
}
if (string.IsNullOrEmpty(__Result))
{
	__Result = __Product.GetBranchName();
}
",,949
950,DirectionCode,"__Result = ""---"";
Workflow.DTO.Models.Branch direction = __Context.GetDirectionBranch(__Product.BranchGID);
if (direction != null && direction.OrganizationGID != null)
{
	Workflow.DTO.Models.Face directorFace = (Workflow.DTO.Models.Face)__Context.GetObject(direction.OrganizationGID);
	if (directorFace != null)
	{
		__Result = directorFace.EDRPOU;
	}
}
",,950
